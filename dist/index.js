!function(){"use strict";let t=class extends Error{name="ConductorError";errorType="__unknown";constructor(t){super(t)}};class e extends t{name="ConductorInternalError";errorType="__internal";constructor(t){super(t)}}async function s(t){return(await import(t)).plugin}let n=class t{t=[];i=[];push(t){this.i.push(t)}pop(){if(0===this.t.length){if(0===this.i.length)throw new Error("queue is empty");let t=this.t;this.t=this.i.reverse(),this.i=t}return this.t.pop()}get length(){return this.t.length+this.i.length}clone(){const e=new t;return e.t=[...this.t],e.i=[...this.i],e}},i=class{h=new n;u=new n;push(t){0!==this.u.length?this.u.pop()(t):this.h.push(t)}async pop(){return 0!==this.h.length?this.h.pop():new Promise(((t,e)=>{this.u.push(t)}))}tryPop(){if(0!==this.h.length)return this.h.pop()}constructor(){this.push=this.push.bind(this)}},r=class{name;t;i=new i;async receive(){return this.i.pop()}tryReceive(){return this.i.tryPop()}send(t,e){this.t.send(t,e)}close(){this.t.unsubscribe(this.i.push)}constructor(t){this.name=t.name,this.t=t,this.t.subscribe(this.i.push)}},o=class{type=0;data;constructor(t,e,s){this.data={fn:t,args:e,invokeId:s}}},a=class{type=2;data;constructor(t,e){this.data={invokeId:t,err:e}}},c=class{type=1;data;constructor(t,e){this.data={invokeId:t,res:e}}};var h;!function(t){t[t.VOID=0]="VOID",t[t.BOOLEAN=1]="BOOLEAN",t[t.NUMBER=2]="NUMBER",t[t.CONST_STRING=3]="CONST_STRING",t[t.EMPTY_LIST=4]="EMPTY_LIST",t[t.PAIR=5]="PAIR",t[t.ARRAY=6]="ARRAY",t[t.CLOSURE=7]="CLOSURE",t[t.OPAQUE=8]="OPAQUE",t[t.LIST=9]="LIST"}(h||(h={}));let l=class{type=1;data;constructor(t){this.data={minVersion:t}}};class u{type=0;data={version:0}}class d{type=3;data;constructor(t){this.data=t}}class p{name="__runner_main";t;i;o;u;h;l;_;p;m;v=new Map([[0,function(t){t.data.version<0?(this.l.send(new l(0)),console.error(`Host's protocol version (${t.data.version}) must be at least 0`)):console.log(`Host is using protocol version ${t.data.version}`)}],[1,function(t){console.error(`Host expects at least protocol version ${t.data.minVersion}, but we are on version 0`),this.o.terminate()}],[2,function(t){this.t.startEvaluator(t.data)}]]);requestFile(t){return this.u.requestFile(t)}async requestChunk(){return(await this.h.receive()).chunk}async requestInput(){const{message:t}=await this._.receive();return t}tryRequestInput(){const t=this._.tryReceive();return t?.message}sendOutput(t){this._.send({message:t})}sendError(t){this.p.send({error:t})}updateStatus(t,e){this.m.send({status:t,isActive:e})}hostLoadPlugin(t){this.l.send(new d(t))}registerPlugin(t,...e){return this.o.registerPlugin(t,...e)}unregisterPlugin(t){this.o.unregisterPlugin(t)}registerModule(t){if(!this.i)throw new e("Evaluator has no data interface");return this.registerPlugin(t,this.t)}unregisterModule(t){this.unregisterPlugin(t)}async importAndRegisterExternalPlugin(t){const e=await s(t);return this.registerPlugin(e)}async importAndRegisterExternalModule(t){const e=await async function(t){return await s(t)}(t);return this.registerModule(e)}static channelAttach=["__file_rpc","__chunk","__service","__stdio","__error","__status"];constructor(t,[e,s,n,i,h,l],d){this.o=t,this.u=function(t,e){const s=[];let n=0;return t.subscribe((async n=>{switch(n.type){case 0:{const{fn:s,args:i,invokeId:r}=n.data;try{const n=await e[s](...i);r>0&&t.send(new c(r,n))}catch(e){r>0&&t.send(new a(r,e))}break}case 1:{const{invokeId:t,res:e}=n.data;s[t]?.[0]?.(e),delete s[t];break}case 2:{const{invokeId:t,err:e}=n.data;s[t]?.[1]?.(e),delete s[t];break}}})),new Proxy({},{get(e,i,r){const a=Reflect.get(e,i,r);if(a)return a;const c="string"==typeof i&&"$"===i.charAt(0)?(...e)=>{t.send(new o(i,e,0))}:(...e)=>{const r=++n;return t.send(new o(i,e,r)),new Promise(((t,e)=>{s[r]=[t,e]}))};return Reflect.set(e,i,c,r),c}})}(e,{}),this.h=new r(s),this.l=n,this._=new r(i),this.p=h,this.m=l,this.l.send(new u),this.l.subscribe((t=>{this.v.get(t.type)?.call(this,t)})),this.t=new d(this),this.i=this.t.hasDataInterface??!1}}class g{name;t;i=new Set;h=!0;o=[];send(t,e){this.l(),this.t.postMessage(t,e??[])}subscribe(t){if(this.l(),this.i.add(t),this.o){for(const e of this.o)t(e);delete this.o}}unsubscribe(t){this.l(),this.i.delete(t)}close(){this.l(),this.h=!1,this.t?.close()}l(){if(!this.h)throw new e(`Channel ${this.name} has been closed`)}_(t){if(this.l(),this.o)this.o.push(t);else for(const e of this.i)e(t)}listenToPort(t){t.addEventListener("message",(t=>this._(t.data))),t.start()}replacePort(t){this.l(),this.t?.close(),this.t=t,this.listenToPort(t)}constructor(t,e){this.name=t,this.replacePort(e)}}class f{u=!0;p;m;C=new Map;P=new Map;v=[];M(t){const{port1:e,port2:s}=new MessageChannel,n=new g(t,e);this.p.postMessage([t,s],[s]),this.C.set(t,n)}l(){if(!this.u)throw new e("Conduit already terminated")}registerPlugin(t,...s){this.l();const n=[];for(const e of t.channelAttach)this.C.has(e)||this.M(e),n.push(this.C.get(e));const i=new t(this,n,...s);if(void 0!==i.name){if(this.P.has(i.name))throw new e(`Plugin ${i.name} already registered`);this.P.set(i.name,i)}return this.v.push(i),i}unregisterPlugin(t){this.l();let e=0;for(let s=0;s<this.v.length;++s)this.v[e]===t&&++e,this.v[s]=this.v[s+e];for(let t=this.v.length-1,s=this.v.length-e;t>=s;--t)delete this.v[t];t.name&&this.P.delete(t.name),t.destroy?.()}lookupPlugin(t){if(this.l(),!this.P.has(t))throw new e(`Plugin ${t} not registered`);return this.P.get(t)}terminate(){this.l();for(const t of this.v)t.destroy?.();this.p.terminate?.(),this.u=!1}j(t){const[e,s]=t;if(this.C.has(e)){const t=this.C.get(e);this.m?t.listenToPort(s):t.replacePort(s)}else{const t=new g(e,s);this.C.set(e,t)}}constructor(t,e=!1){this.p=t,t.addEventListener("message",(t=>this.j(t.data))),this.m=e}}class x{conductor;async startEvaluator(t){const s=await this.conductor.requestFile(t);if(!s)throw new e("Cannot load entrypoint file");for(await this.evaluateFile(t,s);;){const t=await this.conductor.requestChunk();await this.evaluateChunk(t)}}async evaluateFile(t,e){return this.evaluateChunk(e)}constructor(t){this.conductor=t}}var m,T,S,E,A=Object.defineProperty,C=(t,e)=>A(t,"name",{value:e,configurable:!0});(T=m||(m={})).EOF=-1,T.UNKNOWN_SOURCE_NAME="<unknown>",(E=S||(S={})).INVALID_TYPE=0,E.EPSILON=-2,E.MIN_USER_TOKEN_TYPE=1,E.EOF=m.EOF,E.DEFAULT_CHANNEL=0,E.HIDDEN_CHANNEL=1,E.MIN_USER_CHANNEL_VALUE=2;var k=C((t=>{const e=t;return void 0!==e.tokenSource&&void 0!==e.channel}),"isToken"),y=class{static{C(this,"BitSet")}data;constructor(t){this.data=t?new Uint32Array(t.map((t=>t>>>0))):new Uint32Array(1)}[Symbol.iterator](){const t=this.data.length;let e=0,s=this.data[e];const n=this.data;return{[Symbol.iterator](){return this},next:C((()=>{for(;e<t;){if(0!==s){const t=s&-s,n=(e<<5)+this.bitCount(t-1);return s^=t,{done:!1,value:n}}e++,e<t&&(s=n[e])}return{done:!0,value:void 0}}),"next")}}clear(t){void 0===t?this.data=new Uint32Array:(this.resize(t),this.data[t>>>5]&=~(1<<t))}or(t){const e=Math.min(this.data.length,t.data.length);for(let s=0;s<e;++s)this.data[s]|=t.data[s];if(this.data.length<t.data.length){this.resize((t.data.length<<5)-1);const s=t.data.length;for(let n=e;n<s;++n)this.data[n]=t.data[n]}}get(t){if(t<0)throw new RangeError("index cannot be negative");const e=t>>>5;return!(e>=this.data.length)&&!!(this.data[e]&1<<t%32)}get length(){let t=0;const e=this.data.length,s=this.data;for(let n=0;n<e;n++)t+=this.bitCount(s[n]);return t}values(){const t=new Array(this.length);let e=0;const s=this.data.length;for(let n=0;n<s;++n){let s=this.data[n];for(;0!==s;){const i=s&-s;t[e++]=(n<<5)+this.bitCount(i-1),s^=i}}return t}nextSetBit(t){if(t<0)throw new RangeError("index cannot be negative");for(const e of this)if(e>=t)return e}set(t){if(t<0)throw new RangeError("index cannot be negative");this.resize(t),this.data[t>>>5]|=1<<t%32}toString(){return"{"+this.values().join(", ")+"}"}resize(t){const e=t+32>>>5;if(e<=this.data.length)return;const s=new Uint32Array(e);s.set(this.data),s.fill(0,this.data.length),this.data=s}bitCount(t){return t=(t=(858993459&(t-=t>>1&1431655765))+(t>>2&858993459))+(t>>4)&252645135,t+=t>>8,63&(t+=t>>16)}},N=class t{static{C(this,"MurmurHash")}static defaultSeed=701;constructor(){}static initialize(e=t.defaultSeed){return e}static updateFromComparable(t,e){return this.update(t,e?.hashCode()??0)}static update(t,e){return e=(e=Math.imul(e,3432918353))<<15|e>>>17,t=(t^=e=Math.imul(e,461845907))<<13|t>>>19,t=Math.imul(t,5)+3864292196}static finish(t,e){return t^=4*e,t^=t>>>16,t=Math.imul(t,2246822507),t^=t>>>13,t=Math.imul(t,3266489909),t^=t>>>16}static hashCode(e,s){return t.finish(t.update(s??t.defaultSeed,e),1)}},I=class t{static{C(this,"ObjectEqualityComparator")}static instance=new t;hashCode(t){return null==t?0:t.hashCode()}equals(t,e){return null==t?null==e:t.equals(e)}},v=class t{static{C(this,"DefaultEqualityComparator")}static instance=new t;hashCode(t){return null==t?0:I.instance.hashCode(t)}equals(t,e){return null==t?null==e:"string"==typeof t||"number"==typeof t?t===e:I.instance.equals(t,e)}},L=class t{static{C(this,"HashSet")}static defaultLoadFactor=.75;static initialCapacity=16;comparator;buckets;threshold;itemCount=0;constructor(e,s=t.initialCapacity){if(e instanceof t){this.comparator=e.comparator,this.buckets=e.buckets.slice(0);for(let t=0;t<this.buckets.length;t++){const e=this.buckets[t];e&&(this.buckets[t]=e.slice(0))}this.itemCount=e.itemCount,this.threshold=e.threshold}else this.comparator=e??v.instance,this.buckets=this.createBuckets(s),this.threshold=Math.floor(t.initialCapacity*t.defaultLoadFactor)}getOrAdd(t){this.itemCount>this.threshold&&this.expand();const e=this.getBucket(t);let s=this.buckets[e];if(!s)return s=[t],this.buckets[e]=s,++this.itemCount,t;for(const e of s)if(this.comparator.equals(e,t))return e;return s.push(t),++this.itemCount,t}get(t){if(null==t)return t;const e=this.getBucket(t),s=this.buckets[e];if(s)for(const e of s)if(this.comparator.equals(e,t))return e}remove(t){if(null==t)return!1;const e=this.getBucket(t),s=this.buckets[e];if(!s)return!1;for(let e=0;e<s.length;e++){const n=s[e];if(this.comparator.equals(n,t))return s.splice(e,1),--this.itemCount,!0}return!1}hashCode(){let t=N.initialize();for(const e of this.buckets)if(null!=e)for(const s of e){if(null==s)break;t=N.update(t,this.comparator.hashCode(s))}return t=N.finish(t,this.size),t}equals(e){return e===this||e instanceof t&&(e.size===this.size&&this.containsAll(e))}add(t){return this.getOrAdd(t)===t}contains(t){return this.containsFast(t)}containsFast(t){return null!=t&&void 0!==this.get(t)}*[Symbol.iterator](){yield*this.toArray()}toArray(){const t=new Array(this.size);let e=0;for(const s of this.buckets)if(null!=s)for(const n of s){if(null==n)break;t[e++]=n}return t}containsAll(e){if(e instanceof t){for(const t of e.buckets)if(null!=t)for(const e of t){if(null==e)break;if(!this.containsFast(e))return!1}}else for(const t of e)if(!this.containsFast(t))return!1;return!0}addAll(t){let e=!1;for(const s of t){this.getOrAdd(s)!==s&&(e=!0)}return e}clear(){this.buckets=this.createBuckets(t.initialCapacity),this.itemCount=0,this.threshold=Math.floor(t.initialCapacity*t.defaultLoadFactor)}toString(){if(0===this.size)return"{}";let t="{",e=!0;for(const s of this.buckets)if(null!=s)for(const n of s){if(null==n)break;e?e=!1:t+=", ",t+=n.toString()}return t+="}",t}toTableString(){let t="";for(const e of this.buckets){if(null==e){t+="null\n";continue}t+="[";let s=!0;for(const n of e)s?s=!1:t+=" ",t+=null==n?"_":n.toString();t+="]\n"}return t}getBucket(t){return this.comparator.hashCode(t)&this.buckets.length-1}expand(){const e=this.buckets,s=2*this.buckets.length,n=this.createBuckets(s);this.buckets=n,this.threshold=Math.floor(s*t.defaultLoadFactor);for(const t of e)if(t)for(const e of t){const t=this.getBucket(e);let s=this.buckets[t];s||(s=[],this.buckets[t]=s),s.push(e)}}get size(){return this.itemCount}get isEmpty(){return 0===this.itemCount}createBuckets(t){return new Array(t)}},w=class t{static{C(this,"Interval")}static INVALID_INTERVAL=new t(-1,-2);static INTERVAL_POOL_MAX_VALUE=1e3;static cache=[];start;stop;cachedHashCode;constructor(t,e){this.start=t,this.stop=e,this.cachedHashCode=Math.imul(651+t,31)+e}static of(e,s){return e!==s||e<0||e>t.INTERVAL_POOL_MAX_VALUE?new t(e,s):(t.cache[e]||(t.cache[e]=new t(e,e)),t.cache[e])}equals(t){return this.start===t.start&&this.stop===t.stop}hashCode(){return this.cachedHashCode}startsBeforeDisjoint(t){return this.start<t.start&&this.stop<t.start}startsBeforeNonDisjoint(t){return this.start<=t.start&&this.stop>=t.start}startsAfter(t){return this.start>t.start}startsAfterDisjoint(t){return this.start>t.stop}startsAfterNonDisjoint(t){return this.start>t.start&&this.start<=t.stop}disjoint(t){return this.startsBeforeDisjoint(t)||this.startsAfterDisjoint(t)}adjacent(t){return this.start===t.stop+1||this.stop===t.start-1}properlyContains(t){return t.start>=this.start&&t.stop<=this.stop}union(e){return t.of(Math.min(this.start,e.start),Math.max(this.stop,e.stop))}intersection(e){return t.of(Math.max(this.start,e.start),Math.min(this.stop,e.stop))}differenceNotProperlyContained(e){let s=null;return e.startsBeforeNonDisjoint(this)?s=t.of(Math.max(this.start,e.stop+1),this.stop):e.startsAfterNonDisjoint(this)&&(s=t.of(this.start,e.start-1)),s}toString(){return`${this.start}..${this.stop}`}get length(){return this.stop<this.start?0:this.stop-this.start+1}},R=class t{static{C(this,"Vocabulary")}static EMPTY_NAMES=[];static EMPTY_VOCABULARY=new t(t.EMPTY_NAMES,t.EMPTY_NAMES,t.EMPTY_NAMES);maxTokenType;literalNames;symbolicNames;displayNames;constructor(e,s,n){this.literalNames=e??t.EMPTY_NAMES,this.symbolicNames=s??t.EMPTY_NAMES,this.displayNames=n??t.EMPTY_NAMES,this.maxTokenType=Math.max(this.displayNames.length,Math.max(this.literalNames.length,this.symbolicNames.length))-1}static fromTokenNames(e){if(null==e||0===e.length)return t.EMPTY_VOCABULARY;const s=[...e],n=[...e];for(let t=0;t<e.length;t++){const i=e[t];if(null!=i){if(i.length>0){const e=i.codePointAt(0);if(39===e){n[t]=null;continue}if(e>=65&&e<=90){s[t]=null;continue}}s[t]=null,n[t]=null}}return new t(s,n,e)}getMaxTokenType(){return this.maxTokenType}getLiteralName(t){return t>=0&&t<this.literalNames.length?this.literalNames[t]:null}getSymbolicName(t){return t>=0&&t<this.symbolicNames.length?this.symbolicNames[t]:t===S.EOF?"EOF":null}getDisplayName(t){if(t>=0&&t<this.displayNames.length){const e=this.displayNames[t];if(null!=e)return e}const e=this.getLiteralName(t);if(null!=e)return e;const s=this.getSymbolicName(t);return null!=s?s:`${t}`}getLiteralNames(){return this.literalNames}getSymbolicNames(){return this.symbolicNames}getDisplayNames(){return this.displayNames}},b=class t{static{C(this,"IntervalSet")}intervals=[];cachedHashCode;constructor(t){if(t)if(Array.isArray(t))for(const e of t)this.addOne(e);else this.addSet(t)}static of(e,s){const n=new t;return n.addRange(e,s),n}static or(e){const s=new t;for(const t of e)s.addSet(t);return s}[Symbol.iterator](){return this.intervals[Symbol.iterator]()}get(t){return this.intervals[t]}get minElement(){return 0===this.intervals.length?S.INVALID_TYPE:this.intervals[0].start}get maxElement(){return 0===this.intervals.length?S.INVALID_TYPE:this.intervals[this.intervals.length-1].stop}clear(){this.cachedHashCode=void 0,this.intervals=[]}addOne(t){this.addInterval(new w(t,t))}addRange(t,e){this.addInterval(new w(t,e))}addInterval(t){if(this.cachedHashCode=void 0,0===this.intervals.length)this.intervals.push(t);else{for(let e=0;e<this.intervals.length;e++){const s=this.intervals[e];if(t.equals(s))return;if(t.adjacent(s)||!t.disjoint(s)){const n=t.union(s);this.intervals[e]=n;for(let t=e+1;t<this.intervals.length;){const s=this.intervals[t];if(!n.adjacent(s)&&n.disjoint(s))break;this.intervals.splice(t,1),this.intervals[e]=n.union(s)}return}if(t.startsBeforeDisjoint(s))return void this.intervals.splice(e,0,t)}this.intervals.push(t)}}addSet(t){return t.intervals.forEach((t=>this.addInterval(t)),this),this}complementWithVocabulary(e){const s=new t;return e?0===e.length?s:(s.addSet(e),s.subtract(this)):s}complement(e,s){const n=new t;return n.addInterval(new w(e,s)),n.subtract(this)}or(e){const s=new t;return s.addSet(this),e.forEach((t=>s.addSet(t))),s}and(e){if(0===e.length)return new t;const s=this.intervals,n=e.intervals;let i;const r=s.length,o=n.length;let a=0,c=0;for(;a<r&&c<o;){const e=s[a],r=n[c];e.startsBeforeDisjoint(r)?a++:r.startsBeforeDisjoint(e)?c++:e.properlyContains(r)?(i||(i=new t),i.addInterval(e.intersection(r)),c++):r.properlyContains(e)?(i||(i=new t),i.addInterval(e.intersection(r)),a++):e.disjoint(r)||(i||(i=new t),i.addInterval(e.intersection(r)),e.startsAfterNonDisjoint(r)?c++:r.startsAfterNonDisjoint(e)&&a++)}return i||new t}subtract(e){if(0===this.length)return new t;const s=new t(this);if(0===e.length)return s;let n=0,i=0;for(;n<s.intervals.length&&i<e.intervals.length;){const t=s.intervals[n],r=e.intervals[i];if(r.stop<t.start){i++;continue}if(r.start>t.stop){n++;continue}let o,a;r.start>t.start&&(o=new w(t.start,r.start-1)),r.stop<t.stop&&(a=new w(r.stop+1,t.stop)),o?a?(s.intervals[n]=o,s.intervals.splice(n+1,0,a),n++,i++):(s.intervals[n]=o,n++):a?(s.intervals[n]=a,i++):s.intervals.splice(n,1)}return s}contains(t){let e=0,s=this.intervals.length-1;for(;e<=s;){const n=Math.floor((e+s)/2),i=this.intervals[n];if(i.stop<t)e=n+1;else{if(!(i.start>t))return!0;s=n-1}}return!1}removeRange(t){if(this.cachedHashCode=void 0,t.start===t.stop)this.removeOne(t.start);else if(null!==this.intervals){let e=0;for(const s of this.intervals){if(t.stop<=s.start)return;if(t.start>s.start&&t.stop<s.stop){this.intervals[e]=new w(s.start,t.start);const n=new w(t.stop,s.stop);return void this.intervals.splice(e,0,n)}t.start<=s.start&&t.stop>=s.stop?(this.intervals.splice(e,1),e-=1):t.start<s.stop?this.intervals[e]=new w(s.start,t.start):t.stop<s.stop&&(this.intervals[e]=new w(t.stop,s.stop)),e+=1}}}removeOne(t){this.cachedHashCode=void 0;for(let e=0;e<this.intervals.length;e++){const s=this.intervals[e];if(t<s.start)return;if(t===s.start&&t===s.stop)return void this.intervals.splice(e,1);if(t===s.start)return void(this.intervals[e]=new w(s.start+1,s.stop));if(t===s.stop)return void(this.intervals[e]=new w(s.start,s.stop-1));if(t<s.stop){const n=new w(s.start,t-1);return this.intervals[e]=new w(t+1,s.stop),void this.intervals.splice(e,0,n)}}}hashCode(){if(void 0===this.cachedHashCode){let t=N.initialize();for(const e of this.intervals)t=N.update(t,e.start),t=N.update(t,e.stop);this.cachedHashCode=N.finish(t,2*this.intervals.length)}return this.cachedHashCode}equals(t){if(this===t)return!0;if(this.intervals.length!==t.intervals.length)return!1;for(let e=0;e<this.intervals.length;e++)if(!this.intervals[e].equals(t.intervals[e]))return!1;return!0}toString(t){if(0===this.intervals.length)return"{}";let e="";this.length>1&&(e+="{");for(let s=0;s<this.intervals.length;++s){const n=this.intervals[s],i=n.start,r=n.stop;i===r?i===S.EOF?e+="<EOF>":e+=t?"'"+String.fromCodePoint(i)+"'":i:e+=t?"'"+String.fromCodePoint(i)+"'..'"+String.fromCodePoint(r)+"'":i+".."+r,s<this.intervals.length-1&&(e+=", ")}return this.length>1&&(e+="}"),e}toStringWithVocabulary(t){if(0===this.intervals.length)return"{}";let e="";this.length>1&&(e+="{");for(let s=0;s<this.intervals.length;++s){const n=this.intervals[s],i=n.start,r=n.stop;if(i===r)i===S.EOF?e+="<EOF>":e+=this.elementName(t,i);else for(let s=i;s<=r;++s)s>i&&(e+=", "),e+=this.elementName(t,s);s<this.intervals.length-1&&(e+=", ")}return this.length>1&&(e+="}"),e}toStringWithRuleNames(t){if(0===this.intervals.length)return"{}";let e="";this.length>1&&(e+="{");const s=R.fromTokenNames(t);for(let t=0;t<this.intervals.length;++t){const n=this.intervals[t],i=n.start,r=n.stop;if(i===r)i===S.EOF?e+="<EOF>":e+=this.elementName(s,i);else for(let t=i;t<=r;++t)t>i&&(e+=", "),e+=this.elementName(s,t);t<this.intervals.length-1&&(e+=", ")}return this.length>1&&(e+="}"),e}toArray(){const t=[];for(const e of this.intervals)for(let s=e.start;s<=e.stop;s++)t.push(s);return t}get length(){let t=0;for(const e of this.intervals)t+=e.length;return t}elementName(t,e){return e===S.EOF?"<EOF>":e===S.EPSILON?"<EPSILON>":t.getDisplayName(e)}},O=C((t=>null===t?"null":t),"valueToString"),D=C((t=>Array.isArray(t)?"["+t.map(O).join(", ")+"]":"null"),"arrayToString"),_=C(((t,e)=>{if(t===e)return!0;if(t.length!==e.length)return!1;for(let s=0;s<t.length;s++){const n=t[s],i=e[s];if(n!==i&&(!n||!n.equals(i)))return!1}return!0}),"equalArrays"),P=C(((t,e)=>{if(t===e)return!0;if(t.length!==e.length)return!1;for(let s=0;s<t.length;s++)if(t[s]!==e[s])return!1;return!0}),"equalNumberArrays"),F=C(((t,e=!1)=>(t=t.replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r"),e&&(t=t.replace(/ /g,"·")),t)),"escapeWhitespace"),M=class t{static{C(this,"SemanticContext")}cachedHashCode;static andContext(e,s){if(null===e||e===t.NONE)return s;if(null===s||s===t.NONE)return e;const n=new U(e,s);return 1===n.operands.length?n.operands[0]:n}static orContext(e,s){if(null===e)return s;if(null===s)return e;if(e===t.NONE||s===t.NONE)return t.NONE;const n=new B(e,s);return 1===n.operands.length?n.operands[0]:n}static filterPrecedencePredicates(e){const s=[];for(const n of e)n instanceof t.PrecedencePredicate&&s.push(n);return s}evalPrecedence(t,e){return this}},U=class t extends M{static{C(this,"AND")}operands;constructor(e,s){super();const n=new L;e instanceof t?e.operands.forEach((t=>{n.add(t)})):n.add(e),s instanceof t?s.operands.forEach((t=>{n.add(t)})):n.add(s);const i=M.filterPrecedencePredicates(n);if(i.length>0){let t=null;i.forEach((e=>{(null===t||e.precedence<t.precedence)&&(t=e)})),t&&n.add(t)}this.operands=n.toArray()}equals(e){return this===e||e instanceof t&&_(this.operands,e.operands)}hashCode(){if(void 0===this.cachedHashCode){let t=N.initialize();for(const e of this.operands)t=N.updateFromComparable(t,e);t=N.update(t,3813686060),this.cachedHashCode=N.finish(t,this.operands.length+1)}return this.cachedHashCode}evaluate(t,e){for(const s of this.operands)if(!s.evaluate(t,e))return!1;return!0}evalPrecedence(t,e){let s=!1;const n=[];for(const i of this.operands){const r=i.evalPrecedence(t,e);if(s||=r!==i,null===r)return null;r!==M.NONE&&n.push(r)}if(!s)return this;if(0===n.length)return M.NONE;let i=null;return n.forEach((t=>{i=null===i?t:M.andContext(i,t)})),i}toString(){const t=this.operands.map((t=>t.toString()));return(t.length>3?t.slice(3):t).join("&&")}},B=class t extends M{static{C(this,"OR")}operands;constructor(e,s){super();const n=new L;e instanceof t?e.operands.forEach((t=>{n.add(t)})):n.add(e),s instanceof t?s.operands.forEach((t=>{n.add(t)})):n.add(s);const i=M.filterPrecedencePredicates(n);if(i.length>0){const t=i.sort(((t,e)=>t.compareTo(e))),e=t[t.length-1];n.add(e)}this.operands=n.toArray()}equals(e){return this===e||e instanceof t&&_(this.operands,e.operands)}hashCode(){if(void 0===this.cachedHashCode){let t=N.initialize();for(const e of this.operands)t=N.updateFromComparable(t,e);t=N.update(t,3383313031),this.cachedHashCode=N.finish(t,this.operands.length+1)}return this.cachedHashCode}evaluate(t,e){for(const s of this.operands)if(s.evaluate(t,e))return!0;return!1}evalPrecedence(t,e){let s=!1;const n=[];for(const i of this.operands){const r=i.evalPrecedence(t,e);if(s||=r!==i,r===M.NONE)return M.NONE;null!==r&&n.push(r)}if(!s)return this;if(0===n.length)return null;let i=null;return n.forEach((t=>{i=null===i?t:M.orContext(i,t)})),i}toString(){const t=this.operands.map((t=>t.toString()));return(t.length>3?t.slice(3):t).join("||")}};(t=>{class e extends t{static{C(this,"Predicate")}ruleIndex;predIndex;isCtxDependent;constructor(t,e,s){super(),this.ruleIndex=t??-1,this.predIndex=e??-1,this.isCtxDependent=s??!1}evaluate(t,e){const s=this.isCtxDependent?e:null;return t.sempred(s,this.ruleIndex,this.predIndex)}hashCode(){if(void 0===this.cachedHashCode){let t=N.initialize();t=N.update(t,this.ruleIndex),t=N.update(t,this.predIndex),t=N.update(t,this.isCtxDependent?1:0),t=N.finish(t,3),this.cachedHashCode=t}return this.cachedHashCode}equals(t){return this===t||this.ruleIndex===t.ruleIndex&&this.predIndex===t.predIndex&&this.isCtxDependent===t.isCtxDependent}toString(){return"{"+this.ruleIndex+":"+this.predIndex+"}?"}}t.Predicate=e;class s extends t{static{C(this,"PrecedencePredicate")}precedence;constructor(t){super(),this.precedence=t??0}evaluate(t,e){return t.precpred(e,this.precedence)}evalPrecedence(e,s){return e.precpred(s??null,this.precedence)?t.NONE:null}compareTo(t){return this.precedence-t.precedence}hashCode(){return 31+this.precedence}equals(t){return this===t||this.precedence===t.precedence}toString(){return"{"+this.precedence+">=prec}?"}}t.PrecedencePredicate=s,t.NONE=new e})(M||(M={}));var H=class t{static{C(this,"ATNConfig")}state;alt;reachesIntoOuterContext=!1;precedenceFilterSuppressed=!1;get semanticContext(){return this.#t}cachedHashCode;#e=null;#t;constructor(t,e,s,n){this.state=e,this.alt=t.alt,this.context=s,this.#t=n??M.NONE,this.reachesIntoOuterContext=t.reachesIntoOuterContext,void 0!==t.precedenceFilterSuppressed&&(this.precedenceFilterSuppressed=t.precedenceFilterSuppressed)}static duplicate(e,s){return new t(e,e.state,e.context,s??e.semanticContext)}static createWithContext(e,s,n,i){return new t({alt:s},e,n,i)}static createWithConfig(e,s,n){return new t(s,e,n??s.context,s.semanticContext)}static createWithSemanticContext(e,s,n){return new t(s,e??s.state,s.context,n)}hashCode(){if(void 0===this.cachedHashCode){let t=N.initialize(7);t=N.update(t,this.state.stateNumber),t=N.update(t,this.alt),t=N.updateFromComparable(t,this.#e),t=N.updateFromComparable(t,this.semanticContext),t=N.finish(t,4),this.cachedHashCode=t}return this.cachedHashCode}get context(){return this.#e}set context(t){this.#e=t,this.cachedHashCode=void 0}equals(t){return this===t||this.state.stateNumber===t.state.stateNumber&&this.alt===t.alt&&(null===this.context?null===t.context:this.context.equals(t.context))&&this.semanticContext.equals(t.semanticContext)&&this.precedenceFilterSuppressed===t.precedenceFilterSuppressed}toString(t,e=!0){let s="";return e&&(s=","+this.alt),"("+this.state+s+(null!==this.context?",["+this.context.toString()+"]":"")+(this.semanticContext!==M.NONE?","+this.semanticContext.toString():"")+(this.reachesIntoOuterContext?",up="+this.reachesIntoOuterContext:"")+")"}},z=class t{static{C(this,"ATNState")}static INVALID_STATE_NUMBER=-1;static INVALID_TYPE=0;static BASIC=1;static RULE_START=2;static BLOCK_START=3;static PLUS_BLOCK_START=4;static STAR_BLOCK_START=5;static TOKEN_START=6;static RULE_STOP=7;static BLOCK_END=8;static STAR_LOOP_BACK=9;static STAR_LOOP_ENTRY=10;static PLUS_LOOP_BACK=11;static LOOP_END=12;static stateType=t.INVALID_STATE_NUMBER;stateNumber=0;ruleIndex=0;epsilonOnlyTransitions=!1;nextTokenWithinRule;transitions=[];hashCode(){return this.stateNumber}equals(t){return this.stateNumber===t.stateNumber}toString(){return`${this.stateNumber}`}addTransitionAtIndex(t,e){0===this.transitions.length?this.epsilonOnlyTransitions=e.isEpsilon:this.epsilonOnlyTransitions!==e.isEpsilon&&(this.epsilonOnlyTransitions=!1),this.transitions.splice(t,0,e)}addTransition(t){0===this.transitions.length?this.epsilonOnlyTransitions=t.isEpsilon:this.epsilonOnlyTransitions!==t.isEpsilon&&(this.epsilonOnlyTransitions=!1),this.transitions.push(t)}setTransition(t,e){this.transitions.splice(t,1,e)}removeTransition(t){return this.transitions.splice(t,1)[0]}},V=class t{static{C(this,"PredictionContext")}static EMPTY_RETURN_STATE=2147483647;static traceATNSimulator=!1;cachedHashCode;constructor(t){this.cachedHashCode=t}static calculateEmptyHashCode(){let t=N.initialize(31);return t=N.finish(t,0),t}static calculateHashCodeSingle(t,e){let s=N.initialize(31);return s=N.updateFromComparable(s,t),s=N.update(s,e),s=N.finish(s,2),s}static calculateHashCodeList(t,e){let s=N.initialize(31);for(const e of t)s=N.updateFromComparable(s,e);for(const t of e)s=N.update(s,t);return s=N.finish(s,2*t.length),s}isEmpty(){return!1}hasEmptyPath(){return this.getReturnState(this.length-1)===t.EMPTY_RETURN_STATE}hashCode(){return this.cachedHashCode}toString(t){return""}},q=class t extends V{static{C(this,"SingletonPredictionContext")}parent;returnState;constructor(t,e){super(t?V.calculateHashCodeSingle(t,e):V.calculateEmptyHashCode()),this.parent=t??null,this.returnState=e}getParent(t){return this.parent}getReturnState(t){return this.returnState}equals(e){return this===e||e instanceof t&&(this.hashCode()===e.hashCode()&&(this.returnState===e.returnState&&(null==this.parent?null==e.parent:this.parent.equals(e.parent))))}toString(){const t=null===this.parent?"":this.parent.toString();return 0===t.length?this.returnState===V.EMPTY_RETURN_STATE?"$":""+this.returnState:this.returnState+" "+t}get length(){return 1}},W=class t extends q{static{C(this,"EmptyPredictionContext")}static instance=new t;constructor(){super(void 0,V.EMPTY_RETURN_STATE)}isEmpty(){return!0}getParent(){return null}getReturnState(){return this.returnState}equals(t){return this===t}toString(){return"$"}},Y=class{static{C(this,"Transition")}static INVALID=0;static EPSILON=1;static RANGE=2;static RULE=3;static PREDICATE=4;static ATOM=5;static ACTION=6;static SET=7;static NOT_SET=8;static WILDCARD=9;static PRECEDENCE=10;target;constructor(t){this.target=t}get isEpsilon(){return!1}get label(){return null}toString(){return""}},$=class extends Y{static{C(this,"SetTransition")}set;constructor(t,e){super(t),this.set=e||b.of(S.INVALID_TYPE,S.INVALID_TYPE)}get transitionType(){return Y.SET}get label(){return this.set}matches(t,e,s){return this.set.contains(t)}toString(){return this.set.toString()}},K=class extends ${static{C(this,"NotSetTransition")}get transitionType(){return Y.NOT_SET}matches(t,e,s){return t>=e&&t<=s&&!super.matches(t,e,s)}toString(){return"~"+super.toString()}},G=class{static{C(this,"MapKeyEqualityComparator")}keyComparator;constructor(t){this.keyComparator=t}hashCode(t){return this.keyComparator.hashCode(t.key)}equals(t,e){return this.keyComparator.equals(t.key,e.key)}},j=class t{static{C(this,"HashMap")}backingStore;constructor(e){e instanceof t?this.backingStore=new L(e.backingStore):(e=e??v.instance,this.backingStore=new L(new G(e)))}clear(){this.backingStore.clear()}containsKey(t){return this.backingStore.contains({key:t})}get(t){const e=this.backingStore.get({key:t});if(e)return e.value}get isEmpty(){return this.backingStore.isEmpty}set(t,e){const s=this.backingStore.get({key:t,value:e});let n;return s?(n=s.value,s.value=e):this.backingStore.add({key:t,value:e}),n}setIfAbsent(t,e){const s=this.backingStore.get({key:t,value:e});let n;return s?n=s.value:this.backingStore.add({key:t,value:e}),n}keys(){return this.backingStore.toArray().map((t=>t.key))}values(){return this.backingStore.toArray().map((t=>t.value))}get size(){return this.backingStore.size}hashCode(){return this.backingStore.hashCode()}equals(t){return this.backingStore.equals(t.backingStore)}},X=class{static{C(this,"TerminalNode")}parent=null;symbol;constructor(t){this.symbol=t}getChild(t){return null}getSymbol(){return this.symbol}getPayload(){return this.symbol}getSourceInterval(){if(null===this.symbol)return w.INVALID_INTERVAL;const t=this.symbol.tokenIndex;return new w(t,t)}getChildCount(){return 0}accept(t){return t.visitTerminal(this)}getText(){return this.symbol?.text??""}toString(){return this.symbol?.type===S.EOF?"<EOF>":this.symbol?.text??""}toStringTree(){return this.toString()}},Q=class extends X{static{C(this,"ErrorNode")}accept(t){return t.visitErrorNode(this)}},Z=class t{static{C(this,"CommonToken")}static EMPTY_SOURCE=[null,null];source;tokenIndex;start;stop;type;line;column;channel;#s;constructor(t){this.type=t.type,this.source=t.source,this.tokenIndex=t.tokenIndex??-1,this.line=t.line??0,this.column=t.column??-1,this.channel=t.channel??S.DEFAULT_CHANNEL,this.start=t.start??0,this.stop=t.stop??0,this.#s=t.text,void 0===t.line&&null!==t.source[0]&&(this.line=t.source[0].line),void 0===t.column&&null!==t.source[0]&&(this.column=t.source[0].column)}static fromToken(e){const s=[e.tokenSource,e.inputStream];return new t({type:e.type,line:e.line,tokenIndex:e.tokenIndex,column:e.column,channel:e.channel,start:e.start,stop:e.stop,text:e.text,source:s})}static fromType(e,s){return new t({type:e,text:s,source:t.EMPTY_SOURCE})}static fromSource(e,s,n,i,r){return new t({type:s,channel:n,start:i,stop:r,source:e})}get tokenSource(){return this.source[0]}get inputStream(){return this.source[1]}set inputStream(t){this.source[1]=t}clone(){return new t({source:this.source,type:this.type,channel:this.channel,start:this.start,stop:this.stop,tokenIndex:this.tokenIndex,line:this.line,column:this.column,text:this.#s})}toString(t){let e="";this.channel>0&&(e=",channel="+this.channel);let s=this.text;s?(s=s.replace(/\n/g,"\\n"),s=s.replace(/\r/g,"\\r"),s=s.replace(/\t/g,"\\t")):s="<no text>";let n=String(this.type);return t&&(n=t.vocabulary.getDisplayName(this.type)??"<unknown>"),"[@"+this.tokenIndex+","+this.start+":"+this.stop+"='"+s+"',<"+n+">"+e+","+this.line+":"+this.column+"]"}get text(){if(void 0!==this.#s)return this.#s;const t=this.inputStream;if(!t)return;const e=t.size;return this.start<e&&this.stop<e?t.getTextFromRange(this.start,this.stop):"<EOF>"}set text(t){this.#s=t}setText(t){this.#s=t}setType(t){this.type=t}setLine(t){this.line=t}setCharPositionInLine(t){this.column=t}setChannel(t){this.channel=t}setTokenIndex(t){this.tokenIndex=t}},J=class t{static{C(this,"Trees")}static toStringTree(e,s,n){s=s??null,n&&(s=n.ruleNames);let i=t.getNodeText(e,s);i=F(i,!1);const r=e.getChildCount();if(0===r)return i;let o="("+i+" ";r>0&&(i=t.toStringTree(e.getChild(0),s),o=o.concat(i));for(let n=1;n<r;n++)i=t.toStringTree(e.getChild(n),s),o=o.concat(" "+i);return o=o.concat(")"),o}static getNodeText(t,e,s){if(e=e??null,s&&(e=s.ruleNames),null!==e){if(t instanceof tt){const s=t.ruleContext.getAltNumber();return 0!==s?e[t.ruleIndex]+":"+s:e[t.ruleIndex]}if(t instanceof Q)return t.toString();if(t instanceof X)return t.symbol.text}const n=t.getPayload();return k(n)?n.text:String(t.getPayload())}static getChildren(t){const e=[];for(let s=0;s<t.getChildCount();s++)e.push(t.getChild(s));return e}static getAncestors(t){if(null===t.parent)return[];let e=[],s=t.parent;for(;null!==s;)e=[s].concat(e),s=s.parent;return e}static isAncestorOf(t,e){if(null===t||null===e||null===t.parent)return!1;let s=e.parent;for(;null!==s;){if(t===s)return!0;s=s.parent}return!1}static findAllTokenNodes(e,s){return t.findAllNodes(e,s,!0)}static findAllRuleNodes(e,s){return t.findAllNodes(e,s,!1)}static findAllNodes(e,s,n){const i=[];return t.doFindAllNodes(e,s,n,i),i}static descendants(e){let s=[e];for(let n=0;n<e.getChildCount();n++)s=s.concat(t.descendants(e.getChild(n)));return s}static getRootOfSubtreeEnclosingRegion(t,e,s){const n=t.getChildCount();for(let i=0;i<n;i++){const n=t.getChild(i),r=this.getRootOfSubtreeEnclosingRegion(n,e,s);if(null!==r)return r}return t instanceof tt&&e>=t.start.tokenIndex&&(null===t.stop||s<=t.stop.tokenIndex)?t:null}static stripChildrenOutOfRange(t,e,s,n){if(null!==t)for(let i=0;i<t.getChildCount();i++){const r=t.getChild(i),o=r.getSourceInterval();if(t instanceof tt&&(o.stop<s||o.start>n)&&this.isAncestorOf(r,e)){const e=Z.fromType(S.INVALID_TYPE,"...");t.children[i]=new X(e)}}}static doFindAllNodes(e,s,n,i){n&&e instanceof X?e.symbol?.type===s&&i.push(e):!n&&e instanceof tt&&e.ruleIndex===s&&i.push(e);for(let r=0;r<e.getChildCount();r++)t.doFindAllNodes(e.getChild(r),s,n,i)}},tt=class t{static{C(this,"ParserRuleContext")}static empty=new t(null);start=null;stop=null;children=[];invokingState;parent;constructor(t,e=-1){this.parent=t,this.invokingState=e}copyFrom(t){this.parent=t.parent,this.invokingState=t.invokingState,this.children.slice(0,this.children.length),this.start=t.start,this.stop=t.stop,t.children&&t.children.forEach((t=>{t instanceof Q&&(this.children.push(t),t.parent=this)}))}enterRule(t){}exitRule(t){}addChild(t){return this.children.push(t),t}removeLastChild(){this.children.pop()}addTokenNode(t){const e=new X(t);return this.children.push(e),e.parent=this,e}addErrorNode(t){return t.parent=this,this.children.push(t),t}getChild(t,e){if(t<0||t>=this.children.length)return null;if(!e)return this.children[t];for(const s of this.children)if(s instanceof e){if(0===t)return s;t-=1}return null}getToken(t,e){if(e<0||e>=this.children.length)return null;for(const s of this.children)if("symbol"in s&&s.symbol?.type===t){if(0===e)return s;e-=1}return null}getTokens(t){const e=[];for(const s of this.children)"symbol"in s&&s.symbol?.type===t&&e.push(s);return e}getRuleContext(t,e){return this.getChild(t,e)}getRuleContexts(t){const e=[];for(const s of this.children)s instanceof t&&e.push(s);return e}getChildCount(){return this.children.length}getSourceInterval(){return null===this.start?w.INVALID_INTERVAL:null===this.stop||this.stop.tokenIndex<this.start.tokenIndex?new w(this.start.tokenIndex,this.start.tokenIndex-1):new w(this.start.tokenIndex,this.stop.tokenIndex)}depth(){let t=0,e=this;for(;null!==e;)e=e.parent,t+=1;return t}isEmpty(){return-1===this.invokingState}get ruleContext(){return this}get ruleIndex(){return-1}getPayload(){return this}getText(){return 0===this.children.length?"":this.children.map((t=>t.getText())).join("")}getAltNumber(){return ut.INVALID_ALT_NUMBER}setAltNumber(t){}accept(t){return t.visitChildren(this)}toStringTree(...t){return t.length<2?J.toStringTree(this,null,t[0]):J.toStringTree(this,t[0],t[1])}toString(t,e){t=t??null,e=e??null;let s=this,n="[";for(;null!==s&&s!==e;){if(null===t)s.isEmpty()||(n+=s.invokingState);else{const e=s.ruleIndex;n+=e>=0&&e<t.length?t[e]:""+e}null===s.parent||null===t&&s.parent.isEmpty()||(n+=" "),s=s.parent}return n+="]",n}},et=class t extends V{static{C(this,"ArrayPredictionContext")}parents=[];returnStates=[];constructor(t,e){return super(V.calculateHashCodeList(t,e)),this.parents=t,this.returnStates=e,this}isEmpty(){return this.returnStates[0]===V.EMPTY_RETURN_STATE}get length(){return this.returnStates.length}getParent(t){return this.parents[t]}getReturnState(t){return this.returnStates[t]}equals(e){return this===e||e instanceof t&&this.hashCode()===e.hashCode()&&(P(this.returnStates,e.returnStates)&&_(this.parents,e.parents))}toString(){if(this.isEmpty())return"[]";const t=[];for(let e=0;e<this.returnStates.length;e++)this.returnStates[e]!==V.EMPTY_RETURN_STATE?(t.push(this.returnStates[e].toString()),this.parents[e]?t.push(this.parents[e].toString()):t.push("null")):t.push("$");return`[${t.join(", ")}]`}},st=C(((t,e)=>e===V.EMPTY_RETURN_STATE&&null===t?W.instance:new q(t,e)),"createSingletonPredictionContext"),nt=C(((t,e)=>{if(e||(e=tt.empty),!e.parent||e===tt.empty)return W.instance;const s=nt(t,e.parent),n=t.states[e.invokingState].transitions[0];return st(s,n.followState.stateNumber)}),"predictionContextFromRuleContext"),it=C(((t,e,s)=>{if(t.isEmpty())return t;let n=s.get(t);if(n)return n;if(n=e.get(t),n)return s.set(t,n),n;let i,r=!1,o=[];for(let n=0;n<o.length;n++){const i=it(t.getParent(n),e,s);if(r||i!==t.getParent(n)){if(!r){o=[];for(let e=0;e<t.length;e++)o[e]=t.getParent(e);r=!0}o[n]=i}}return r?(i=0===o.length?W.instance:1===o.length?st(o[0]??void 0,t.getReturnState(0)):new et(o,t.returnStates),e.add(i),s.set(i,i),s.set(t,i),i):(e.add(t),s.set(t,t),t)}),"getCachedPredictionContext"),rt=C(((t,e,s,n)=>{if(t===e||t.equals(e))return t;if(t instanceof q&&e instanceof q)return ct(t,e,s,n);if(s){if(t instanceof W)return t;if(e instanceof W)return e}return t instanceof q&&(t=new et([t.parent],[t.returnState])),e instanceof q&&(e=new et([e.parent],[e.returnState])),ot(t,e,s,n)}),"merge"),ot=C(((t,e,s,n)=>{if(n){let s=n.get(t,e);if(s)return s;if(s=n.get(e,t),s)return s}let i=0,r=0,o=0,a=new Array(t.returnStates.length+e.returnStates.length).fill(0),c=new Array(t.returnStates.length+e.returnStates.length).fill(null);for(;i<t.returnStates.length&&r<e.returnStates.length;){const h=t.parents[i],l=e.parents[r];if(t.returnStates[i]===e.returnStates[r]){const e=t.returnStates[i];e===V.EMPTY_RETURN_STATE&&null===h&&null===l||null!==h&&null!==l&&h===l?(c[o]=h,a[o]=e):(c[o]=rt(h,l,s,n),a[o]=e),i+=1,r+=1}else t.returnStates[i]<e.returnStates[r]?(c[o]=h,a[o]=t.returnStates[i],i+=1):(c[o]=l,a[o]=e.returnStates[r],r+=1);o+=1}if(i<t.returnStates.length)for(let e=i;e<t.returnStates.length;e++)c[o]=t.parents[e],a[o]=t.returnStates[e],o+=1;else for(let t=r;t<e.returnStates.length;t++)c[o]=e.parents[t],a[o]=e.returnStates[t],o+=1;if(o<c.length){if(1===o){const s=st(c[0]??void 0,a[0]);return null!==n&&n.set(t,e,s),s}c=c.slice(0,o),a=a.slice(0,o)}const h=new et(c,a);return h.equals(t)?(null!==n&&n.set(t,e,t),t):h.equals(e)?(null!==n&&n.set(t,e,e),e):(at(c),null!==n&&n.set(t,e,h),h)}),"mergeArrays"),at=C((t=>{const e=new j(I.instance);for(const s of t)s&&(e.containsKey(s)||e.set(s,s));for(let s=0;s<t.length;s++)t[s]&&(t[s]=e.get(t[s])??null)}),"combineCommonParents"),ct=C(((t,e,s,n)=>{if(null!==n){let s=n.get(t,e);if(null!==s)return s;if(s=n.get(e,t),null!==s)return s}const i=ht(t,e,s);if(null!==i)return null!==n&&n.set(t,e,i),i;if(t.returnState===e.returnState){const i=rt(t.parent,e.parent,s,n);if(i===t.parent)return t;if(i===e.parent)return e;const r=st(i,t.returnState);return null!==n&&n.set(t,e,r),r}{let s=null;if((t===e||null!==t.parent&&t.parent.equals(e.parent))&&(s=t.parent),null!==s){const i=[t.returnState,e.returnState];t.returnState>e.returnState&&(i[0]=e.returnState,i[1]=t.returnState);const r=new et([s,s],i);return null!==n&&n.set(t,e,r),r}const i=[t.returnState,e.returnState];let r=[t.parent,e.parent];t.returnState>e.returnState&&(i[0]=e.returnState,i[1]=t.returnState,r=[e.parent,t.parent]);const o=new et(r,i);return null!==n&&n.set(t,e,o),o}}),"mergeSingletons"),ht=C(((t,e,s)=>{if(s){if(t===W.instance||e===W.instance)return W.instance}else{if(t===W.instance&&e===W.instance)return W.instance;if(t===W.instance){const t=[e.returnState,V.EMPTY_RETURN_STATE],s=[e.parent,null];return new et(s,t)}if(e===W.instance){const e=[t.returnState,V.EMPTY_RETURN_STATE],s=[t.parent,null];return new et(s,e)}}return null}),"mergeRoot"),lt=class t{constructor(t){this.atn=t}static{C(this,"LL1Analyzer")}static hitPredicate=S.INVALID_TYPE;getDecisionLookahead(e){const s=e.transitions.length,n=new Array(s);for(let i=0;i<s;i++){const s=new b,r=new L;this.doLook(e.transitions[i].target,void 0,W.instance,s,r,new y,!1,!1),s.length>0&&!s.contains(t.hitPredicate)&&(n[i]=s)}return n}look(t,e,s){const n=new b,i=s?nt(this.atn,s):null;return this.doLook(t,e,i,n,new L,new y,!0,!0),n}doLook(e,s,n,i,r,o,a,c){const h=H.createWithContext(e,0,n);if(!r.get(h)){if(r.add(h),e===s){if(!n)return void i.addOne(S.EPSILON);if(n.isEmpty()&&c)return void i.addOne(S.EOF)}if(e.constructor.stateType===z.RULE_STOP){if(!n)return void i.addOne(S.EPSILON);if(n.isEmpty()&&c)return void i.addOne(S.EOF);if(n!==W.instance){const t=o.get(e.ruleIndex);try{o.clear(e.ruleIndex);for(let t=0;t<n.length;t++){const e=this.atn.states[n.getReturnState(t)];this.doLook(e,s,n.getParent(t),i,r,o,a,c)}}finally{t&&o.set(e.ruleIndex)}return}}for(const h of e.transitions)switch(h.transitionType){case Y.RULE:{if(o.get(h.target.ruleIndex))continue;const t=st(n??void 0,h.followState.stateNumber);try{o.set(h.target.ruleIndex),this.doLook(h.target,s,t,i,r,o,a,c)}finally{o.clear(h.target.ruleIndex)}break}case Y.PREDICATE:case Y.PRECEDENCE:a?this.doLook(h.target,s,n,i,r,o,a,c):i.addOne(t.hitPredicate);break;case Y.WILDCARD:i.addRange(S.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType);break;default:if(h.isEpsilon)this.doLook(h.target,s,n,i,r,o,a,c);else{let t=h.label;t&&(h instanceof K&&(t=t.complement(S.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType)),i.addSet(t))}}}}},ut=class{static{C(this,"ATN")}static INVALID_ALT_NUMBER=0;static LEXER=0;static PARSER=1;grammarType;maxTokenType;states=[];decisionToState=[];ruleToStartState=[];ruleToStopState=[];modeNameToStartState=new Map;ruleToTokenType=[];lexerActions=[];modeToStartState=[];analyzer;constructor(t,e){this.grammarType=t,this.maxTokenType=e,this.analyzer=new lt(this)}nextTokens(t,e){if(!e&&t.nextTokenWithinRule)return t.nextTokenWithinRule;const s=this.analyzer.look(t,void 0,e);return e||(t.nextTokenWithinRule=s),s}addState(t){t&&(t.stateNumber=this.states.length),this.states.push(t)}removeState(t){this.states[t.stateNumber]=null}defineDecisionState(t){return this.decisionToState.push(t),t.decision=this.decisionToState.length-1,t.decision}getDecisionState(t){return 0===this.decisionToState.length?null:this.decisionToState[t]}getNumberOfDecisions(){return this.decisionToState.length}getExpectedTokens(t,e){if(t<0||t>=this.states.length)throw new Error("Invalid state number.");const s=this.states[t];let n=this.nextTokens(s);if(!n.contains(S.EPSILON))return n;let i=e;const r=new b;for(r.addSet(n),r.removeOne(S.EPSILON);null!==i&&i.invokingState>=0&&n.contains(S.EPSILON);){const t=this.states[i.invokingState].transitions[0];n=this.nextTokens(t.followState),r.addSet(n),r.removeOne(S.EPSILON),i=i.parent}return n.contains(S.EPSILON)&&r.addOne(S.EOF),r}},dt=class t{static{C(this,"KeyTypeEqualityComparer")}static instance=new t;hashCode(t){let e=7;return e=31*e+t.state.stateNumber,e=31*e+t.alt,e=31*e+t.semanticContext.hashCode(),e}equals(t,e){return t===e||t.state.stateNumber===e.state.stateNumber&&t.alt===e.alt&&t.semanticContext.equals(e.semanticContext)}},pt=class{static{C(this,"ATNConfigSet")}configLookup=new L(dt.instance);configs=[];uniqueAlt=0;hasSemanticContext=!1;dipsIntoOuterContext=!1;fullCtx=!1;readOnly=!1;conflictingAlts=null;firstStopState;#n=-1;constructor(t){if(void 0!==t)if("boolean"==typeof t)this.fullCtx=t??!0;else{const e=t;this.addAll(e.configs),this.uniqueAlt=e.uniqueAlt,this.conflictingAlts=e.conflictingAlts,this.hasSemanticContext=e.hasSemanticContext,this.dipsIntoOuterContext=e.dipsIntoOuterContext}}[Symbol.iterator](){return this.configs[Symbol.iterator]()}add(t,e=null){if(this.readOnly)throw new Error("This set is readonly");this.firstStopState||t.state.constructor.stateType!==z.RULE_STOP||(this.firstStopState=t),this.hasSemanticContext||=t.semanticContext!==M.NONE,this.dipsIntoOuterContext||=t.reachesIntoOuterContext;const s=this.configLookup.getOrAdd(t);if(s===t)return this.#n=-1,void this.configs.push(t);const n=!this.fullCtx,i=rt(s.context,t.context,n,e);s.reachesIntoOuterContext||=t.reachesIntoOuterContext,s.precedenceFilterSuppressed||=t.precedenceFilterSuppressed,s.context=i}get elements(){return this.configs}getAlts(){const t=new y;for(const e of this.configs)t.set(e.alt);return t}getPredicates(){const t=[];for(const e of this.configs)e.semanticContext!==M.NONE&&t.push(e.semanticContext);return t}getStates(){const t=new L;for(const e of this.configs)t.add(e.state);return t}optimizeConfigs(t){if(this.readOnly)throw new Error("This set is readonly");if(0!==this.configLookup.size)for(const e of this.configs)e.context=t.getCachedContext(e.context)}addAll(t){for(const e of t)this.add(e);return!1}equals(t){return this===t||!(this.fullCtx!==t.fullCtx||this.uniqueAlt!==t.uniqueAlt||this.conflictingAlts!==t.conflictingAlts||this.hasSemanticContext!==t.hasSemanticContext||this.dipsIntoOuterContext!==t.dipsIntoOuterContext||!_(this.configs,t.configs))}hashCode(){return-1===this.#n&&(this.#n=this.computeHashCode()),this.#n}get length(){return this.configs.length}isEmpty(){return 0===this.configs.length}contains(t){if(null===this.configLookup)throw new Error("This method is not implemented for readonly sets.");return this.configLookup.contains(t)}containsFast(t){if(null===this.configLookup)throw new Error("This method is not implemented for readonly sets.");return this.configLookup.contains(t)}clear(){if(this.readOnly)throw new Error("This set is readonly");this.configs=[],this.#n=-1,this.configLookup=new L(dt.instance)}setReadonly(t){this.readOnly=t,t&&(this.configLookup=null)}toString(){return D(this.configs)+(this.hasSemanticContext?",hasSemanticContext="+this.hasSemanticContext:"")+(this.uniqueAlt!==ut.INVALID_ALT_NUMBER?",uniqueAlt="+this.uniqueAlt:"")+(null!==this.conflictingAlts?",conflictingAlts="+this.conflictingAlts:"")+(this.dipsIntoOuterContext?",dipsIntoOuterContext":"")}computeHashCode(){let t=N.initialize();return this.configs.forEach((e=>{t=N.update(t,e.hashCode())})),t=N.finish(t,this.configs.length),t}},gt=class extends z{static{C(this,"BasicState")}static stateType=z.BASIC},ft=class extends z{static{C(this,"DecisionState")}decision=-1;nonGreedy=!1},xt=class extends ft{static{C(this,"BlockStartState")}endState},mt=class extends z{static{C(this,"BlockEndState")}static stateType=z.BLOCK_END;startState},Tt=class extends z{static{C(this,"LoopEndState")}static stateType=z.LOOP_END;loopBackState},St=class extends z{static{C(this,"RuleStartState")}static stateType=z.RULE_START;stopState;isLeftRecursiveRule=!1},Et=class extends z{static{C(this,"RuleStopState")}static stateType=z.RULE_STOP},At=class extends ft{static{C(this,"TokensStartState")}static stateType=z.TOKEN_START},Ct=class extends ft{static{C(this,"PlusLoopbackState")}static stateType=z.PLUS_LOOP_BACK},kt=class extends z{static{C(this,"StarLoopbackState")}static stateType=z.STAR_LOOP_BACK},yt=class extends ft{static{C(this,"StarLoopEntryState")}static stateType=z.STAR_LOOP_ENTRY;loopBackState;precedenceRuleDecision=!1},Nt=class extends xt{static{C(this,"PlusBlockStartState")}static stateType=z.PLUS_BLOCK_START;loopBackState},It=class extends xt{static{C(this,"StarBlockStartState")}static stateType=z.STAR_BLOCK_START},vt=class extends xt{static{C(this,"BasicBlockStartState")}static stateType=z.BLOCK_START},Lt=class extends Y{static{C(this,"AtomTransition")}labelValue;#i;constructor(t,e){super(t),this.labelValue=e,this.#i=b.of(e,e)}get label(){return this.#i}get transitionType(){return Y.ATOM}matches(t){return this.labelValue===t}toString(){return this.labelValue.toString()}},wt=class extends Y{static{C(this,"RuleTransition")}ruleIndex;precedence;followState;constructor(t,e,s,n){super(t),this.ruleIndex=e,this.precedence=s,this.followState=n}get isEpsilon(){return!0}get transitionType(){return Y.RULE}matches(t,e,s){return!1}},Rt=class extends Y{static{C(this,"RangeTransition")}start;stop;#i=new b;constructor(t,e,s){super(t),this.start=e,this.stop=s,this.#i.addRange(e,s)}get label(){return this.#i}get transitionType(){return Y.RANGE}matches(t,e,s){return t>=this.start&&t<=this.stop}toString(){return"'"+String.fromCharCode(this.start)+"'..'"+String.fromCharCode(this.stop)+"'"}},bt=class extends Y{static{C(this,"ActionTransition")}ruleIndex;actionIndex;isCtxDependent;constructor(t,e,s,n){super(t),this.ruleIndex=e,this.actionIndex=s??-1,this.isCtxDependent=n??!1}get isEpsilon(){return!0}get transitionType(){return Y.ACTION}matches(t,e,s){return!1}toString(){return"action_"+this.ruleIndex+":"+this.actionIndex}},Ot=class extends Y{static{C(this,"EpsilonTransition")}#r;constructor(t,e=-1){super(t),this.#r=e}get outermostPrecedenceReturn(){return this.#r}get isEpsilon(){return!0}get transitionType(){return Y.EPSILON}matches(){return!1}toString(){return"epsilon"}},Dt=class extends Y{static{C(this,"WildcardTransition")}get transitionType(){return Y.WILDCARD}matches(t,e,s){return t>=e&&t<=s}toString(){return"."}},_t=class extends Y{static{C(this,"AbstractPredicateTransition")}constructor(t){super(t)}},Pt=class extends _t{static{C(this,"PredicateTransition")}ruleIndex;predIndex;isCtxDependent;constructor(t,e,s,n){super(t),this.ruleIndex=e,this.predIndex=s,this.isCtxDependent=n}get isEpsilon(){return!0}matches(t,e,s){return!1}get transitionType(){return Y.PREDICATE}getPredicate(){return new M.Predicate(this.ruleIndex,this.predIndex,this.isCtxDependent)}toString(){return"pred_"+this.ruleIndex+":"+this.predIndex}},Ft=class extends _t{static{C(this,"PrecedencePredicateTransition")}precedence;constructor(t,e){super(t),this.precedence=e}get isEpsilon(){return!0}matches(t,e,s){return!1}getPredicate(){return new M.PrecedencePredicate(this.precedence)}get transitionType(){return Y.PRECEDENCE}toString(){return this.precedence+" >= _p"}},Mt=0,Ut=1,Bt=2,Ht=3,zt=4,Vt=5,qt=6,Wt=7,Yt=class t{static{C(this,"LexerSkipAction")}static instance=new t;actionType;isPositionDependent=!1;constructor(){this.actionType=qt}equals(t){return t===this}hashCode(){return qt}execute(t){t.skip()}toString(){return"skip"}},$t=class t{static{C(this,"LexerChannelAction")}channel;actionType;isPositionDependent=!1;cachedHashCode;constructor(t){this.actionType=Mt,this.channel=t}execute(t){t.channel=this.channel}hashCode(){if(void 0===this.cachedHashCode){let t=N.initialize();t=N.update(t,this.actionType),t=N.update(t,this.channel),this.cachedHashCode=N.finish(t,2)}return this.cachedHashCode}equals(e){return this===e||e instanceof t&&this.channel===e.channel}toString(){return"channel("+this.channel+")"}},Kt=class t{static{C(this,"LexerCustomAction")}ruleIndex;actionIndex;actionType;isPositionDependent=!0;cachedHashCode;constructor(t,e){this.actionType=Ut,this.ruleIndex=t,this.actionIndex=e}execute(t){t.action(null,this.ruleIndex,this.actionIndex)}hashCode(){if(void 0===this.cachedHashCode){let t=N.initialize();t=N.update(t,this.actionType),t=N.update(t,this.ruleIndex),t=N.update(t,this.actionIndex),this.cachedHashCode=N.finish(t,3)}return this.cachedHashCode}equals(e){return this===e||e instanceof t&&(this.ruleIndex===e.ruleIndex&&this.actionIndex===e.actionIndex)}},Gt=class t{static{C(this,"LexerMoreAction")}static instance=new t;actionType;isPositionDependent=!1;constructor(){this.actionType=Ht}equals(t){return t===this}hashCode(){return Ht}execute(t){t.more()}toString(){return"more"}},jt=class t{static{C(this,"LexerTypeAction")}type;actionType;isPositionDependent=!1;cachedHashCode;constructor(t){this.actionType=Wt,this.type=t}execute(t){t.type=this.type}hashCode(){if(void 0===this.cachedHashCode){let t=N.initialize();t=N.update(t,this.actionType),t=N.update(t,this.type),this.cachedHashCode=N.finish(t,2)}return this.cachedHashCode}equals(e){return this===e||e instanceof t&&this.type===e.type}toString(){return"type("+this.type+")"}},Xt=class t{static{C(this,"LexerPushModeAction")}mode;actionType;isPositionDependent=!1;cachedHashCode;constructor(t){this.actionType=Vt,this.mode=t}execute(t){t.pushMode(this.mode)}hashCode(){if(void 0===this.cachedHashCode){let t=N.initialize();t=N.update(t,this.actionType),t=N.update(t,this.mode),this.cachedHashCode=N.finish(t,2)}return this.cachedHashCode}equals(e){return this===e||e instanceof t&&this.mode===e.mode}toString(){return"pushMode("+this.mode+")"}},Qt=class t{static{C(this,"LexerPopModeAction")}static instance=new t;actionType;isPositionDependent=!1;constructor(){this.actionType=zt}equals(t){return t===this}hashCode(){return zt}execute(t){t.popMode()}toString(){return"popMode"}},Zt=class t{static{C(this,"LexerModeAction")}mode;actionType;isPositionDependent=!1;cachedHashCode;constructor(t){this.actionType=Bt,this.mode=t}execute(t){t.mode=this.mode}hashCode(){if(void 0===this.cachedHashCode){let t=N.initialize();t=N.update(t,this.actionType),t=N.update(t,this.mode),this.cachedHashCode=N.finish(t,2)}return this.cachedHashCode}equals(e){return this===e||e instanceof t&&this.mode===e.mode}toString(){return"mode("+this.mode+")"}},Jt=class t{static{C(this,"ATNDeserializer")}static SERIALIZED_VERSION=4;static stateTypeMapper=new Map([[z.INVALID_TYPE,void 0],[z.BASIC,gt],[z.RULE_START,St],[z.BLOCK_START,vt],[z.PLUS_BLOCK_START,Nt],[z.STAR_BLOCK_START,It],[z.TOKEN_START,At],[z.RULE_STOP,Et],[z.BLOCK_END,mt],[z.STAR_LOOP_BACK,kt],[z.STAR_LOOP_ENTRY,yt],[z.PLUS_LOOP_BACK,Ct],[z.LOOP_END,Tt]]);static lexerActionFactoryMapper=new Map([[Mt,t=>new $t(t)],[Ut,(t,e)=>new Kt(t,e)],[Bt,t=>new Zt(t)],[Ht,()=>Gt.instance],[zt,()=>Qt.instance],[Vt,t=>new Xt(t)],[qt,()=>Yt.instance],[Wt,t=>new jt(t)]]);data=[];pos=0;deserializationOptions;actionFactories;constructor(t){t||(t={readOnly:!1,verifyATN:!0,generateRuleBypassTransitions:!1}),this.deserializationOptions=t}deserialize(t){this.data=t,this.checkVersion();const e=this.readATN();this.readStates(e),this.readRules(e),this.readModes(e);const s=[];return this.readSets(e,s),this.readEdges(e,s),this.readDecisions(e),this.readLexerActions(e),this.markPrecedenceDecisions(e),this.verifyATN(e),this.deserializationOptions.generateRuleBypassTransitions&&e.grammarType===ut.PARSER&&(this.generateRuleBypassTransitions(e),this.verifyATN(e)),e}checkVersion(){const e=this.data[this.pos++];if(e!==t.SERIALIZED_VERSION)throw new Error("Could not deserialize ATN with version "+e+" (expected "+t.SERIALIZED_VERSION+").")}readATN(){const t=this.data[this.pos++],e=this.data[this.pos++];return new ut(t,e)}readStates(t){let e,s;const n=[],i=[],r=this.data[this.pos++];for(let e=0;e<r;e++){const e=this.data[this.pos++];if(e===z.INVALID_TYPE){t.addState(null);continue}const s=this.data[this.pos++],r=this.stateFactory(e,s);if(e===z.LOOP_END){const t=this.data[this.pos++];n.push([r,t])}else if(r instanceof xt){const t=this.data[this.pos++];i.push([r,t])}t.addState(r)}for(e=0;e<n.length;e++){const s=n[e];s[0].loopBackState=t.states[s[1]]??void 0}for(e=0;e<i.length;e++){const s=i[e];s[0].endState=t.states[s[1]]}const o=this.data[this.pos++];for(e=0;e<o;e++)s=this.data[this.pos++],t.states[s].nonGreedy=!0;const a=this.data[this.pos++];for(e=0;e<a;e++)s=this.data[this.pos++],t.states[s].isLeftRecursiveRule=!0}readRules(t){let e;const s=this.data[this.pos++];for(t.grammarType===ut.LEXER&&(t.ruleToTokenType=new Array(s),t.ruleToTokenType.fill(0)),t.ruleToStartState=new Array(s),t.ruleToStartState.fill(null),e=0;e<s;e++){const s=this.data[this.pos++];if(t.ruleToStartState[e]=t.states[s],t.grammarType===ut.LEXER){const s=this.data[this.pos++];t.ruleToTokenType[e]=s}}for(t.ruleToStopState=new Array(s),t.ruleToStopState.fill(null),e=0;e<t.states.length;e++){const s=t.states[e];s instanceof Et&&(t.ruleToStopState[s.ruleIndex]=s,t.ruleToStartState[s.ruleIndex].stopState=s)}}readModes(t){const e=this.data[this.pos++];for(let s=0;s<e;s++){const e=this.data[this.pos++];t.modeToStartState.push(t.states[e])}}readSets(t,e){const s=this.data[this.pos++];for(let t=0;t<s;t++){const t=new b;e.push(t);const s=this.data[this.pos++];0!==this.data[this.pos++]&&t.addOne(-1);for(let e=0;e<s;e++){const e=this.data[this.pos++],s=this.data[this.pos++];t.addRange(e,s)}}}readEdges(t,e){let s,n,i,r,o;const a=this.data[this.pos++];for(s=0;s<a;s++){const s=this.data[this.pos++],n=this.data[this.pos++],i=this.data[this.pos++],o=this.data[this.pos++],a=this.data[this.pos++],c=this.data[this.pos++];r=this.edgeFactory(t,i,n,o,a,c,e);t.states[s].addTransition(r)}for(s=0;s<t.states.length;s++)for(i=t.states[s],n=0;n<i.transitions.length;n++){const e=i.transitions[n];if(!(e instanceof wt))continue;let s=-1;t.ruleToStartState[e.target.ruleIndex].isLeftRecursiveRule&&0===e.precedence&&(s=e.target.ruleIndex),r=new Ot(e.followState,s),t.ruleToStopState[e.target.ruleIndex].addTransition(r)}for(s=0;s<t.states.length;s++){if(i=t.states[s],i instanceof xt){if(!i.endState)throw new Error("IllegalState");if(i.endState.startState)throw new Error("IllegalState");i.endState.startState=i}if(i instanceof Ct)for(n=0;n<i.transitions.length;n++)o=i.transitions[n].target,o instanceof Nt&&(o.loopBackState=i);else if(i instanceof kt)for(n=0;n<i.transitions.length;n++)o=i.transitions[n].target,o instanceof yt&&(o.loopBackState=i)}}readDecisions(t){const e=this.data[this.pos++];for(let s=0;s<e;s++){const e=this.data[this.pos++],n=t.states[e];t.decisionToState.push(n),n.decision=s}}readLexerActions(t){if(t.grammarType===ut.LEXER){const e=this.data[this.pos++];t.lexerActions=[];for(let s=0;s<e;s++){const e=this.data[this.pos++],s=this.data[this.pos++],n=this.data[this.pos++];t.lexerActions.push(this.lexerActionFactory(e,s,n))}}}generateRuleBypassTransitions(t){let e;const s=t.ruleToStartState.length;for(e=0;e<s;e++)t.ruleToTokenType[e]=t.maxTokenType+e+1;for(e=0;e<s;e++)this.generateRuleBypassTransition(t,e)}generateRuleBypassTransition(t,e){let s,n;const i=new vt;i.ruleIndex=e,t.addState(i);const r=new mt;r.ruleIndex=e,t.addState(r),i.endState=r,t.defineDecisionState(i),r.startState=i;let o=null,a=null;if(t.ruleToStartState[e].isLeftRecursiveRule){for(a=null,s=0;s<t.states.length;s++)if(n=t.states[s],this.stateIsEndStateFor(n,e)){a=n,o=n.loopBackState.transitions[0];break}if(null===o)throw new Error("Couldn't identify final state of the precedence rule prefix section.")}else a=t.ruleToStopState[e];for(s=0;s<t.states.length;s++){n=t.states[s];for(const t of n.transitions)t!==o&&t.target===a&&(t.target=r)}const c=t.ruleToStartState[e];for(;c.transitions.length>0;){const t=c.removeTransition(c.transitions.length-1);i.addTransition(t)}t.ruleToStartState[e].addTransition(new Ot(i)),a&&r.addTransition(new Ot(a));const h=new gt;t.addState(h),h.addTransition(new Lt(r,t.ruleToTokenType[e])),i.addTransition(new Ot(h))}stateIsEndStateFor(t,e){if(t.ruleIndex!==e)return null;if(!(t instanceof yt))return null;const s=t.transitions[t.transitions.length-1].target;return s instanceof Tt&&s.epsilonOnlyTransitions&&s.transitions[0].target instanceof Et?t:null}markPrecedenceDecisions(t){for(const e of t.states)if(e instanceof yt&&t.ruleToStartState[e.ruleIndex].isLeftRecursiveRule){const t=e.transitions[e.transitions.length-1].target;t instanceof Tt&&t.epsilonOnlyTransitions&&t.transitions[0].target instanceof Et&&(e.precedenceRuleDecision=!0)}}verifyATN(t){if(this.deserializationOptions.verifyATN)for(const e of t.states)if(null!==e)if(this.checkCondition(e.epsilonOnlyTransitions||e.transitions.length<=1),e instanceof Nt)this.checkCondition(null!==e.loopBackState);else if(e instanceof yt)if(this.checkCondition(null!==e.loopBackState),this.checkCondition(2===e.transitions.length),e.transitions[0].target instanceof It)this.checkCondition(e.transitions[1].target instanceof Tt),this.checkCondition(!e.nonGreedy);else{if(!(e.transitions[0].target instanceof Tt))throw new Error("IllegalState");this.checkCondition(e.transitions[1].target instanceof It),this.checkCondition(e.nonGreedy)}else e instanceof kt?(this.checkCondition(1===e.transitions.length),this.checkCondition(e.transitions[0].target instanceof yt)):e instanceof Tt?this.checkCondition(null!==e.loopBackState):e instanceof St?this.checkCondition(null!==e.stopState):e instanceof xt?this.checkCondition(null!==e.endState):e instanceof mt?this.checkCondition(null!==e.startState):e instanceof ft?this.checkCondition(e.transitions.length<=1||e.decision>=0):this.checkCondition(e.transitions.length<=1||e instanceof Et)}checkCondition(t,e){if(!t)throw null==e&&(e="IllegalState"),e}edgeFactory(t,e,s,n,i,r,o){const a=t.states[s];switch(e){case Y.EPSILON:return new Ot(a);case Y.RANGE:return new Rt(a,0!==r?S.EOF:n,i);case Y.RULE:return new wt(t.states[n],i,r,a);case Y.PREDICATE:return new Pt(a,n,i,0!==r);case Y.PRECEDENCE:return new Ft(a,n);case Y.ATOM:return new Lt(a,0!==r?S.EOF:n);case Y.ACTION:return new bt(a,n,i,0!==r);case Y.SET:return new $(a,o[n]);case Y.NOT_SET:return new K(a,o[n]);case Y.WILDCARD:return new Dt(a);default:throw new Error("The specified transition type: "+e+" is not valid.")}}stateFactory(e,s){const n=t.stateTypeMapper.get(e);if(!n)throw new Error("The specified state type "+e+" is not valid.");const i=new n;return i.ruleIndex=s,i}lexerActionFactory(e,s,n){const i=t.lexerActionFactoryMapper.get(e);if(!i)throw new Error("The specified lexer action type "+e+" is not valid.");return i(s,n)}},te=class t extends j{static{C(this,"OrderedHashMap")}#o=[];clear(){super.clear(),this.#o=[]}get(t){return super.get(t)}set(t,e){const s=super.set(t,e);return void 0===s&&this.#o.push(t),s}setIfAbsent(t,e){const s=super.setIfAbsent(t,e);return void 0===s&&this.#o.push(t),s}values(){return{[Symbol.iterator]:()=>{let t=0;return{next:C((()=>t<this.#o.length?{done:!1,value:super.get(this.#o[t++])}:{done:!0,value:void 0}),"next")}}}}keys(){return this.#o[Symbol.iterator]()}equals(e){return e instanceof t&&super.equals(e)}};(class t{static{C(this,"ATNSerializer")}atn;data=[];sets=new te(I.instance);nonGreedyStates=[];precedenceStates=[];constructor(t){this.atn=t}static getSerialized(e){return new t(e).serialize()}static serializeSets(t,e){t.push(e.length);for(const s of e){const e=s.contains(S.EOF),n=[...s];e&&n[0].stop===S.EOF?t.push(n.length-1):t.push(n.length),t.push(e?1:0);for(const e of n){if(e.start===S.EOF){if(e.stop===S.EOF)continue;t.push(0)}else t.push(e.start);t.push(e.stop)}}}serialize(){this.addPreamble();const t=this.addEdges();this.addNonGreedyStates(),this.addPrecedenceStates(),this.addRuleStatesAndLexerTokenTypes(),this.addModeStartStates();const e=this.addSets();return this.addEdges(t,e),this.addDecisionStartStates(),this.addLexerActions(),this.data}addPreamble(){this.data.push(Jt.SERIALIZED_VERSION),this.data.push(this.atn.grammarType),this.data.push(this.atn.maxTokenType)}addLexerActions(){if(this.atn.grammarType===ut.LEXER){this.data.push(this.atn.lexerActions.length);for(const t of this.atn.lexerActions)switch(this.data.push(t.actionType),t.actionType){case Mt:{const e=t.channel;this.data.push(e),this.data.push(0);break}case Ut:{const e=t.ruleIndex,s=t.actionIndex;this.data.push(e),this.data.push(s);break}case Bt:{const e=t.mode;this.data.push(e),this.data.push(0);break}case Ht:case zt:this.data.push(0),this.data.push(0);break;case Vt:{const e=t.mode;this.data.push(e),this.data.push(0);break}case qt:this.data.push(0),this.data.push(0);break;case Wt:{const e=t.type;this.data.push(e),this.data.push(0);break}default:throw new Error(`The specified lexer action type ${t.actionType} is not valid.`)}}}addDecisionStartStates(){this.data.push(this.atn.decisionToState.length);for(const t of this.atn.decisionToState)this.data.push(t.stateNumber)}addEdges(...t){switch(t.length){case 0:{let t=0;this.data.push(this.atn.states.length);for(const e of this.atn.states){if(null===e){this.data.push(z.INVALID_TYPE);continue}const s=e.constructor.stateType;e instanceof ft&&e.nonGreedy&&this.nonGreedyStates.push(e.stateNumber),e instanceof St&&e.isLeftRecursiveRule&&this.precedenceStates.push(e.stateNumber),this.data.push(s),this.data.push(e.ruleIndex),e.constructor.stateType===z.LOOP_END?this.data.push(e.loopBackState.stateNumber):e instanceof xt&&this.data.push(e.endState.stateNumber),e.constructor.stateType!==z.RULE_STOP&&(t+=e.transitions.length);for(const t of e.transitions){const e=t.transitionType;if(e===Y.SET||e===Y.NOT_SET){const e=t;this.sets.set(e.set,!0)}}}return t}case 2:{const[e,s]=t;this.data.push(e);for(const t of this.atn.states)if(null!==t&&t.constructor.stateType!==z.RULE_STOP)for(const e of t.transitions){if(null===this.atn.states[e.target.stateNumber])throw new Error("Cannot serialize a transition to a removed state.");const n=t.stateNumber;let i=e.target.stateNumber;const r=e.transitionType;let o=0,a=0,c=0;switch(r){case Y.RULE:i=e.followState.stateNumber,o=e.target.stateNumber,a=e.ruleIndex,c=e.precedence;break;case Y.PRECEDENCE:o=e.precedence;break;case Y.PREDICATE:{const t=e;o=t.ruleIndex,a=t.predIndex,c=t.isCtxDependent?1:0;break}case Y.RANGE:o=e.start,a=e.stop,o===S.EOF&&(o=0,c=1);break;case Y.ATOM:o=e.labelValue,o===S.EOF&&(o=0,c=1);break;case Y.ACTION:{const t=e;o=t.ruleIndex,a=t.actionIndex,c=t.isCtxDependent?1:0;break}case Y.SET:case Y.NOT_SET:o=s.get(e.set)}this.data.push(n),this.data.push(i),this.data.push(r),this.data.push(o),this.data.push(a),this.data.push(c)}break}default:throw new Error("Invalid number of arguments")}}addSets(){t.serializeSets(this.data,[...this.sets.keys()]);const e=new j;let s=0;for(const t of this.sets.keys())e.set(t,s++);return e}addModeStartStates(){const t=this.atn.modeToStartState.length;if(this.data.push(t),t>0)for(const t of this.atn.modeToStartState)this.data.push(t.stateNumber)}addRuleStatesAndLexerTokenTypes(){const t=this.atn.ruleToStartState.length;this.data.push(t);for(let e=0;e<t;e++){const t=this.atn.ruleToStartState[e];this.data.push(t.stateNumber),this.atn.grammarType===ut.LEXER&&this.data.push(this.atn.ruleToTokenType[e])}}addPrecedenceStates(){this.data.push(this.precedenceStates.length);for(const t of this.precedenceStates)this.data.push(t)}addNonGreedyStates(){this.data.push(this.nonGreedyStates.length);for(const t of this.nonGreedyStates)this.data.push(t)}});var ee=class t{static{C(this,"DFAState")}stateNumber=-1;configs;edges=[];isAcceptState=!1;prediction=-1;lexerActionExecutor=null;requiresFullContext=!1;predicates=null;constructor(t){t&&(this.configs=t)}static fromState(e){const s=new t;return s.stateNumber=e,s}static fromConfigs(e){return new t(e)}static hashCode(t){return t.configs.hashCode()}static equals(t,e){return t.configs.equals(e.configs)}getAltSet(){const t=new Set;for(const e of this.configs)t.add(e.alt);return 0===t.size?null:t}toString(){let t="";return t+=this.stateNumber,t+=":",t+=this.configs?this.configs.toString():"",this.isAcceptState&&(t+="=>",this.predicates?t+=D(this.predicates):t+=this.prediction),t.toString()}},se=class{static{C(this,"ATNSimulator")}static ERROR=ee.fromState(2147483647);atn;sharedContextCache;constructor(t,e){return this.atn=t,this.sharedContextCache=e,this}getCachedContext(t){if(!this.sharedContextCache)return t;const e=new j(I.instance);return it(t,this.sharedContextCache,e)}};(class t{static{C(this,"CodePointTransitions")}static createWithCodePoint(e,s){return t.createWithCodePointRange(e,s,s)}static createWithCodePointRange(t,e,s){return e===s?new Lt(t,e):new Rt(t,e,s)}});var ne,ie=class{static{C(this,"DecisionInfo")}decision=0;invocations=0;timeInPrediction=0;sllTotalLook=0;sllMinLook=0;sllMaxLook=0;sllMaxLookEvent;llTotalLook=0;llMinLook=0;llMaxLook=0;llMaxLookEvent;contextSensitivities;errors;ambiguities;predicateEvals;sllATNTransitions=0;sllDFATransitions=0;llFallback=0;llATNTransitions=0;llDFATransitions=0;constructor(t){this.decision=t,this.contextSensitivities=[],this.errors=[],this.ambiguities=[],this.predicateEvals=[]}toString(){return"{decision="+this.decision+", contextSensitivities="+this.contextSensitivities.length+", errors="+this.errors.length+", ambiguities="+this.ambiguities.length+", sllLookahead="+this.sllTotalLook+", sllATNTransitions="+this.sllATNTransitions+", sllDFATransitions="+this.sllDFATransitions+", llFallback="+this.llFallback+", llLookahead="+this.llTotalLook+", llATNTransitions="+this.llATNTransitions+"}"}},re=class t extends H{static{C(this,"LexerATNConfig")}lexerActionExecutor;passedThroughNonGreedyDecision;constructor(e,s,n,i){return super(e,s,n??e.context,n?M.NONE:e.semanticContext),this.lexerActionExecutor=n?i:e.lexerActionExecutor??null,this.passedThroughNonGreedyDecision=t.checkNonGreedyDecision(e,this.state),this}static createWithExecutor(e,s,n){return new t(e,s,e.context,n)}static createWithConfig(e,s,n){return new t(s,e,n??null,s.lexerActionExecutor)}static createWithContext(e,s,n){return new t({alt:s},e,n,null)}static checkNonGreedyDecision(t,e){return t.passedThroughNonGreedyDecision||"nonGreedy"in e&&e.nonGreedy}hashCode(){if(void 0===this.cachedHashCode){let t=N.initialize(7);t=N.update(t,this.state.stateNumber),t=N.update(t,this.alt),t=N.updateFromComparable(t,this.context),t=N.updateFromComparable(t,this.semanticContext),t=N.update(t,this.passedThroughNonGreedyDecision?1:0),t=N.updateFromComparable(t,this.lexerActionExecutor),t=N.finish(t,6),this.cachedHashCode=t}return this.cachedHashCode}equals(t){return this===t||this.passedThroughNonGreedyDecision===t.passedThroughNonGreedyDecision&&(this.lexerActionExecutor&&t.lexerActionExecutor?this.lexerActionExecutor.equals(t.lexerActionExecutor):!t.lexerActionExecutor)&&super.equals(t)}},oe=class{static{C(this,"BaseErrorListener")}syntaxError(t,e,s,n,i,r){}reportAmbiguity(t,e,s,n,i,r,o){}reportAttemptingFullContext(t,e,s,n,i,r){}reportContextSensitivity(t,e,s,n,i,r){}},ae=class t extends oe{static{C(this,"ConsoleErrorListener")}static instance=new t;syntaxError(t,e,s,n,i,r){console.error("line "+s+":"+n+" "+i)}},ce=class extends oe{constructor(t){return super(),this.delegates=t,this}static{C(this,"ProxyErrorListener")}syntaxError(t,e,s,n,i,r){this.delegates.forEach((o=>{o.syntaxError(t,e,s,n,i,r)}))}reportAmbiguity(t,e,s,n,i,r,o){this.delegates.forEach((a=>{a.reportAmbiguity(t,e,s,n,i,r,o)}))}reportAttemptingFullContext(t,e,s,n,i,r){this.delegates.forEach((o=>{o.reportAttemptingFullContext(t,e,s,n,i,r)}))}reportContextSensitivity(t,e,s,n,i,r){this.delegates.forEach((o=>{o.reportContextSensitivity(t,e,s,n,i,r)}))}},he=class t{static{C(this,"Recognizer")}static EOF=-1;static tokenTypeMapCache=new Map;static ruleIndexMapCache=new Map;interpreter;listeners=[ae.instance];stateNumber=-1;checkVersion(t){const e="4.13.1";e!==t&&console.error("ANTLR runtime and generated code versions disagree: "+e+"!="+t)}addErrorListener(t){this.listeners.push(t)}removeErrorListeners(){this.listeners=[]}removeErrorListener(t){for(let e=0;e<this.listeners.length;e++)if(this.listeners[e]===t)return void this.listeners.splice(e,1)}getErrorListeners(){return this.listeners}getTokenTypeMap(){const e=this.vocabulary;let s=t.tokenTypeMapCache.get(e);if(!s){s=new Map;for(let t=0;t<=this.atn.maxTokenType;t++){const n=e.getLiteralName(t);n&&s.set(n,t);const i=e.getSymbolicName(t);i&&s.set(i,t)}s.set("EOF",S.EOF),t.tokenTypeMapCache.set(e,s)}return s}getRuleIndexMap(){const e=this.ruleNames;let s=t.ruleIndexMapCache.get(e);return s||(s=new Map,e.forEach(((t,e)=>s.set(t,e))),t.ruleIndexMapCache.set(e,s)),s}getTokenType(t){const e=this.getTokenTypeMap().get(t);return e||S.INVALID_TYPE}getErrorHeader(t){const e=t.offendingToken?.line,s=t.offendingToken?.column;return"line "+e+":"+s}get errorListenerDispatch(){return new ce(this.listeners)}sempred(t,e,s){return!0}precpred(t,e){return!0}action(t,e,s){}get atn(){return this.interpreter.atn}get state(){return this.stateNumber}set state(t){this.stateNumber=t}getParseInfo(){}},le=class t{static{C(this,"CommonTokenFactory")}static DEFAULT=new t;copyText=!1;constructor(t){this.copyText=t??!1}create(t,e,s,n,i,r,o,a){const c=Z.fromSource(t,e,n,i,r);return c.line=o,c.column=a,s?c.text=s:this.copyText&&null!==t[1]&&(c.text=t[1].getTextFromRange(i,r)),c}},ue=class t extends Error{static{C(this,"RecognitionException")}ctx;offendingToken=null;offendingState=-1;recognizer;input;constructor(e){super(e.message),Error.captureStackTrace&&Error.captureStackTrace(this,t),this.message=e.message,this.recognizer=e.recognizer,this.input=e.input,this.ctx=e.ctx,null!==this.recognizer&&(this.offendingState=this.recognizer.state)}getExpectedTokens(){return null!==this.recognizer&&null!==this.ctx?this.recognizer.atn.getExpectedTokens(this.offendingState,this.ctx):null}toString(){return this.message}},de=class extends ue{static{C(this,"LexerNoViableAltException")}startIndex;deadEndConfigs;constructor(t,e,s,n){super({message:"",recognizer:t,input:e,ctx:null}),this.startIndex=s,this.deadEndConfigs=n}toString(){let t="";return this.input&&this.startIndex>=0&&this.startIndex<this.input.size&&(t=this.input.getTextFromRange(this.startIndex,this.startIndex)),`LexerNoViableAltException(${t})`}},pe=class t extends he{static{C(this,"Lexer")}static DEFAULT_MODE=0;static MORE=-2;static SKIP=-3;static DEFAULT_TOKEN_CHANNEL=S.DEFAULT_CHANNEL;static HIDDEN=S.HIDDEN_CHANNEL;options={minDFAEdge:0,maxDFAEdge:256,minCodePoint:0,maxCodePoint:1114111};tokenStartCharIndex=-1;channel=0;type=0;mode=t.DEFAULT_MODE;currentTokenColumn=0;currentTokenStartLine=0;input;token=null;hitEOF=!1;factory;#a=[];#s;constructor(t,e){super(),this.options={...this.options,...e},this.input=t,this.factory=le.DEFAULT}reset(e=!0){e&&this.input.seek(0),this.token=null,this.type=S.INVALID_TYPE,this.channel=S.DEFAULT_CHANNEL,this.tokenStartCharIndex=-1,this.currentTokenColumn=-1,this.currentTokenStartLine=-1,this.#s=void 0,this.hitEOF=!1,this.mode=t.DEFAULT_MODE,this.#a=[],this.interpreter.reset()}nextToken(){if(null===this.input)throw new Error("nextToken requires a non-null input stream.");const e=this.input.mark();try{for(;;){if(this.hitEOF)return this.emitEOF(),this.token;this.token=null,this.channel=S.DEFAULT_CHANNEL,this.tokenStartCharIndex=this.input.index,this.currentTokenColumn=this.interpreter.column,this.currentTokenStartLine=this.interpreter.line,this.#s=void 0;let e=!1;for(;;){this.type=S.INVALID_TYPE;let s=t.SKIP;try{s=this.interpreter.match(this.input,this.mode)}catch(t){if(!(t instanceof de))throw t;this.notifyListeners(t),this.recover(t)}if(this.input.LA(1)===S.EOF&&(this.hitEOF=!0),this.type===S.INVALID_TYPE&&(this.type=s),this.type===t.SKIP){e=!0;break}if(this.type!==t.MORE)break}if(!e)return null===this.token&&this.emit(),this.token}}finally{this.input.release(e)}}skip(){this.type=t.SKIP}more(){this.type=t.MORE}pushMode(t){this.#a.push(this.mode),this.mode=t}popMode(){if(0===this.#a.length)throw new Error("Empty Stack");return this.mode=this.#a.pop(),this.mode}get modeStack(){return this.#a}emitToken(t){this.token=t}emit(){const t=this.factory.create([this,this.input],this.type,this.#s,this.channel,this.tokenStartCharIndex,this.getCharIndex()-1,this.currentTokenStartLine,this.currentTokenColumn);return this.emitToken(t),t}emitEOF(){const t=this.factory.create([this,this.input],S.EOF,void 0,S.DEFAULT_CHANNEL,this.input.index,this.input.index-1,this.line,this.column);return this.emitToken(t),t}getCharIndex(){return this.input.index}getAllTokens(){const t=[];let e=this.nextToken();for(;e.type!==S.EOF;)t.push(e),e=this.nextToken();return t}notifyListeners(t){const e=this.tokenStartCharIndex,s=this.input.index,n=this.input.getTextFromRange(e,s),i="token recognition error at: '"+this.getErrorDisplay(n)+"'";this.errorListenerDispatch.syntaxError(this,null,this.currentTokenStartLine,this.currentTokenColumn,i,t)}getErrorDisplay(t){return t}getErrorDisplayForChar(t){return t.charCodeAt(0)===S.EOF?"<EOF>":"\n"===t?"\\n":"\t"===t?"\\t":"\r"===t?"\\r":t}getCharErrorDisplay(t){return"'"+this.getErrorDisplayForChar(t)+"'"}recover(t){this.input.LA(1)!==S.EOF&&(t instanceof de?this.interpreter.consume(this.input):this.input.consume())}get inputStream(){return this.input}set inputStream(t){this.reset(!1),this.input=t}set tokenFactory(t){this.factory=t}get tokenFactory(){return this.factory}get sourceName(){return this.input.getSourceName()}get line(){return this.interpreter.line}set line(t){this.interpreter.line=t}get column(){return this.interpreter.column}set column(t){this.interpreter.column=t}get text(){return this.#s?this.#s:this.interpreter.getText(this.input)}set text(t){this.#s=t}},ge=class{static{C(this,"DFASerializer")}dfa;vocabulary;constructor(t,e){this.dfa=t,this.vocabulary=e}toString(){if(!this.dfa.s0)return"";let t="";const e=this.dfa.getStates();for(const s of e){let e=0;e=s.edges.length;for(let n=0;n<e;n++){const e=s.edges[n];if(e&&2147483647!==e.stateNumber){t+=this.getStateString(s);t+="-",t+=this.getEdgeLabel(n),t+="->",t+=this.getStateString(e),t+="\n"}}}return t}getEdgeLabel(t){return`${this.vocabulary.getDisplayName(t-1)}`}getStateString(t){const e=t.stateNumber,s=(t.isAcceptState?":":"")+"s"+e+(t.requiresFullContext?"^":"");return t.isAcceptState?null!==t.predicates?`${s}=>${t.predicates.toString()}`:`${s}=>${t.prediction}`:`${s}`}},fe=class extends ge{static{C(this,"LexerDFASerializer")}constructor(t){super(t,R.EMPTY_VOCABULARY)}getEdgeLabel=C((t=>"'"+String.fromCharCode(t)+"'"),"getEdgeLabel")},xe=class{static{C(this,"DFA")}s0;decision;atnStartState;isPrecedenceDfa;states=new Map;constructor(t,e){this.atnStartState=t,this.decision=e??0;let s=!1;t instanceof yt&&t.precedenceRuleDecision&&(s=!0,this.s0=ee.fromState(-1)),this.isPrecedenceDfa=s}[Symbol.iterator]=()=>this.states.values()[Symbol.iterator]();getPrecedenceStartState=C((t=>{if(!this.isPrecedenceDfa)throw new Error("Only precedence DFAs may contain a precedence start state.");if(!(!this.s0||!this.s0.edges||t<0||t>=this.s0.edges.length))return this.s0.edges[t]}),"getPrecedenceStartState");setPrecedenceStartState=C(((t,e)=>{if(!this.isPrecedenceDfa)throw new Error("Only precedence DFAs may contain a precedence start state.");t<0||!this.s0||(this.s0.edges[t]=e)}),"setPrecedenceStartState");getStates(){const t=[...this.states.values()];return t.sort(((t,e)=>t.stateNumber-e.stateNumber)),t}getState(t){return this.states.get(t.configs.hashCode())??null}getStateForConfigs(t){return this.states.get(t.hashCode())??null}addState(t){const e=t.configs.hashCode();this.states.has(e)||(this.states.set(e,t),t.stateNumber=this.states.size-1)}toString(t){if(!t)return this.toString(R.EMPTY_VOCABULARY);if(!this.s0)return"";return new ge(this,t).toString()??""}toLexerString(){if(!this.s0)return"";return new fe(this).toString()??""}get length(){return this.states.size}},me=class t{static{C(this,"LexerIndexedCustomAction")}offset;action;actionType;isPositionDependent=!0;cachedHashCode;constructor(t,e){this.actionType=e.actionType,this.offset=t,this.action=e}execute(t){this.action.execute(t)}hashCode(){if(void 0===this.cachedHashCode){let t=N.initialize();t=N.update(t,this.offset),t=N.updateFromComparable(t,this.action),this.cachedHashCode=N.finish(t,2)}return this.cachedHashCode}equals(e){return this===e||e instanceof t&&(this.offset===e.offset&&this.action===e.action)}},Te=class t{static{C(this,"LexerActionExecutor")}lexerActions;actionType;isPositionDependent=!1;cachedHashCode;constructor(t){return this.actionType=-1,this.lexerActions=t??[],this}static append(e,s){if(null===e)return new t([s]);const n=e.lexerActions.concat([s]);return new t(n)}fixOffsetBeforeMatch(e){let s=null;for(let t=0;t<this.lexerActions.length;t++)!this.lexerActions[t].isPositionDependent||this.lexerActions[t]instanceof me||(null===s&&(s=this.lexerActions.concat([])),s[t]=new me(e,this.lexerActions[t]));return null===s?this:new t(s)}execute(t,e,s){if(void 0===e||void 0===s)return;let n=!1;const i=e.index;try{for(const r of this.lexerActions){let o=r;if(r instanceof me){const t=r.offset;e.seek(s+t),o=r.action,n=s+t!==i}else r.isPositionDependent&&(e.seek(i),n=!1);o.execute(t)}}finally{n&&e.seek(i)}}hashCode(){if(void 0===this.cachedHashCode){let t=N.initialize(7);for(const e of this.lexerActions)t=N.update(t,e.hashCode());this.cachedHashCode=N.finish(t,this.lexerActions.length)}return this.cachedHashCode}equals(t){return this===t||this.cachedHashCode===t.cachedHashCode&&(this.lexerActions.length===t.lexerActions.length&&this.lexerActions.every(((e,s)=>e.equals(t.lexerActions[s]))))}},Se=class t extends L{static{C(this,"OrderedHashSet")}elements=[];getOrAdd(t){const e=this.size,s=super.getOrAdd(t);return this.size>e&&this.elements.push(t),s}equals(e){return e instanceof t&&super.equals(e)}clear(){super.clear(),this.elements=[]}*[Symbol.iterator](){yield*this.elements}toArray(){return this.elements.slice(0)}},Ee=class extends pt{static{C(this,"OrderedATNConfigSet")}constructor(){super(),this.configLookup=new Se}},Ae=class extends se{static{C(this,"LexerATNSimulator")}static debug=!1;decisionToDFA;recognizer=null;startIndex=-1;line=1;column=0;mode=pe.DEFAULT_MODE;prevAccept;options;lexerATNConfigFactory;constructor(t,e,s,n){super(e,n),this.decisionToDFA=s,this.recognizer=t,this.options=t?t.options:{minDFAEdge:0,maxDFAEdge:256,minCodePoint:0,maxCodePoint:1114111}}match(t,e){this.mode=e;const s=t.mark();try{this.startIndex=t.index,this.prevAccept=void 0;const s=this.decisionToDFA[e];return s.s0?this.execATN(t,s.s0):this.matchATN(t)}finally{t.release(s)}}reset(){this.prevAccept=void 0,this.startIndex=-1,this.line=1,this.column=0,this.mode=pe.DEFAULT_MODE}clearDFA(){for(let t=0;t<this.decisionToDFA.length;t++)this.decisionToDFA[t]=new xe(this.atn.getDecisionState(t),t)}getDFA(t){return this.decisionToDFA[t]}getText(t){return t.getTextFromRange(this.startIndex,t.index-1)}consume(t){t.LA(1)==="\n".charCodeAt(0)?(this.line+=1,this.column=0):this.column+=1,t.consume()}getTokenName(t){return t===S.EOF?"EOF":"'"+String.fromCharCode(t)+"'"}matchATN(t){const e=this.atn.modeToStartState[this.mode];this.mode;const s=this.computeStartState(t,e),n=s.hasSemanticContext;s.hasSemanticContext=!1;const i=this.addDFAState(s);n||(this.decisionToDFA[this.mode].s0=i);return this.execATN(t,i)}execATN(t,e){e.isAcceptState&&this.captureSimState(t,e);let s=t.LA(1);for(;;){let n=this.getExistingTargetState(e,s);if(n||(n=this.computeTargetState(t,e,s)),n===se.ERROR)break;if(s!==S.EOF&&this.consume(t),n.isAcceptState&&(this.captureSimState(t,n),s===S.EOF))break;s=t.LA(1),e=n}return this.failOrAccept(t,e.configs,s)}getExistingTargetState(t,e){if(e>=this.options.minDFAEdge&&e<=this.options.maxDFAEdge){return t.edges[e-this.options.minDFAEdge]}}computeTargetState(t,e,s){const n=new Ee;return this.getReachableConfigSet(t,e.configs,n,s),0===n.length?(n.hasSemanticContext||this.addDFAEdge(e,s,se.ERROR),se.ERROR):this.addDFAEdge(e,s,null,n)}failOrAccept(t,e,s){if(this.prevAccept?.dfaState){const{dfaState:e,index:s,line:n,column:i}=this.prevAccept;return this.accept(t,e.lexerActionExecutor,this.startIndex,s,n,i),e.prediction}if(s===S.EOF&&t.index===this.startIndex)return S.EOF;throw new de(this.recognizer,t,this.startIndex,e)}getReachableConfigSet(t,e,s,n){let i=ut.INVALID_ALT_NUMBER;for(const r of e){const e=r.alt===i;if(!e||!r.passedThroughNonGreedyDecision)for(const o of r.state.transitions){const a=this.getReachableTarget(o,n);if(a){let o=r.lexerActionExecutor;o&&(o=o.fixOffsetBeforeMatch(t.index-this.startIndex));const c=n===S.EOF,h=re.createWithExecutor(r,a,o);this.closure(t,h,s,e,!0,c)&&(i=r.alt)}}}}accept(t,e,s,n,i,r){t.seek(n),this.line=i,this.column=r,e&&this.recognizer&&e.execute(this.recognizer,t,s)}getReachableTarget(t,e){return t.matches(e,this.options.minCodePoint,this.options.maxCodePoint)?t.target:void 0}computeStartState(t,e){const s=W.instance,n=new Ee;for(let i=0;i<e.transitions.length;i++){const r=e.transitions[i].target,o=re.createWithContext(r,i+1,s);this.closure(t,o,n,!1,!1,!1)}return n}closure(t,e,s,n,i,r){let o=null;if(e.state.constructor.stateType===z.RULE_STOP){if(!e.context||e.context.hasEmptyPath()){if(!e.context||e.context.isEmpty())return s.add(e),!0;s.add(re.createWithConfig(e.state,e,W.instance)),n=!0}if(e.context&&!e.context.isEmpty())for(let a=0;a<e.context.length;a++)if(e.context.getReturnState(a)!==V.EMPTY_RETURN_STATE){const c=e.context.getParent(a),h=this.atn.states[e.context.getReturnState(a)];o=re.createWithConfig(h,e,c),n=this.closure(t,o,s,n,i,r)}return n}e.state.epsilonOnlyTransitions||n&&e.passedThroughNonGreedyDecision||s.add(e);for(const a of e.state.transitions)o=this.getEpsilonTarget(t,e,a,s,i,r),o&&(n=this.closure(t,o,s,n,i,r));return n}getEpsilonTarget(t,e,s,n,i,r){this.lexerATNConfigFactory||this.setupATNFactoryLookup();const o=this.lexerATNConfigFactory[s.transitionType];return o?o(t,e,s,n,i,r):null}setupATNFactoryLookup(){this.lexerATNConfigFactory=[],this.lexerATNConfigFactory[Y.RULE]=(t,e,s)=>{const n=st(e.context??void 0,s.followState.stateNumber);return re.createWithConfig(s.target,e,n)},this.lexerATNConfigFactory[Y.PRECEDENCE]=()=>{throw new Error("Precedence predicates are not supported in lexers.")},this.lexerATNConfigFactory[Y.PREDICATE]=(t,e,s,n,i)=>{const r=s;return n.hasSemanticContext=!0,this.evaluatePredicate(t,r.ruleIndex,r.predIndex,i)?re.createWithConfig(s.target,e):null},this.lexerATNConfigFactory[Y.ACTION]=(t,e,s)=>{if(null===e.context||e.context.hasEmptyPath()){const t=Te.append(e.lexerActionExecutor,this.atn.lexerActions[s.actionIndex]);return re.createWithExecutor(e,s.target,t)}return re.createWithConfig(s.target,e)},this.lexerATNConfigFactory[Y.EPSILON]=(t,e,s)=>re.createWithConfig(s.target,e);const t=C(((t,e,s,n,i,r)=>r&&s.matches(S.EOF,this.options.minCodePoint,this.options.maxCodePoint)?re.createWithConfig(s.target,e):null),"simple");this.lexerATNConfigFactory[Y.ATOM]=t,this.lexerATNConfigFactory[Y.RANGE]=t,this.lexerATNConfigFactory[Y.SET]=t}evaluatePredicate(t,e,s,n){if(!this.recognizer)return!0;if(!n)return this.recognizer.sempred(null,e,s);const i=this.column,r=this.line,o=t.index,a=t.mark();try{return this.consume(t),this.recognizer.sempred(null,e,s)}finally{this.column=i,this.line=r,t.seek(o),t.release(a)}}captureSimState(t,e){this.prevAccept={index:t.index,line:this.line,column:this.column,dfaState:e}}addDFAEdge(t,e,s,n){if(!s&&n){const t=n.hasSemanticContext;if(n.hasSemanticContext=!1,s=this.addDFAState(n),t)return s}return e<this.options.minDFAEdge||e>this.options.maxDFAEdge||(t.edges[e-this.options.minDFAEdge]=s),s}addDFAState(t){const e=this.decisionToDFA[this.mode],s=e.getStateForConfigs(t);if(s)return s;const n=ee.fromConfigs(t),i=t.firstStopState;return i&&(n.isAcceptState=!0,n.lexerActionExecutor=i.lexerActionExecutor,n.prediction=this.atn.ruleToTokenType[i.state.ruleIndex]),t.setReadonly(!0),e.addState(n),n}},Ce=class{static{C(this,"ParseInfo")}atnSimulator;constructor(t){this.atnSimulator=t}getDecisionInfo(){return this.atnSimulator.getDecisionInfo()}getLLDecisions(){const t=this.atnSimulator.getDecisionInfo(),e=new Array;for(let s=0;s<t.length;s++){t[s].llFallback>0&&e.push(s)}return e}getTotalTimeInPrediction(){const t=this.atnSimulator.getDecisionInfo();let e=0;for(const s of t)e+=s.timeInPrediction;return e}getTotalSLLLookaheadOps(){const t=this.atnSimulator.getDecisionInfo();let e=0;for(const s of t)e+=s.sllTotalLook;return e}getTotalLLLookaheadOps(){const t=this.atnSimulator.getDecisionInfo();let e=0;for(const s of t)e+=s.llTotalLook;return e}getTotalSLLATNLookaheadOps(){const t=this.atnSimulator.getDecisionInfo();let e=0;for(const s of t)e+=s.sllATNTransitions;return e}getTotalLLATNLookaheadOps(){const t=this.atnSimulator.getDecisionInfo();let e=0;for(const s of t)e+=s.llATNTransitions;return e}getTotalATNLookaheadOps(){const t=this.atnSimulator.getDecisionInfo();let e=0;for(const s of t)e+=s.sllATNTransitions,e+=s.llATNTransitions;return e}getDFASize(t){if(void 0===t){let t=0;const e=this.atnSimulator.decisionToDFA;for(let s=0;s<e.length;s++)t+=this.getDFASize(s);return t}return this.atnSimulator.decisionToDFA[t].length}},ke=class extends ue{static{C(this,"NoViableAltException")}deadEndConfigs=null;startToken;constructor(t,e=null,s=null,n=null,i=null,r=null){r=r??t.context,n=n??t.getCurrentToken(),s=s??t.getCurrentToken(),super({message:"",recognizer:t,input:e=e??t.inputStream,ctx:r}),this.deadEndConfigs=i,this.startToken=s,this.offendingToken=n}},ye=class{static{C(this,"DoubleDict")}cacheMap;constructor(){this.cacheMap=new j}get(t,e){const s=this.cacheMap.get(t)??null;return null===s?null:s.get(e)??null}set(t,e,s){let n=this.cacheMap.get(t);n||(n=new j,this.cacheMap.set(t,n)),n.set(e,s)}},Ne=class t{static{C(this,"SubsetEqualityComparer")}static instance=new t;hashCode(t){let e=N.initialize(7);return e=N.update(e,t.state.stateNumber),e=N.updateFromComparable(e,t.context),e=N.finish(e,2),e}equals(t,e){return t.state.stateNumber===e.state.stateNumber&&(t.context?.equals(e.context)??!0)}},Ie=class t{static{C(this,"PredictionMode")}static SLL=0;static LL=1;static LL_EXACT_AMBIG_DETECTION=2;static hasSLLConflictTerminatingPrediction(e,s){if(t.allConfigsInRuleStopStates(s))return!0;if(e===t.SLL&&s.hasSemanticContext){const t=new pt;for(let e of s)e=H.duplicate(e,M.NONE),t.add(e);s=t}const n=t.getConflictingAltSubsets(s);return t.hasConflictingAltSet(n)&&!t.hasStateAssociatedWithOneAlt(s)}static hasConfigInRuleStopState(t){for(const e of t)if(e.state instanceof Et)return!0;return!1}static allConfigsInRuleStopStates(t){for(const e of t)if(!(e.state instanceof Et))return!1;return!0}static resolvesToJustOneViableAlt(e){return t.getSingleViableAlt(e)}static allSubsetsConflict(e){return!t.hasNonConflictingAltSet(e)}static hasNonConflictingAltSet(t){for(const e of t)if(1===e.length)return!0;return!1}static hasConflictingAltSet(t){for(const e of t)if(e.length>1)return!0;return!1}static allSubsetsEqual(t){let e=null;for(const s of t)if(null===e)e=s;else if(s!==e)return!1;return!0}static getUniqueAlt(e){const s=t.getAlts(e);return 1===s.length?s.nextSetBit(0):ut.INVALID_ALT_NUMBER}static getAlts(t){const e=new y;return t.forEach((t=>{e.or(t)})),e}static getConflictingAltSubsets(t){const e=new j(Ne.instance);for(const s of t){let t=e.get(s);t||(t=new y,e.set(s,t)),t.set(s.alt)}return Array.from(e.values())}static getStateToAltMap(t){const e=new j(I.instance);for(const s of t){let t=e.get(s.state);t||(t=new y,e.set(s.state,t)),t.set(s.alt)}return e}static hasStateAssociatedWithOneAlt(t){const e={};for(const s of t){const t=s.state.stateNumber;e[t]||(e[t]=0),e[t]++}return Object.values(e).some((t=>1===t))}static getSingleViableAlt(t){let e=null;for(const s of t){const t=s.nextSetBit(0);if(null===e)e=t;else if(e!==t)return ut.INVALID_ALT_NUMBER}return e??0}},ve=class t extends se{static{C(this,"ParserATNSimulator")}static traceATNSimulator=!1;static debug;static debugAdd=!1;static debugClosure=!1;static dfaDebug=!1;static retryDebug=!1;predictionMode;decisionToDFA;parser;mergeCache=new ye;predictionState;constructor(t,e,s,n){super(e,n),this.parser=t,this.decisionToDFA=s}static getUniqueAlt(t){let e=ut.INVALID_ALT_NUMBER;for(const s of t)if(e===ut.INVALID_ALT_NUMBER)e=s.alt;else if(s.alt!==e)return ut.INVALID_ALT_NUMBER;return e}reset(){}clearDFA(){for(let t=0;t<this.decisionToDFA.length;t++)this.decisionToDFA[t]=new xe(this.atn.getDecisionState(t),t)}adaptivePredict(e,s,n){(t.debug||t.traceATNSimulator)&&console.log("adaptivePredict decision "+s+" exec LA(1)=="+this.getLookaheadName(e)+" line "+e.LT(1).line+":"+e.LT(1).column);const i=this.decisionToDFA[s];this.predictionState={input:e,startIndex:e.index,outerContext:n??void 0,dfa:i};const r=e.mark(),o=e.index;try{let s;if(s=i.isPrecedenceDfa?i.getPrecedenceStartState(this.parser.getPrecedence()):i.s0,!s){n||(n=tt.empty),t.debug&&console.log("predictATN decision "+i.decision+" exec LA(1)=="+this.getLookaheadName(e)+", outerContext="+n.toString(this.parser.ruleNames));const r=!1;let o=this.computeStartState(i.atnStartState,tt.empty,r);i.isPrecedenceDfa?(o=this.applyPrecedenceFilter(o),s=this.addDFAState(i,ee.fromConfigs(o)),i.setPrecedenceStartState(this.parser.getPrecedence(),s)):(s=this.addDFAState(i,ee.fromConfigs(o)),i.s0=s)}const r=this.execATN(i,s,e,o,n);return t.debug&&console.log("DFA after predictATN: "+i.toString(this.parser.vocabulary)),r}finally{this.predictionState.dfa=void 0,this.mergeCache=new ye,e.seek(o),e.release(r)}}execATN(e,s,n,i,r){let o;(t.debug||t.traceATNSimulator)&&console.log("execATN decision "+e.decision+", DFA state "+s+", LA(1)=="+this.getLookaheadName(n)+" line "+n.LT(1).line+":"+n.LT(1).column);let a=s,c=n.LA(1);for(;;){let s=this.getExistingTargetState(a,c);if(s||(s=this.computeTargetState(e,a,c)),s===se.ERROR){const t=this.noViableAlt(n,r,a.configs,i);if(n.seek(i),o=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(a.configs,r),o!==ut.INVALID_ALT_NUMBER)return o;throw t}if(s.requiresFullContext&&this.predictionMode!==Ie.SLL){let a=null;if(null!==s.predicates){t.debug&&console.log("DFA state has preds in DFA sim LL failover");const e=n.index;if(e!==i&&n.seek(i),a=this.evalSemanticContext(s.predicates,r,!0),1===a.length)return t.debug&&console.log("Full LL avoided"),a.nextSetBit(0);e!==i&&n.seek(e)}const c=!0,h=this.computeStartState(e.atnStartState,r,c);return this.reportAttemptingFullContext(e,a,s.configs,i,n.index),o=this.execATNWithFullContext(e,s,h,n,i,r),o}if(s.isAcceptState){if(null===s.predicates)return s.prediction;const t=n.index;n.seek(i);const o=this.evalSemanticContext(s.predicates,r,!0);if(0===o.length)throw this.noViableAlt(n,r,s.configs,i);return 1===o.length||this.reportAmbiguity(e,s,i,t,!1,o,s.configs),o.nextSetBit(0)}a=s,c!==S.EOF&&(n.consume(),c=n.LA(1))}}getExistingTargetState(t,e){return t.edges[e+1]}computeTargetState(e,s,n){const i=this.computeReachSet(s.configs,n,!1);if(null===i)return this.addDFAEdge(e,s,n,se.ERROR),se.ERROR;let r=ee.fromConfigs(i);const o=t.getUniqueAlt(i);if(t.debug){const t=Ie.getConflictingAltSubsets(i);console.log("SLL altSubSets="+D(t)+", configs="+i+", predict="+o+", allSubsetsConflict="+Ie.allSubsetsConflict(t)+", conflictingAlts="+this.getConflictingAlts(i))}return o!==ut.INVALID_ALT_NUMBER?(r.isAcceptState=!0,r.configs.uniqueAlt=o,r.prediction=o):Ie.hasSLLConflictTerminatingPrediction(this.predictionMode,i)&&(r.configs.conflictingAlts=this.getConflictingAlts(i),r.requiresFullContext=!0,r.isAcceptState=!0,r.prediction=r.configs.conflictingAlts.nextSetBit(0)),r.isAcceptState&&r.configs.hasSemanticContext&&(this.predicateDFAState(r,this.atn.getDecisionState(e.decision)),null!==r.predicates&&(r.prediction=ut.INVALID_ALT_NUMBER)),r=this.addDFAEdge(e,s,n,r),r}getRuleName(t){return null!==this.parser&&t>=0?this.parser.ruleNames[t]:"<rule "+t+">"}getTokenName(t){if(t===S.EOF)return"EOF";const e=(this.parser?.vocabulary??R.EMPTY_VOCABULARY).getDisplayName(t);return e===t.toString()?e:e+"<"+t+">"}getLookaheadName(t){return this.getTokenName(t.LA(1))}dumpDeadEndConfigs(t){console.log("dead end configs: ");const e=t.deadEndConfigs;for(const t of e){let e="no edges";if(t.state.transitions.length>0){const s=t.state.transitions[0];if(s instanceof Lt)e="Atom "+this.getTokenName(s.labelValue);else if(s instanceof $){e=(s instanceof K?"~":"")+"Set "+s.label}}console.error(t.toString(this.parser,!0)+":"+e)}}predicateDFAState(t,e){const s=e.transitions.length,n=this.getConflictingAltsOrUniqueAlt(t.configs),i=this.getPredsForAmbigAlts(n,t.configs,s);null!==i?(t.predicates=this.getPredicatePredictions(n,i),t.prediction=ut.INVALID_ALT_NUMBER):t.prediction=n.nextSetBit(0)}execATNWithFullContext(e,s,n,i,r,o){(t.debug||t.traceATNSimulator)&&console.log("execATNWithFullContext "+n);let a,c=!1,h=n;i.seek(r);let l=i.LA(1),u=-1;for(;;){if(a=this.computeReachSet(h,l,true),null===a){const t=this.noViableAlt(i,o,h,r);i.seek(r);const e=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(h,o);if(e!==ut.INVALID_ALT_NUMBER)return e;throw t}const e=Ie.getConflictingAltSubsets(a);if(t.debug&&console.log("LL altSubSets="+e+", predict="+Ie.getUniqueAlt(e)+", resolvesToJustOneViableAlt="+Ie.resolvesToJustOneViableAlt(e)),a.uniqueAlt=t.getUniqueAlt(a),a.uniqueAlt!==ut.INVALID_ALT_NUMBER){u=a.uniqueAlt;break}if(this.predictionMode!==Ie.LL_EXACT_AMBIG_DETECTION){if(u=Ie.resolvesToJustOneViableAlt(e),u!==ut.INVALID_ALT_NUMBER)break}else if(Ie.allSubsetsConflict(e)&&Ie.allSubsetsEqual(e)){c=!0,u=Ie.getSingleViableAlt(e);break}h=a,l!==S.EOF&&(i.consume(),l=i.LA(1))}return a.uniqueAlt!==ut.INVALID_ALT_NUMBER?(this.reportContextSensitivity(e,u,a,r,i.index),u):(this.reportAmbiguity(e,s,r,i.index,c,a.getAlts(),a),u)}computeReachSet(e,s,n){t.debug&&console.log("in computeReachSet, starting closure: "+e);const i=new pt(n);let r=null;for(const o of e)if(t.debug&&console.log("testing "+this.getTokenName(s)+" at "+o),o.state instanceof Et)(n||s===S.EOF)&&(null===r&&(r=[]),r.push(o));else for(const t of o.state.transitions){const e=this.getReachableTarget(t,s);if(null!==e){const t=H.createWithConfig(e,o);i.add(t,this.mergeCache)}}let o=null;if(null===r&&s!==S.EOF&&(1===i.length||t.getUniqueAlt(i)!==ut.INVALID_ALT_NUMBER)&&(o=i),null===o){o=new pt(n);const t=new L,e=s===S.EOF;for(const s of i)this.closure(s,o,t,!1,n,e)}if(s===S.EOF&&(o=this.removeAllConfigsNotInRuleStopState(o,o===i)),!(null===r||n&&Ie.hasConfigInRuleStopState(o)))for(const t of r)o.add(t,this.mergeCache);return 0===o.length?null:o}removeAllConfigsNotInRuleStopState(t,e){if(Ie.allConfigsInRuleStopStates(t))return t;const s=new pt(t.fullCtx);for(const n of t)if(n.state instanceof Et)s.add(n,this.mergeCache);else if(e&&n.state.epsilonOnlyTransitions){if(this.atn.nextTokens(n.state).contains(S.EPSILON)){const t=this.atn.ruleToStopState[n.state.ruleIndex];s.add(H.createWithConfig(t,n),this.mergeCache)}}return s}computeStartState(t,e,s){const n=nt(this.atn,e),i=new pt(s);for(let e=0;e<t.transitions.length;e++){const r=t.transitions[e].target,o=H.createWithContext(r,e+1,n),a=new L;this.closure(o,i,a,!0,s,!1)}return i}applyPrecedenceFilter(t){const e=[],s=new pt(t.fullCtx);for(const n of t){if(1!==n.alt)continue;const t=n.semanticContext.evalPrecedence(this.parser,this.predictionState.outerContext);null!==t&&(e[n.state.stateNumber]=n.context,t!==n.semanticContext?s.add(H.duplicate(n,t),this.mergeCache):s.add(n,this.mergeCache))}for(const n of t)if(1!==n.alt){if(!n.precedenceFilterSuppressed){const t=e[n.state.stateNumber]||null;if(null!==t&&t.equals(n.context))continue}s.add(n,this.mergeCache)}return s}getReachableTarget(t,e){return t.matches(e,0,this.atn.maxTokenType)?t.target:null}getPredsForAmbigAlts(e,s,n){let i=[];for(const t of s)e.get(t.alt)&&(i[t.alt]=M.orContext(i[t.alt]??null,t.semanticContext));let r=0;for(let t=1;t<n+1;t++){const e=i[t]??null;null===e?i[t]=M.NONE:e!==M.NONE&&(r+=1)}return 0===r&&(i=null),t.debug&&console.log("getPredsForAmbigAlts result "+D(i)),i}getPredicatePredictions(t,e){const s=[];let n=!1;for(let i=1;i<e.length;i++){const r=e[i];t.get(i)&&s.push({pred:r,alt:i}),r!==M.NONE&&(n=!0)}return n?s:null}getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(t,e){const s=this.splitAccordingToSemanticValidity(t,e),n=s[0],i=s[1];let r=this.getAltThatFinishedDecisionEntryRule(n);return r!==ut.INVALID_ALT_NUMBER||i.length>0&&(r=this.getAltThatFinishedDecisionEntryRule(i),r!==ut.INVALID_ALT_NUMBER)?r:ut.INVALID_ALT_NUMBER}getAltThatFinishedDecisionEntryRule(t){const e=[];for(const s of t)(s.reachesIntoOuterContext||s.state instanceof Et&&s.context.hasEmptyPath())&&e.indexOf(s.alt)<0&&e.push(s.alt);return 0===e.length?ut.INVALID_ALT_NUMBER:Math.min(...e)}splitAccordingToSemanticValidity(t,e){const s=new pt(t.fullCtx),n=new pt(t.fullCtx);for(const i of t)if(i.semanticContext!==M.NONE){i.semanticContext.evaluate(this.parser,e)?s.add(i):n.add(i)}else s.add(i);return[s,n]}evalSemanticContext(e,s,n){const i=new y;for(const r of e){if(r.pred===M.NONE){if(i.set(r.alt),!n)break;continue}const e=r.pred.evaluate(this.parser,s);if((t.debug||t.dfaDebug)&&console.log("eval pred "+r+"="+e),e&&(i.set(r.alt),!n))break}return i}closure(t,e,s,n,i,r){this.closureCheckingStopState(t,e,s,n,i,0,r)}closureCheckingStopState(e,s,n,i,r,o,a){if(e.state instanceof Et){if(e.context&&!e.context.isEmpty()){for(let c=0;c<e.context.length;c++){if(e.context.getReturnState(c)===V.EMPTY_RETURN_STATE){if(r){s.add(H.createWithConfig(e.state,e,W.instance),this.mergeCache);continue}t.debug&&console.log("FALLING off rule "+this.getRuleName(e.state.ruleIndex)),this.closure_(e,s,n,i,r,o,a);continue}const h=this.atn.states[e.context.getReturnState(c)],l=e.context.getParent(c),u=H.createWithContext(h,e.alt,l,e.semanticContext);u.reachesIntoOuterContext=e.reachesIntoOuterContext,this.closureCheckingStopState(u,s,n,i,r,o-1,a)}return}if(r)return void s.add(e,this.mergeCache);t.debug&&console.log("FALLING off rule "+this.getRuleName(e.state.ruleIndex))}this.closure_(e,s,n,i,r,o,a)}closure_(e,s,n,i,r,o,a){const c=e.state;c.epsilonOnlyTransitions||s.add(e,this.mergeCache);for(let h=0;h<c.transitions.length;h++){if(0===h&&this.canDropLoopEntryEdgeInLeftRecursiveRule(e))continue;const l=c.transitions[h],u=i&&!(l instanceof bt),d=this.getEpsilonTarget(e,l,u,0===o,r,a);if(d){let i=o;if(e.state.constructor.stateType===z.RULE_STOP){if(this.predictionState.dfa&&this.predictionState?.dfa.isPrecedenceDfa){l.outermostPrecedenceReturn===this.predictionState?.dfa.atnStartState?.ruleIndex&&(d.precedenceFilterSuppressed=!0)}if(d.reachesIntoOuterContext=!0,n.getOrAdd(d)!==d)continue;s.dipsIntoOuterContext=!0,i-=1,t.debug&&console.log("dips into outer ctx: "+d)}else{if(!l.isEpsilon&&n.getOrAdd(d)!==d)continue;l instanceof wt&&i>=0&&(i+=1)}this.closureCheckingStopState(d,s,n,u,r,i,a)}}}canDropLoopEntryEdgeInLeftRecursiveRule(t){const e=t.state;if(e.constructor.stateType!==z.STAR_LOOP_ENTRY||!t.context)return!1;if(!e.precedenceRuleDecision||t.context.isEmpty()||t.context.hasEmptyPath())return!1;const s=t.context.length;for(let n=0;n<s;n++){if(this.atn.states[t.context.getReturnState(n)].ruleIndex!==e.ruleIndex)return!1}const n=e.transitions[0].target.endState.stateNumber,i=this.atn.states[n];for(let n=0;n<s;n++){const s=t.context.getReturnState(n),r=this.atn.states[s];if(1!==r.transitions.length||!r.transitions[0].isEpsilon)return!1;const o=r.transitions[0].target;if((r.constructor.stateType!==z.BLOCK_END||o!==e)&&(r!==i&&o!==i&&(o.constructor.stateType!==z.BLOCK_END||1!==o.transitions.length||!o.transitions[0].isEpsilon||o.transitions[0].target!==e)))return!1}return!0}getEpsilonTarget(e,s,n,i,r,o){switch(s.transitionType){case Y.RULE:return this.ruleTransition(e,s);case Y.PRECEDENCE:return this.precedenceTransition(e,s,n,i,r);case Y.PREDICATE:return this.predTransition(e,s,n,i,r);case Y.ACTION:if(t.debug){const t=s,e=-1===t.actionIndex?65535:t.actionIndex;console.log("ACTION edge "+t.ruleIndex+":"+e)}return H.createWithConfig(s.target,e);case Y.EPSILON:return H.createWithConfig(s.target,e);case Y.ATOM:case Y.RANGE:case Y.SET:return o&&s.matches(S.EOF,0,1)?H.createWithConfig(s.target,e):null;default:return null}}precedenceTransition(e,s,n,i,r){t.debug&&(console.log("PRED (collectPredicates="+n+") "+s.precedence+">=_p, ctx dependent=true"),null!==this.parser&&console.log("context surrounding pred is "+D(this.parser.getRuleInvocationStack())));let o=null;if(n&&i)if(r&&this.predictionState?.input){const t=this.predictionState.input.index;this.predictionState.input.seek(this.predictionState.startIndex);const n=s.getPredicate().evaluate(this.parser,this.predictionState.outerContext);this.predictionState.input.seek(t),n&&(o=H.createWithConfig(s.target,e))}else{const t=M.andContext(e.semanticContext,s.getPredicate());o=H.createWithSemanticContext(s.target,e,t)}else o=H.createWithConfig(s.target,e);return t.debug&&console.log("config from pred transition="+o),o}predTransition(e,s,n,i,r){t.debug&&(console.log("PRED (collectPredicates="+n+") "+s.ruleIndex+":"+s.predIndex+", ctx dependent="+s.isCtxDependent),null!==this.parser&&console.log("context surrounding pred is "+D(this.parser.getRuleInvocationStack())));let o=null;if(n&&(s.isCtxDependent&&i||!s.isCtxDependent))if(r&&this.predictionState?.input){const t=this.predictionState.input.index;this.predictionState.input.seek(this.predictionState.startIndex);const n=s.getPredicate().evaluate(this.parser,this.predictionState.outerContext);this.predictionState.input.seek(t),n&&(o=H.createWithConfig(s.target,e))}else{const t=M.andContext(e.semanticContext,s.getPredicate());o=H.createWithSemanticContext(s.target,e,t)}else o=H.createWithConfig(s.target,e);return t.debug&&console.log("config from pred transition="+o),o}ruleTransition(e,s){t.debug&&console.log("CALL rule "+this.getRuleName(s.target.ruleIndex)+", ctx="+e.context);const n=s.followState,i=st(e.context??void 0,n.stateNumber);return H.createWithConfig(s.target,e,i)}getConflictingAlts(t){const e=Ie.getConflictingAltSubsets(t);return Ie.getAlts(e)}getConflictingAltsOrUniqueAlt(t){let e;return t.uniqueAlt!==ut.INVALID_ALT_NUMBER?(e=new y,e.set(t.uniqueAlt)):e=t.conflictingAlts,e}noViableAlt(t,e,s,n){return new ke(this.parser,t,t.get(n),t.LT(1),s,e)}addDFAEdge(e,s,n,i){return t.debug&&console.log("EDGE "+s+" -> "+i+" upon "+this.getTokenName(n)),i=this.addDFAState(e,i),n<-1||n>this.atn.maxTokenType||(t.debug&&console.log("DFA=\n"+e.toString(null!=this.parser?this.parser.vocabulary:R.EMPTY_VOCABULARY)),s.edges[n+1]=i),i}addDFAState(t,e){if(e===se.ERROR)return e;const s=t.getState(e);return null!==s?s:(e.configs.readOnly||(e.configs.optimizeConfigs(this),e.configs.setReadonly(!0)),t.addState(e),e)}reportAttemptingFullContext(e,s,n,i,r){if(t.debug||t.retryDebug){const t=new w(i,r+1);console.log("reportAttemptingFullContext decision="+e.decision+":"+n+", input="+this.parser.tokenStream.getTextFromInterval(t))}this.parser.errorListenerDispatch.reportAttemptingFullContext(this.parser,e,i,r,s,n)}reportContextSensitivity(e,s,n,i,r){if(t.debug||t.retryDebug){const t=new w(i,r+1);console.log("reportContextSensitivity decision="+e.decision+":"+n+", input="+this.parser.tokenStream.getTextFromInterval(t))}this.parser.errorListenerDispatch.reportContextSensitivity(this.parser,e,i,r,s,n)}reportAmbiguity(e,s,n,i,r,o,a){if(t.debug||t.retryDebug){const t=new w(n,i+1);console.log("reportAmbiguity "+o+":"+a+", input="+this.parser.tokenStream.getTextFromInterval(t))}this.parser.errorListenerDispatch.reportAmbiguity(this.parser,e,n,i,r,o,a)}},Le=class{static{C(this,"PredictionContextCache")}cache=new j(I.instance);add(t){if(t===W.instance)return t;const e=this.cache.get(t);return e||(this.cache.set(t,t),t)}get(t){return this.cache.get(t)}get length(){return this.cache.size}},we=class extends ve{static{C(this,"ProfilingATNSimulator")}decisions;numDecisions=0;currentDecision=0;currentState;conflictingAltResolvedBySLL;sllStopIndex=0;llStopIndex=0;constructor(t){const e=t.interpreter.sharedContextCache;if(super(t,t.interpreter.atn,t.interpreter.decisionToDFA,e),e){this.numDecisions=this.atn.decisionToState.length,this.decisions=new Array(this.numDecisions);for(let t=0;t<this.numDecisions;t++)this.decisions[t]=new ie(t)}}adaptivePredict(t,e,s){try{this.sllStopIndex=-1,this.llStopIndex=-1,this.currentDecision=e;const n=performance.now(),i=super.adaptivePredict(t,e,s),r=performance.now();this.decisions[e].timeInPrediction+=r-n,this.decisions[e].invocations++;const o=this.sllStopIndex-this.predictionState.startIndex+1;if(this.decisions[e].sllTotalLook+=o,this.decisions[e].sllMinLook=0===this.decisions[e].sllMinLook?o:Math.min(this.decisions[e].sllMinLook,o),o>this.decisions[e].sllMaxLook&&(this.decisions[e].sllMaxLook=o,this.decisions[e].sllMaxLookEvent={decision:e,configs:null,predictedAlt:i,input:t,startIndex:this.predictionState.startIndex,stopIndex:this.sllStopIndex,fullCtx:!1}),this.llStopIndex>=0){const s=this.llStopIndex-this.predictionState.startIndex+1;this.decisions[e].llTotalLook+=s,this.decisions[e].llMinLook=0===this.decisions[e].llMinLook?s:Math.min(this.decisions[e].llMinLook,s),s>this.decisions[e].llMaxLook&&(this.decisions[e].llMaxLook=s,this.decisions[e].llMaxLookEvent={decision:e,configs:null,predictedAlt:i,input:t,startIndex:this.predictionState.startIndex,stopIndex:this.llStopIndex,fullCtx:!0})}return i}finally{this.currentDecision=-1}}getExistingTargetState(t,e){this.sllStopIndex=this.predictionState.input.index;const s=super.getExistingTargetState(t,e);return void 0!==s&&(this.decisions[this.currentDecision].sllDFATransitions++,s===se.ERROR&&this.decisions[this.currentDecision].errors.push({decision:this.currentDecision,configs:t.configs,input:this.predictionState.input,startIndex:this.predictionState.startIndex,stopIndex:this.sllStopIndex,fullCtx:!1})),this.currentState=s,s}computeTargetState(t,e,s){const n=super.computeTargetState(t,e,s);return this.currentState=n,n}computeReachSet(t,e,s){s&&this.predictionState?.input&&(this.llStopIndex=this.predictionState.input.index);const n=super.computeReachSet(t,e,s);return this.predictionState?.input&&(s?(this.decisions[this.currentDecision].llATNTransitions++,null===n&&this.decisions[this.currentDecision].errors.push({decision:this.currentDecision,configs:t,input:this.predictionState.input,startIndex:this.predictionState.startIndex,stopIndex:this.sllStopIndex,fullCtx:!0})):(this.decisions[this.currentDecision].sllATNTransitions++,null===n&&this.decisions[this.currentDecision].errors.push({decision:this.currentDecision,configs:t,input:this.predictionState.input,startIndex:this.predictionState.startIndex,stopIndex:this.sllStopIndex,fullCtx:!1}))),n}reportAttemptingFullContext(t,e,s,n,i){this.conflictingAltResolvedBySLL=null!==e?e.nextSetBit(0):s.getAlts().nextSetBit(0),this.decisions[this.currentDecision].llFallback++,e&&super.reportAttemptingFullContext(t,e,s,n,i)}reportContextSensitivity(t,e,s,n,i){e!==this.conflictingAltResolvedBySLL&&this.predictionState.input&&this.decisions[this.currentDecision].contextSensitivities.push({decision:this.currentDecision,configs:s,input:this.predictionState.input,startIndex:n,stopIndex:i,fullCtx:!0}),super.reportContextSensitivity(t,e,s,n,i)}reportAmbiguity(t,e,s,n,i,r,o){let a;a=r?r.nextSetBit(0):o.getAlts().nextSetBit(0),this.predictionState?.input&&(o.fullCtx&&a!==this.conflictingAltResolvedBySLL&&this.decisions[this.currentDecision].contextSensitivities.push({decision:this.currentDecision,configs:o,input:this.predictionState.input,startIndex:s,stopIndex:n,fullCtx:!0}),this.decisions[this.currentDecision].ambiguities.push({ambigAlts:r,decision:this.currentDecision,configs:o,input:this.predictionState.input,startIndex:s,stopIndex:n,fullCtx:o.fullCtx})),super.reportAmbiguity(t,e,s,n,i,r,o)}getDecisionInfo(){return this.decisions}getCurrentState(){return this.currentState}};(ne||(ne={})).toString=C((t=>`(${t.pred}, ${t.alt})`),"toString");var Re=class extends Error{static{C(this,"ParseCancellationException")}constructor(t){super(),this.cause=t}};(class{static{C(this,"InterpreterDataReader")}static parseInterpreterData(t){const e=[],s=[],n=[],i=[],r=[],o=t.split("\n");let a=0,c=o[a++];if("token literal names:"!==c)throw new Error("Unexpected data entry");for(;;){if(c=o[a++],0===c.length)break;i.push("null"===c?null:c)}if(c=o[a++],"token symbolic names:"!==c)throw new Error("Unexpected data entry");for(;;){if(c=o[a++],0===c.length)break;r.push("null"===c?null:c)}if(c=o[a++],"rule names:"!==c)throw new Error("Unexpected data entry");for(;;){if(c=o[a++],0===c.length)break;e.push(c)}if(c=o[a++],"channel names:"===c){for(;;){if(c=o[a++],0===c.length)break;s.push(c)}if(c=o[a++],"mode names:"!==c)throw new Error("Unexpected data entry");for(;;){if(c=o[a++],0===c.length)break;n.push(c)}}if(c=o[a++],"atn:"!==c)throw new Error("Unexpected data entry");c=o[a++];const h=c.split(",");let l;const u=[];for(let t=0;t<h.length;++t){const e=h[t];l=e.startsWith("[")?Number(e.substring(1).trim()):e.endsWith("]")?Number(e.substring(0,e.length-1).trim()):Number(e.trim()),u[t]=l}return{atn:(new Jt).deserialize(u),vocabulary:new R(i,r,[]),ruleNames:e,channels:s.length>0?s:void 0,modes:n.length>0?n:void 0}}});var be,Oe=class{static{C(this,"AbstractParseTreeVisitor")}visit(t){return t.accept(this)}visitChildren(t){let e=this.defaultResult();const s=t.getChildCount();for(let n=0;n<s&&this.shouldVisitNextChild(t,e);n++){const s=t.getChild(n);if(s){const t=s.accept(this);e=this.aggregateResult(e,t)}}return e}visitTerminal(t){return this.defaultResult()}visitErrorNode(t){return this.defaultResult()}defaultResult(){return null}shouldVisitNextChild(t,e){return!0}aggregateResult(t,e){return e}};(class t{static{C(this,"ParseTreeWalker")}static DEFAULT=new t;walk(t,e){if(e instanceof Q)t.visitErrorNode(e);else if(e instanceof X)t.visitTerminal(e);else{const s=e;this.enterRule(t,s);for(let s=0;s<e.getChildCount();s++)this.walk(t,e.getChild(s));this.exitRule(t,s)}}enterRule(t,e){const s=e.ruleContext;t.enterEveryRule(s),s.enterRule(t)}exitRule(t,e){const s=e.ruleContext;s.exitRule(t),t.exitEveryRule(s)}}),(be||(be={})).fromString=C((t=>new De(t)),"fromString");var De=class{static{C(this,"CharStreamImpl")}name="";index=0;data;constructor(t){const e=[];for(const s of t)e.push(s.codePointAt(0));this.data=new Uint32Array(e)}reset(){this.index=0}consume(){if(this.index>=this.data.length)throw new Error("cannot consume EOF");this.index+=1}LA(t){if(0===t)return 0;t<0&&(t+=1);const e=this.index+t-1;return e<0||e>=this.data.length?S.EOF:this.data[e]}mark(){return-1}release(t){}seek(t){t<=this.index?this.index=t:this.index=Math.min(t,this.data.length)}getTextFromRange(t,e){return(e=e??this.data.length-1)>=this.data.length&&(e=this.data.length-1),t>=this.data.length?"":this.stringFromRange(t,e+1)}getTextFromInterval(t){const e=t.start;let s=t.stop;return s>=this.data.length&&(s=this.data.length-1),e>=this.data.length?"":this.stringFromRange(e,s+1)}toString(){return this.stringFromRange(0)}get size(){return this.data.length}getSourceName(){return this.name?this.name:m.UNKNOWN_SOURCE_NAME}stringFromRange(t,e){const s=this.data.slice(t,e);let n="";return s.forEach((t=>{n+=String.fromCodePoint(t)})),n}},_e=C((t=>void 0!==t.setText),"isWritableToken"),Pe=class{static{C(this,"BufferedTokenStream")}tokenSource;tokens=[];p=-1;fetchedEOF=!1;constructor(t){this.tokenSource=t}mark(){return 0}release(t){}reset(){this.seek(0)}seek(t){this.lazyInit(),this.p=this.adjustSeekIndex(t)}get size(){return this.tokens.length}get index(){return this.p}get(t){return this.lazyInit(),this.tokens[t]}consume(){let t=!1;if(t=this.p>=0&&(this.fetchedEOF?this.p<this.tokens.length-1:this.p<this.tokens.length),!t&&this.LA(1)===S.EOF)throw new Error("cannot consume EOF");this.sync(this.p+1)&&(this.p=this.adjustSeekIndex(this.p+1))}sync(t){const e=t-this.tokens.length+1;if(e>0){return this.fetch(e)>=e}return!0}fetch(t){if(this.fetchedEOF)return 0;for(let e=0;e<t;e++){const t=this.tokenSource.nextToken();if(_e(t)&&(t.tokenIndex=this.tokens.length),this.tokens.push(t),t.type===S.EOF)return this.fetchedEOF=!0,e+1}return t}getTokens(t,e,s){if(this.lazyInit(),void 0===t&&void 0===e)return this.tokens;if(t??=0,void 0===e&&(e=this.tokens.length-1),t<0||e>=this.tokens.length||e<0||t>=this.tokens.length)throw new RangeError("start "+t+" or stop "+e+" not in 0.."+(this.tokens.length-1));if(t>e)return[];if(void 0===s)return this.tokens.slice(t,e+1);const n=[];e>=this.tokens.length&&(e=this.tokens.length-1);for(let i=t;i<e;i++){const t=this.tokens[i];if(t.type===S.EOF){n.push(t);break}s.has(t.type)&&n.push(t)}return n}LA(t){return this.LT(t)?.type??S.INVALID_TYPE}LB(t){return this.p-t<0?null:this.tokens[this.p-t]}LT(t){if(this.lazyInit(),0===t)return null;if(t<0)return this.LB(-t);const e=this.p+t-1;return this.sync(e),e>=this.tokens.length?this.tokens[this.tokens.length-1]:this.tokens[e]}adjustSeekIndex(t){return t}lazyInit(){-1===this.p&&this.setup()}setup(){this.sync(0),this.p=this.adjustSeekIndex(0)}setTokenSource(t){this.tokenSource=t,this.tokens=[],this.p=-1,this.fetchedEOF=!1}nextTokenOnChannel(t,e){if(this.sync(t),t>=this.tokens.length)return-1;let s=this.tokens[t];for(;s.channel!==e;){if(s.type===S.EOF)return-1;t+=1,this.sync(t),s=this.tokens[t]}return t}previousTokenOnChannel(t,e){if(t>=this.tokens.length)return this.tokens.length-1;for(;t>=0;){const s=this.tokens[t];if(s.type===S.EOF||s.channel===e)return t;--t}return t}getHiddenTokensToRight(t,e){if(void 0===e&&(e=-1),this.lazyInit(),t<0||t>=this.tokens.length)throw new Error(`${t} not in 0..${this.tokens.length-1}`);const s=this.nextTokenOnChannel(t+1,pe.DEFAULT_TOKEN_CHANNEL),n=t+1,i=-1===s?this.tokens.length-1:s;return this.filterForChannel(n,i,e)}getHiddenTokensToLeft(t,e){if(void 0===e&&(e=-1),this.lazyInit(),t<0||t>=this.tokens.length)throw new Error(`${t} not in 0..${this.tokens.length-1}`);const s=this.previousTokenOnChannel(t-1,pe.DEFAULT_TOKEN_CHANNEL);if(s===t-1)return;const n=s+1,i=t-1;return this.filterForChannel(n,i,e)}filterForChannel(t,e,s){const n=[];for(let i=t;i<e+1;i++){const t=this.tokens[i];-1===s?t.channel!==pe.DEFAULT_TOKEN_CHANNEL&&n.push(t):t.channel===s&&n.push(t)}if(0!==n.length)return n}getSourceName(){return this.tokenSource.sourceName}getText(){return this.getTextFromInterval(w.of(0,this.size-1))}getTextFromInterval(t){const e=t.start;let s=t.stop;if(e<0||s<0)return"";this.sync(s),s>=this.tokens.length&&(s=this.tokens.length-1);let n="";for(let t=e;t<=s;++t){const e=this.tokens[t];if(e.type===S.EOF)break;n+=e.text}return n}getTextFromContext(t){return this.getTextFromInterval(t.getSourceInterval())}getTextFromRange(t,e){return null!==t&&null!==e?this.getTextFromInterval(w.of(t.tokenIndex,e.tokenIndex)):""}fill(){for(this.lazyInit();1e3===this.fetch(1e3););}setLine(t){this.tokenSource.line=t}setColumn(t){this.tokenSource.column=t}},Fe=class extends Pe{static{C(this,"CommonTokenStream")}channel=S.DEFAULT_CHANNEL;constructor(t,e){super(t),this.channel=e??S.DEFAULT_CHANNEL}adjustSeekIndex(t){return this.nextTokenOnChannel(t,this.channel)}LB(t){if(0===t||this.index-t<0)return null;let e=this.index,s=1;for(;s<=t;)e=this.previousTokenOnChannel(e-1,this.channel),s+=1;return e<0?null:this.tokens[e]}LT(t){if(this.lazyInit(),0===t)return null;if(t<0)return this.LB(-t);let e=this.index,s=1;for(;s<t;)this.sync(e+1)&&(e=this.nextTokenOnChannel(e+1,this.channel)),s+=1;return this.tokens[e]}getNumberOfOnChannelTokens(){let t=0;this.fill();for(const e of this.tokens)if(e.channel===this.channel&&(t+=1),e.type===S.EOF)break;return t}},Me=class t extends pe{static{C(this,"XPathLexer")}static TOKEN_REF=1;static RULE_REF=2;static ANYWHERE=3;static ROOT=4;static WILDCARD=5;static BANG=6;static ID=7;static STRING=8;static channelNames=["DEFAULT_TOKEN_CHANNEL","HIDDEN"];static literalNames=[null,null,null,"'//'","'/'","'*'","'!'"];static symbolicNames=[null,"TOKEN_REF","RULE_REF","ANYWHERE","ROOT","WILDCARD","BANG","ID","STRING"];static modeNames=["DEFAULT_MODE"];static ruleNames=["ANYWHERE","ROOT","WILDCARD","BANG","ID","NameChar","NameStartChar","STRING"];constructor(e){super(e),this.interpreter=new Ae(this,t._ATN,t.decisionsToDFA,new Le)}get grammarFileName(){return"XPathLexer.g4"}get literalNames(){return t.literalNames}get symbolicNames(){return t.symbolicNames}get ruleNames(){return t.ruleNames}get serializedATN(){return t._serializedATN}get channelNames(){return t.channelNames}get modeNames(){return t.modeNames}action(t,e,s){if(4===e)this.ID_action(t,s)}ID_action(e,s){if(0===s){const e=this.text;e.charAt(0)===e.charAt(0).toUpperCase()?this.type=t.TOKEN_REF:this.type=t.RULE_REF}}static _serializedATN=[4,0,8,48,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,5,4,29,8,4,10,4,12,4,32,9,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,5,7,42,8,7,10,7,12,7,45,9,7,1,7,1,7,1,43,0,8,1,3,3,4,5,5,7,6,9,7,11,0,13,0,15,8,1,0,2,784,0,0,8,14,27,48,57,65,90,95,95,97,122,127,159,170,170,173,173,181,181,186,186,192,214,216,246,248,705,710,721,736,740,748,748,750,750,768,884,886,887,890,893,895,895,902,902,904,906,908,908,910,929,931,1013,1015,1153,1155,1159,1162,1327,1329,1366,1369,1369,1376,1416,1425,1469,1471,1471,1473,1474,1476,1477,1479,1479,1488,1514,1519,1522,1536,1541,1552,1562,1564,1564,1568,1641,1646,1747,1749,1757,1759,1768,1770,1788,1791,1791,1807,1866,1869,1969,1984,2037,2042,2042,2045,2045,2048,2093,2112,2139,2144,2154,2160,2183,2185,2190,2192,2193,2200,2403,2406,2415,2417,2435,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2492,2500,2503,2504,2507,2510,2519,2519,2524,2525,2527,2531,2534,2545,2556,2556,2558,2558,2561,2563,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2620,2620,2622,2626,2631,2632,2635,2637,2641,2641,2649,2652,2654,2654,2662,2677,2689,2691,2693,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2748,2757,2759,2761,2763,2765,2768,2768,2784,2787,2790,2799,2809,2815,2817,2819,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2869,2873,2876,2884,2887,2888,2891,2893,2901,2903,2908,2909,2911,2915,2918,2927,2929,2929,2946,2947,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,3001,3006,3010,3014,3016,3018,3021,3024,3024,3031,3031,3046,3055,3072,3084,3086,3088,3090,3112,3114,3129,3132,3140,3142,3144,3146,3149,3157,3158,3160,3162,3165,3165,3168,3171,3174,3183,3200,3203,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3260,3268,3270,3272,3274,3277,3285,3286,3293,3294,3296,3299,3302,3311,3313,3315,3328,3340,3342,3344,3346,3396,3398,3400,3402,3406,3412,3415,3423,3427,3430,3439,3450,3455,3457,3459,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3530,3530,3535,3540,3542,3542,3544,3551,3558,3567,3570,3571,3585,3642,3648,3662,3664,3673,3713,3714,3716,3716,3718,3722,3724,3747,3749,3749,3751,3773,3776,3780,3782,3782,3784,3790,3792,3801,3804,3807,3840,3840,3864,3865,3872,3881,3893,3893,3895,3895,3897,3897,3902,3911,3913,3948,3953,3972,3974,3991,3993,4028,4038,4038,4096,4169,4176,4253,4256,4293,4295,4295,4301,4301,4304,4346,4348,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4744,4746,4749,4752,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4822,4824,4880,4882,4885,4888,4954,4957,4959,4992,5007,5024,5109,5112,5117,5121,5740,5743,5759,5761,5786,5792,5866,5870,5880,5888,5909,5919,5940,5952,5971,5984,5996,5998,6e3,6002,6003,6016,6099,6103,6103,6108,6109,6112,6121,6155,6169,6176,6264,6272,6314,6320,6389,6400,6430,6432,6443,6448,6459,6470,6509,6512,6516,6528,6571,6576,6601,6608,6617,6656,6683,6688,6750,6752,6780,6783,6793,6800,6809,6823,6823,6832,6845,6847,6862,6912,6988,6992,7001,7019,7027,7040,7155,7168,7223,7232,7241,7245,7293,7296,7304,7312,7354,7357,7359,7376,7378,7380,7418,7424,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8203,8207,8234,8238,8255,8256,8276,8276,8288,8292,8294,8303,8305,8305,8319,8319,8336,8348,8400,8412,8417,8417,8421,8432,8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8505,8508,8511,8517,8521,8526,8526,8544,8584,11264,11492,11499,11507,11520,11557,11559,11559,11565,11565,11568,11623,11631,11631,11647,11670,11680,11686,11688,11694,11696,11702,11704,11710,11712,11718,11720,11726,11728,11734,11736,11742,11744,11775,11823,11823,12293,12295,12321,12335,12337,12341,12344,12348,12353,12438,12441,12442,12445,12447,12449,12538,12540,12543,12549,12591,12593,12686,12704,12735,12784,12799,13312,19903,19968,42124,42192,42237,42240,42508,42512,42539,42560,42607,42612,42621,42623,42737,42775,42783,42786,42888,42891,42954,42960,42961,42963,42963,42965,42969,42994,43047,43052,43052,43072,43123,43136,43205,43216,43225,43232,43255,43259,43259,43261,43309,43312,43347,43360,43388,43392,43456,43471,43481,43488,43518,43520,43574,43584,43597,43600,43609,43616,43638,43642,43714,43739,43741,43744,43759,43762,43766,43777,43782,43785,43790,43793,43798,43808,43814,43816,43822,43824,43866,43868,43881,43888,44010,44012,44013,44016,44025,44032,55203,55216,55238,55243,55291,63744,64109,64112,64217,64256,64262,64275,64279,64285,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,65024,65039,65056,65071,65075,65076,65101,65103,65136,65140,65142,65276,65279,65279,65296,65305,65313,65338,65343,65343,65345,65370,65382,65470,65474,65479,65482,65487,65490,65495,65498,65500,65529,65531,65536,65547,65549,65574,65576,65594,65596,65597,65599,65613,65616,65629,65664,65786,65856,65908,66045,66045,66176,66204,66208,66256,66272,66272,66304,66335,66349,66378,66384,66426,66432,66461,66464,66499,66504,66511,66513,66517,66560,66717,66720,66729,66736,66771,66776,66811,66816,66855,66864,66915,66928,66938,66940,66954,66956,66962,66964,66965,66967,66977,66979,66993,66995,67001,67003,67004,67072,67382,67392,67413,67424,67431,67456,67461,67463,67504,67506,67514,67584,67589,67592,67592,67594,67637,67639,67640,67644,67644,67647,67669,67680,67702,67712,67742,67808,67826,67828,67829,67840,67861,67872,67897,67968,68023,68030,68031,68096,68099,68101,68102,68108,68115,68117,68119,68121,68149,68152,68154,68159,68159,68192,68220,68224,68252,68288,68295,68297,68326,68352,68405,68416,68437,68448,68466,68480,68497,68608,68680,68736,68786,68800,68850,68864,68903,68912,68921,69248,69289,69291,69292,69296,69297,69373,69404,69415,69415,69424,69456,69488,69509,69552,69572,69600,69622,69632,69702,69734,69749,69759,69818,69821,69821,69826,69826,69837,69837,69840,69864,69872,69881,69888,69940,69942,69951,69956,69959,69968,70003,70006,70006,70016,70084,70089,70092,70094,70106,70108,70108,70144,70161,70163,70199,70206,70209,70272,70278,70280,70280,70282,70285,70287,70301,70303,70312,70320,70378,70384,70393,70400,70403,70405,70412,70415,70416,70419,70440,70442,70448,70450,70451,70453,70457,70459,70468,70471,70472,70475,70477,70480,70480,70487,70487,70493,70499,70502,70508,70512,70516,70656,70730,70736,70745,70750,70753,70784,70853,70855,70855,70864,70873,71040,71093,71096,71104,71128,71133,71168,71232,71236,71236,71248,71257,71296,71352,71360,71369,71424,71450,71453,71467,71472,71481,71488,71494,71680,71738,71840,71913,71935,71942,71945,71945,71948,71955,71957,71958,71960,71989,71991,71992,71995,72003,72016,72025,72096,72103,72106,72151,72154,72161,72163,72164,72192,72254,72263,72263,72272,72345,72349,72349,72368,72440,72704,72712,72714,72758,72760,72768,72784,72793,72818,72847,72850,72871,72873,72886,72960,72966,72968,72969,72971,73014,73018,73018,73020,73021,73023,73031,73040,73049,73056,73061,73063,73064,73066,73102,73104,73105,73107,73112,73120,73129,73440,73462,73472,73488,73490,73530,73534,73538,73552,73561,73648,73648,73728,74649,74752,74862,74880,75075,77712,77808,77824,78933,82944,83526,92160,92728,92736,92766,92768,92777,92784,92862,92864,92873,92880,92909,92912,92916,92928,92982,92992,92995,93008,93017,93027,93047,93053,93071,93760,93823,93952,94026,94031,94087,94095,94111,94176,94177,94179,94180,94192,94193,94208,100343,100352,101589,101632,101640,110576,110579,110581,110587,110589,110590,110592,110882,110898,110898,110928,110930,110933,110933,110948,110951,110960,111355,113664,113770,113776,113788,113792,113800,113808,113817,113821,113822,113824,113827,118528,118573,118576,118598,119141,119145,119149,119170,119173,119179,119210,119213,119362,119364,119808,119892,119894,119964,119966,119967,119970,119970,119973,119974,119977,119980,119982,119993,119995,119995,119997,120003,120005,120069,120071,120074,120077,120084,120086,120092,120094,120121,120123,120126,120128,120132,120134,120134,120138,120144,120146,120485,120488,120512,120514,120538,120540,120570,120572,120596,120598,120628,120630,120654,120656,120686,120688,120712,120714,120744,120746,120770,120772,120779,120782,120831,121344,121398,121403,121452,121461,121461,121476,121476,121499,121503,121505,121519,122624,122654,122661,122666,122880,122886,122888,122904,122907,122913,122915,122916,122918,122922,122928,122989,123023,123023,123136,123180,123184,123197,123200,123209,123214,123214,123536,123566,123584,123641,124112,124153,124896,124902,124904,124907,124909,124910,124912,124926,124928,125124,125136,125142,125184,125259,125264,125273,126464,126467,126469,126495,126497,126498,126500,126500,126503,126503,126505,126514,126516,126519,126521,126521,126523,126523,126530,126530,126535,126535,126537,126537,126539,126539,126541,126543,126545,126546,126548,126548,126551,126551,126553,126553,126555,126555,126557,126557,126559,126559,126561,126562,126564,126564,126567,126570,126572,126578,126580,126583,126585,126588,126590,126590,126592,126601,126603,126619,126625,126627,126629,126633,126635,126651,130032,130041,131072,173791,173824,177977,177984,178205,178208,183969,183984,191456,194560,195101,196608,201546,201552,205743,917505,917505,917536,917631,917760,917999,662,0,65,90,97,122,170,170,181,181,186,186,192,214,216,246,248,705,710,721,736,740,748,748,750,750,880,884,886,887,890,893,895,895,902,902,904,906,908,908,910,929,931,1013,1015,1153,1162,1327,1329,1366,1369,1369,1376,1416,1488,1514,1519,1522,1568,1610,1646,1647,1649,1747,1749,1749,1765,1766,1774,1775,1786,1788,1791,1791,1808,1808,1810,1839,1869,1957,1969,1969,1994,2026,2036,2037,2042,2042,2048,2069,2074,2074,2084,2084,2088,2088,2112,2136,2144,2154,2160,2183,2185,2190,2208,2249,2308,2361,2365,2365,2384,2384,2392,2401,2417,2432,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2493,2493,2510,2510,2524,2525,2527,2529,2544,2545,2556,2556,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2649,2652,2654,2654,2674,2676,2693,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2749,2749,2768,2768,2784,2785,2809,2809,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2869,2873,2877,2877,2908,2909,2911,2913,2929,2929,2947,2947,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,3001,3024,3024,3077,3084,3086,3088,3090,3112,3114,3129,3133,3133,3160,3162,3165,3165,3168,3169,3200,3200,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3261,3261,3293,3294,3296,3297,3313,3314,3332,3340,3342,3344,3346,3386,3389,3389,3406,3406,3412,3414,3423,3425,3450,3455,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3585,3632,3634,3635,3648,3654,3713,3714,3716,3716,3718,3722,3724,3747,3749,3749,3751,3760,3762,3763,3773,3773,3776,3780,3782,3782,3804,3807,3840,3840,3904,3911,3913,3948,3976,3980,4096,4138,4159,4159,4176,4181,4186,4189,4193,4193,4197,4198,4206,4208,4213,4225,4238,4238,4256,4293,4295,4295,4301,4301,4304,4346,4348,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4744,4746,4749,4752,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4822,4824,4880,4882,4885,4888,4954,4992,5007,5024,5109,5112,5117,5121,5740,5743,5759,5761,5786,5792,5866,5870,5880,5888,5905,5919,5937,5952,5969,5984,5996,5998,6e3,6016,6067,6103,6103,6108,6108,6176,6264,6272,6276,6279,6312,6314,6314,6320,6389,6400,6430,6480,6509,6512,6516,6528,6571,6576,6601,6656,6678,6688,6740,6823,6823,6917,6963,6981,6988,7043,7072,7086,7087,7098,7141,7168,7203,7245,7247,7258,7293,7296,7304,7312,7354,7357,7359,7401,7404,7406,7411,7413,7414,7418,7418,7424,7615,7680,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8305,8305,8319,8319,8336,8348,8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8505,8508,8511,8517,8521,8526,8526,8544,8584,11264,11492,11499,11502,11506,11507,11520,11557,11559,11559,11565,11565,11568,11623,11631,11631,11648,11670,11680,11686,11688,11694,11696,11702,11704,11710,11712,11718,11720,11726,11728,11734,11736,11742,11823,11823,12293,12295,12321,12329,12337,12341,12344,12348,12353,12438,12445,12447,12449,12538,12540,12543,12549,12591,12593,12686,12704,12735,12784,12799,13312,19903,19968,42124,42192,42237,42240,42508,42512,42527,42538,42539,42560,42606,42623,42653,42656,42735,42775,42783,42786,42888,42891,42954,42960,42961,42963,42963,42965,42969,42994,43009,43011,43013,43015,43018,43020,43042,43072,43123,43138,43187,43250,43255,43259,43259,43261,43262,43274,43301,43312,43334,43360,43388,43396,43442,43471,43471,43488,43492,43494,43503,43514,43518,43520,43560,43584,43586,43588,43595,43616,43638,43642,43642,43646,43695,43697,43697,43701,43702,43705,43709,43712,43712,43714,43714,43739,43741,43744,43754,43762,43764,43777,43782,43785,43790,43793,43798,43808,43814,43816,43822,43824,43866,43868,43881,43888,44002,44032,55203,55216,55238,55243,55291,63744,64109,64112,64217,64256,64262,64275,64279,64285,64285,64287,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,65136,65140,65142,65276,65313,65338,65345,65370,65382,65470,65474,65479,65482,65487,65490,65495,65498,65500,65536,65547,65549,65574,65576,65594,65596,65597,65599,65613,65616,65629,65664,65786,65856,65908,66176,66204,66208,66256,66304,66335,66349,66378,66384,66421,66432,66461,66464,66499,66504,66511,66513,66517,66560,66717,66736,66771,66776,66811,66816,66855,66864,66915,66928,66938,66940,66954,66956,66962,66964,66965,66967,66977,66979,66993,66995,67001,67003,67004,67072,67382,67392,67413,67424,67431,67456,67461,67463,67504,67506,67514,67584,67589,67592,67592,67594,67637,67639,67640,67644,67644,67647,67669,67680,67702,67712,67742,67808,67826,67828,67829,67840,67861,67872,67897,67968,68023,68030,68031,68096,68096,68112,68115,68117,68119,68121,68149,68192,68220,68224,68252,68288,68295,68297,68324,68352,68405,68416,68437,68448,68466,68480,68497,68608,68680,68736,68786,68800,68850,68864,68899,69248,69289,69296,69297,69376,69404,69415,69415,69424,69445,69488,69505,69552,69572,69600,69622,69635,69687,69745,69746,69749,69749,69763,69807,69840,69864,69891,69926,69956,69956,69959,69959,69968,70002,70006,70006,70019,70066,70081,70084,70106,70106,70108,70108,70144,70161,70163,70187,70207,70208,70272,70278,70280,70280,70282,70285,70287,70301,70303,70312,70320,70366,70405,70412,70415,70416,70419,70440,70442,70448,70450,70451,70453,70457,70461,70461,70480,70480,70493,70497,70656,70708,70727,70730,70751,70753,70784,70831,70852,70853,70855,70855,71040,71086,71128,71131,71168,71215,71236,71236,71296,71338,71352,71352,71424,71450,71488,71494,71680,71723,71840,71903,71935,71942,71945,71945,71948,71955,71957,71958,71960,71983,71999,71999,72001,72001,72096,72103,72106,72144,72161,72161,72163,72163,72192,72192,72203,72242,72250,72250,72272,72272,72284,72329,72349,72349,72368,72440,72704,72712,72714,72750,72768,72768,72818,72847,72960,72966,72968,72969,72971,73008,73030,73030,73056,73061,73063,73064,73066,73097,73112,73112,73440,73458,73474,73474,73476,73488,73490,73523,73648,73648,73728,74649,74752,74862,74880,75075,77712,77808,77824,78895,78913,78918,82944,83526,92160,92728,92736,92766,92784,92862,92880,92909,92928,92975,92992,92995,93027,93047,93053,93071,93760,93823,93952,94026,94032,94032,94099,94111,94176,94177,94179,94179,94208,100343,100352,101589,101632,101640,110576,110579,110581,110587,110589,110590,110592,110882,110898,110898,110928,110930,110933,110933,110948,110951,110960,111355,113664,113770,113776,113788,113792,113800,113808,113817,119808,119892,119894,119964,119966,119967,119970,119970,119973,119974,119977,119980,119982,119993,119995,119995,119997,120003,120005,120069,120071,120074,120077,120084,120086,120092,120094,120121,120123,120126,120128,120132,120134,120134,120138,120144,120146,120485,120488,120512,120514,120538,120540,120570,120572,120596,120598,120628,120630,120654,120656,120686,120688,120712,120714,120744,120746,120770,120772,120779,122624,122654,122661,122666,122928,122989,123136,123180,123191,123197,123214,123214,123536,123565,123584,123627,124112,124139,124896,124902,124904,124907,124909,124910,124912,124926,124928,125124,125184,125251,125259,125259,126464,126467,126469,126495,126497,126498,126500,126500,126503,126503,126505,126514,126516,126519,126521,126521,126523,126523,126530,126530,126535,126535,126537,126537,126539,126539,126541,126543,126545,126546,126548,126548,126551,126551,126553,126553,126555,126555,126557,126557,126559,126559,126561,126562,126564,126564,126567,126570,126572,126578,126580,126583,126585,126588,126590,126590,126592,126601,126603,126619,126625,126627,126629,126633,126635,126651,131072,173791,173824,177977,177984,178205,178208,183969,183984,191456,194560,195101,196608,201546,201552,205743,47,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,15,1,0,0,0,1,17,1,0,0,0,3,20,1,0,0,0,5,22,1,0,0,0,7,24,1,0,0,0,9,26,1,0,0,0,11,35,1,0,0,0,13,37,1,0,0,0,15,39,1,0,0,0,17,18,5,47,0,0,18,19,5,47,0,0,19,2,1,0,0,0,20,21,5,47,0,0,21,4,1,0,0,0,22,23,5,42,0,0,23,6,1,0,0,0,24,25,5,33,0,0,25,8,1,0,0,0,26,30,3,13,6,0,27,29,3,11,5,0,28,27,1,0,0,0,29,32,1,0,0,0,30,28,1,0,0,0,30,31,1,0,0,0,31,33,1,0,0,0,32,30,1,0,0,0,33,34,6,4,0,0,34,10,1,0,0,0,35,36,7,0,0,0,36,12,1,0,0,0,37,38,7,1,0,0,38,14,1,0,0,0,39,43,5,39,0,0,40,42,9,0,0,0,41,40,1,0,0,0,42,45,1,0,0,0,43,44,1,0,0,0,43,41,1,0,0,0,44,46,1,0,0,0,45,43,1,0,0,0,46,47,5,39,0,0,47,16,1,0,0,0,3,0,30,43,1,1,4,0];static __ATN;static get _ATN(){return t.__ATN||(t.__ATN=(new Jt).deserialize(t._serializedATN)),t.__ATN}static vocabulary=new R(t.literalNames,t.symbolicNames,[]);get vocabulary(){return t.vocabulary}static decisionsToDFA=t._ATN.decisionToState.map(((t,e)=>new xe(t,e)))},Ue=class extends oe{static{C(this,"XPathLexerErrorListener")}syntaxError(t,e,s,n,i,r){}},Be=class{static{C(this,"XPathElement")}invert;nodeName;constructor(t){this.nodeName=t,this.invert=!1}toString(){return"XPathElement["+(this.invert?"!":"")+this.nodeName+"]"}},He=class extends Be{static{C(this,"XPathRuleAnywhereElement")}ruleIndex;constructor(t,e){super(t),this.ruleIndex=e}evaluate(t){return J.findAllRuleNodes(t,this.ruleIndex)}toString(){return"XPathRuleAnywhereElement["+(this.invert?"!":"")+this.nodeName+"]"}},ze=class extends Be{static{C(this,"XPathRuleElement")}ruleIndex;constructor(t,e){super(t),this.ruleIndex=e}evaluate(t){const e=[];for(const s of J.getChildren(t))s instanceof tt&&(s.ruleIndex===this.ruleIndex&&!this.invert||s.ruleIndex!==this.ruleIndex&&this.invert)&&e.push(s);return e}toString(){return"XPathRuleElement["+(this.invert?"!":"")+this.nodeName+"]"}},Ve=class extends Be{static{C(this,"XPathTokenAnywhereElement")}tokenType;constructor(t,e){super(t),this.tokenType=e}evaluate(t){return J.findAllTokenNodes(t,this.tokenType)}toString(){return"XPathTokenAnywhereElement["+(this.invert?"!":"")+this.nodeName+"]"}},qe=class extends Be{static{C(this,"XPathTokenElement")}tokenType;constructor(t,e){super(t),this.tokenType=e}evaluate(t){const e=[];for(const s of J.getChildren(t))s instanceof X&&s.symbol&&(s.symbol.type===this.tokenType&&!this.invert||s.symbol.type!==this.tokenType&&this.invert)&&e.push(s);return e}toString(){return"XPathTokenElement["+(this.invert?"!":"")+this.nodeName+"]"}},We=class extends Be{static{C(this,"XPathWildcardAnywhereElement")}constructor(){super($e.WILDCARD)}evaluate(t){return this.invert?[]:J.descendants(t)}toString(){return"XPathWildcardAnywhereElement["+(this.invert?"!":"")+this.nodeName+"]"}},Ye=class extends Be{static{C(this,"XPathWildcardElement")}constructor(){super($e.WILDCARD)}evaluate(t){const e=[];if(this.invert)return e;for(const s of J.getChildren(t))e.push(s);return e}toString(){return"XPathWildcardElement["+(this.invert?"!":"")+this.nodeName+"]"}},$e=class t{static{C(this,"XPath")}static WILDCARD="*";static NOT="!";path;elements;parser;constructor(t,e){this.parser=t,this.path=e,this.elements=this.split(e)}static findAll(e,s,n){return new t(n,s).evaluate(e)}split(t){const e=new Me(be.fromString(t));e.recover=t=>{throw t},e.removeErrorListeners(),e.addErrorListener(new Ue);const s=new Fe(e);try{s.fill()}catch(s){if(s instanceof de){const n="Invalid tokens or characters at index "+e.column+" in path '"+t+"' -- "+s.message;throw new RangeError(n)}throw s}const n=s.getTokens(),i=[],r=n.length;let o=0;t:for(;o<r;){const t=n[o];let e;switch(t.type){case Me.ROOT:case Me.ANYWHERE:const s=t.type===Me.ANYWHERE;o++,e=n[o];const r=e.type===Me.BANG;r&&(o++,e=n[o]);const a=this.getXPathElement(e,s);a.invert=r,i.push(a),o++;break;case Me.TOKEN_REF:case Me.RULE_REF:case Me.WILDCARD:i.push(this.getXPathElement(t,!1)),++o;break;case S.EOF:break t;default:throw new Error("Unknown path element "+t)}}return i}evaluate(t){const e=new tt(null);e.addChild(t);let s=new Set([e]),n=0;for(;n<this.elements.length;){const t=new Set;for(const e of s)if(e.getChildCount()>0){this.elements[n].evaluate(e).forEach((e=>{t.add(e)}),t)}n++,s=t}return s}getXPathElement(t,e){if(t.type===S.EOF)throw new Error("Missing path element at end of path");const s=t.text;if(null==s)throw new Error("Expected wordToken to have text content.");const n=this.parser.getTokenType(s),i=this.parser.getRuleIndex(s);switch(t.type){case Me.WILDCARD:return e?new We:new Ye;case Me.TOKEN_REF:case Me.STRING:if(n===S.INVALID_TYPE)throw new Error(s+" at index "+t.start+" isn't a valid token name");return e?new Ve(s,n):new qe(s,n);default:if(-1===i)throw new Error(s+" at index "+t.start+" isn't a valid rule name");return e?new He(s,i):new ze(s,i)}}},Ke=class{static{C(this,"Chunk")}},Ge=class{static{C(this,"ParseTreeMatch")}tree;pattern;labels;mismatchedNode;constructor(t,e,s,n){this.tree=t,this.pattern=e,this.labels=s,this.mismatchedNode=n}get(t){const e=this.labels.get(t);return e&&0!==e.length?e[e.length-1]:null}getAll(t){return this.labels.get(t)??[]}getLabels(){return this.labels}getMismatchedNode(){return this.mismatchedNode}succeeded(){return!this.mismatchedNode}getPattern(){return this.pattern}getTree(){return this.tree}toString(){return`Match ${this.succeeded()?"succeeded":"failed"}; found ${this.getLabels().size} labels`}},je=class{static{C(this,"ParseTreePattern")}patternRuleIndex;pattern;patternTree;matcher;constructor(t,e,s,n){this.matcher=t,this.patternRuleIndex=s,this.pattern=e,this.patternTree=n}match(t){return this.matcher.match(t,this)}matches(t){return this.matcher.match(t,this).succeeded()}findAll(t,e){const s=$e.findAll(t,e,this.matcher.getParser()),n=new Array;for(const t of s){const e=this.match(t);e.succeeded()&&n.push(e)}return n}getMatcher(){return this.matcher}getPattern(){return this.pattern}getPatternRuleIndex(){return this.patternRuleIndex}getPatternTree(){return this.patternTree}},Xe=class extends ue{static{C(this,"InputMismatchException")}constructor(t){super({message:"",recognizer:t,input:t.inputStream,ctx:t.context}),this.offendingToken=t.getCurrentToken()}},Qe=class extends ue{static{C(this,"FailedPredicateException")}ruleIndex=0;predicateIndex=0;predicate;constructor(t,e,s=null){super({message:Ze(e??"no predicate",s??null),recognizer:t,input:t.inputStream,ctx:t.context});const n=t.atn.states[t.state].transitions[0];n instanceof Pt?(this.ruleIndex=n.ruleIndex,this.predicateIndex=n.predIndex):(this.ruleIndex=0,this.predicateIndex=0),this.predicate=e,this.offendingToken=t.getCurrentToken()}},Ze=C(((t,e)=>null!==e?e:"failed predicate: {"+t+"}?"),"formatMessage"),Je=class{static{C(this,"DefaultErrorStrategy")}errorRecoveryMode=!1;lastErrorIndex=-1;lastErrorStates=new b;nextTokensContext=null;nextTokenState=0;reset(t){this.endErrorCondition(t)}beginErrorCondition(t){this.errorRecoveryMode=!0}inErrorRecoveryMode(t){return this.errorRecoveryMode}endErrorCondition(t){this.errorRecoveryMode=!1,this.lastErrorStates=new b,this.lastErrorIndex=-1}reportMatch(t){this.endErrorCondition(t)}reportError(t,e){this.inErrorRecoveryMode(t)||(this.beginErrorCondition(t),e instanceof ke?this.reportNoViableAlternative(t,e):e instanceof Xe?this.reportInputMismatch(t,e):e instanceof Qe?this.reportFailedPredicate(t,e):t.notifyErrorListeners(e.message,e.offendingToken,e))}recover(t,e){this.lastErrorIndex===t.inputStream?.index&&this.lastErrorStates.contains(t.state)&&t.consume(),this.lastErrorIndex=t.inputStream?.index??0,this.lastErrorStates.addOne(t.state);const s=this.getErrorRecoverySet(t);this.consumeUntil(t,s)}sync(t){if(this.inErrorRecoveryMode(t))return;const e=t.atn.states[t.state],s=t.tokenStream.LA(1),n=t.atn.nextTokens(e);if(n.contains(s))return this.nextTokensContext=null,void(this.nextTokenState=z.INVALID_STATE_NUMBER);if(n.contains(S.EPSILON))null===this.nextTokensContext&&(this.nextTokensContext=t.context,this.nextTokenState=t.state);else switch(e.constructor.stateType){case z.BLOCK_START:case z.STAR_BLOCK_START:case z.PLUS_BLOCK_START:case z.STAR_LOOP_ENTRY:if(null!==this.singleTokenDeletion(t))return;throw new Xe(t);case z.PLUS_LOOP_BACK:case z.STAR_LOOP_BACK:{this.reportUnwantedToken(t);const e=new b;e.addSet(t.getExpectedTokens());const s=e.addSet(this.getErrorRecoverySet(t));this.consumeUntil(t,s);break}}}reportNoViableAlternative(t,e){if(e.message.length>0)return void t.notifyErrorListeners(e.message,e.offendingToken,e);const s=t.tokenStream;let n;n=null!==s&&e.startToken?e.startToken.type===S.EOF?"<EOF>":s.getTextFromRange(e.startToken,e.offendingToken):"<unknown input>";const i="no viable alternative at input "+this.escapeWSAndQuote(n);t.notifyErrorListeners(i,e.offendingToken,e)}reportInputMismatch(t,e){if(e.message.length>0)return void t.notifyErrorListeners(e.message,e.offendingToken,e);const s="mismatched input "+this.getTokenErrorDisplay(e.offendingToken)+" expecting "+e.getExpectedTokens().toStringWithVocabulary(t.vocabulary);t.notifyErrorListeners(s,e.offendingToken,e)}reportFailedPredicate(t,e){const s="rule "+t.ruleNames[t.context.ruleIndex]+" "+e.message;t.notifyErrorListeners(s,e.offendingToken,e)}reportUnwantedToken(t){if(this.inErrorRecoveryMode(t))return;this.beginErrorCondition(t);const e=t.getCurrentToken(),s="extraneous input "+this.getTokenErrorDisplay(e)+" expecting "+this.getExpectedTokens(t).toStringWithVocabulary(t.vocabulary);t.notifyErrorListeners(s,e,null)}reportMissingToken(t){if(this.inErrorRecoveryMode(t))return;this.beginErrorCondition(t);const e=t.getCurrentToken(),s="missing "+this.getExpectedTokens(t).toStringWithVocabulary(t.vocabulary)+" at "+this.getTokenErrorDisplay(e);t.notifyErrorListeners(s,e,null)}recoverInline(t){const e=this.singleTokenDeletion(t);if(e)return t.consume(),e;if(this.singleTokenInsertion(t))return this.getMissingSymbol(t);throw new Xe(t)}singleTokenInsertion(t){const e=t.tokenStream?.LA(1)??-1,s=t.atn,n=s.states[t.state].transitions[0].target;return!!s.nextTokens(n,t.context??void 0).contains(e)&&(this.reportMissingToken(t),!0)}singleTokenDeletion(t){const e=t.tokenStream?.LA(2)??-1;if(this.getExpectedTokens(t).contains(e)){this.reportUnwantedToken(t),t.consume();const e=t.getCurrentToken();return this.reportMatch(t),e}return null}getMissingSymbol(t){const e=t.getCurrentToken(),s=this.getExpectedTokens(t);let n,i=S.INVALID_TYPE;0!==s.length&&(i=s.minElement),n=i===S.EOF?"<missing EOF>":"<missing "+t.vocabulary.getDisplayName(i)+">";let r=e;const o=t.tokenStream?.LT(-1);return r.type===S.EOF&&null!==o&&(r=o),t.getTokenFactory().create(r.source,i,n,S.DEFAULT_CHANNEL,-1,-1,r.line,r.column)}getExpectedTokens(t){return t.getExpectedTokens()}getTokenErrorDisplay(t){if(null===t)return"<no token>";let e=t.text;return e||(e=t.type===S.EOF?"<EOF>":"<"+t.type+">"),this.escapeWSAndQuote(e)}escapeWSAndQuote(t){return"'"+(t=(t=(t=t.replace(/\n/g,"\\n")).replace(/\r/g,"\\r")).replace(/\t/g,"\\t"))+"'"}getErrorRecoverySet(t){const e=t.atn;let s=t.context;const n=new b;for(;null!==s&&s.invokingState>=0;){const t=e.states[s.invokingState].transitions[0],i=e.nextTokens(t.followState);n.addSet(i),s=s.parent}return n.removeOne(S.EPSILON),n}consumeUntil(t,e){let s=t.tokenStream?.LA(1)??-1;for(;s!==S.EOF&&!e.contains(s);)t.consume(),s=t.tokenStream?.LA(1)??-1}},ts=class extends Je{static{C(this,"BailErrorStrategy")}recover(t,e){throw new Re(e)}recoverInline(t){const e=new Xe(t);throw new Re(e)}sync(t){}},es=class{static{C(this,"ListTokenSource")}sourceName;tokenFactory=le.DEFAULT;tokens=[];i=0;eofToken=null;constructor(t,e){this.tokens=t,this.sourceName=e??""}get column(){if(this.i<this.tokens.length)return this.tokens[this.i].column;if(null!==this.eofToken)return this.eofToken.column;if(this.tokens.length>0){const t=this.tokens[this.tokens.length-1],e=t.text;if(e){const t=e.lastIndexOf("\n");if(t>=0)return e.length-t-1}return t.column+t.stop-t.start+1}return 0}nextToken(){if(this.i>=this.tokens.length){if(null===this.eofToken){let t=-1;if(this.tokens.length>0){const e=this.tokens[this.tokens.length-1].stop;-1!==e&&(t=e+1)}const e=Math.max(-1,t-1);this.eofToken=this.tokenFactory.create([this,this.inputStream],S.EOF,"EOF",S.DEFAULT_CHANNEL,t,e,this.line,this.column)}return this.eofToken}const t=this.tokens[this.i];return this.i===this.tokens.length-1&&t.type===S.EOF&&(this.eofToken=t),this.i++,t}get line(){if(this.i<this.tokens.length)return this.tokens[this.i].line;if(null!==this.eofToken)return this.eofToken.line;if(this.tokens.length>0){const t=this.tokens[this.tokens.length-1];let e=t.line;const s=t.text;if(s)for(const t of s)"\n"===t&&e++;return e}return 1}get inputStream(){return this.i<this.tokens.length?this.tokens[this.i].inputStream:null!==this.eofToken?this.eofToken.inputStream:this.tokens.length>0?this.tokens[this.tokens.length-1].inputStream:null}getSourceName(){if(null!==this.sourceName)return this.sourceName;const t=this.inputStream;return null!==t?t.getSourceName():"List"}},ss=class extends tt{static{C(this,"InterpreterRuleContext")}#c;constructor(t,e,s){super(e,s),this.#c=t}get ruleIndex(){return this.#c}},ns=class{static{C(this,"TraceListener")}parser;constructor(t){this.parser=t}enterEveryRule(t){console.log("enter   "+this.parser.ruleNames[t.ruleIndex]+", LT(1)="+this.parser.inputStream?.LT(1)?.text)}visitTerminal(t){console.log("consume "+t.getSymbol()+" rule "+this.parser.ruleNames[this.parser.context.ruleIndex])}exitEveryRule(t){console.log("exit    "+this.parser.ruleNames[t.ruleIndex]+", LT(1)="+this.parser.inputStream?.LT(1)?.text)}visitErrorNode(t){}},is=class extends he{static{C(this,"Parser")}printer=null;buildParseTrees=!0;errorHandler=new Je;context=null;precedenceStack=[];parseListeners=null;syntaxErrors=0;matchedEOF=!1;tracer=null;bypassAltsAtnCache=null;#h;constructor(t){super(),this.precedenceStack.push(0),this.syntaxErrors=0,this.#h=t}reset(t=!0){t&&this.inputStream.seek(0),this.errorHandler.reset(this),this.context=null,this.syntaxErrors=0,this.matchedEOF=!1,this.setTrace(!1),this.precedenceStack=[],this.precedenceStack.push(0),this.interpreter&&this.interpreter.reset()}match(t){let e=this.getCurrentToken();return e.type===t?(t===S.EOF&&(this.matchedEOF=!0),this.errorHandler.reportMatch(this),this.consume()):(e=this.errorHandler.recoverInline(this),this.buildParseTrees&&-1===e.tokenIndex&&this.context.addErrorNode(this.createErrorNode(this.context,e))),e}matchWildcard(){let t=this.getCurrentToken();return t.type>0?(this.errorHandler.reportMatch(this),this.consume()):(t=this.errorHandler.recoverInline(this),this.buildParseTrees&&-1===t.tokenIndex&&this.context.addErrorNode(this.createErrorNode(this.context,t))),t}getParseListeners(){return this.parseListeners??[]}addParseListener(t){if(null===t)throw new Error("listener");null===this.parseListeners&&(this.parseListeners=[]),this.parseListeners.push(t)}removeParseListener(t){if(null!==this.parseListeners&&null!==t){const e=this.parseListeners.indexOf(t);e>=0&&this.parseListeners.splice(e,1),0===this.parseListeners.length&&(this.parseListeners=null)}}removeParseListeners(){this.parseListeners=null}triggerEnterRuleEvent(){if(null!==this.parseListeners){const t=this.context;this.parseListeners.forEach((e=>{e.enterEveryRule(t),t.enterRule(e)}))}}triggerExitRuleEvent(){if(null!==this.parseListeners){const t=this.context;this.parseListeners.slice(0).reverse().forEach((e=>{t.exitRule(e),e.exitEveryRule(t)}))}}getTokenFactory(){return this.inputStream.tokenSource.tokenFactory}setTokenFactory(t){this.inputStream.tokenSource.tokenFactory=t}compileParseTreePattern(t,e,s){if(!s&&null!==this.tokenStream){const t=this.tokenStream.tokenSource;t instanceof pe&&(s=t)}if(!s)throw new Error("Parser can't discover a lexer to use");return new ps(s,this).compile(t,e)}getATNWithBypassAlts(){const t=this.serializedATN;if(null===t)throw new Error("The current parser does not support an ATN with bypass alternatives.");if(null!==this.bypassAltsAtnCache)return this.bypassAltsAtnCache;return this.bypassAltsAtnCache=new Jt({readOnly:!1,verifyATN:!0,generateRuleBypassTransitions:!0}).deserialize(t),this.bypassAltsAtnCache}get numberOfSyntaxErrors(){return this.syntaxErrors}get inputStream(){return this.#h}set inputStream(t){this.tokenStream=t}get tokenStream(){return this.#h}set tokenStream(t){this.reset(!1),this.#h=t}getCurrentToken(){return this.inputStream.LT(1)}notifyErrorListeners(t,e,s){s=s??null,null===(e=e??null)&&(e=this.getCurrentToken()),this.syntaxErrors+=1;const n=e.line,i=e.column;this.errorListenerDispatch.syntaxError(this,e,n,i,t,s)}consume(){const t=this.getCurrentToken();t.type!==S.EOF&&this.tokenStream.consume();const e=null!==this.parseListeners&&this.parseListeners.length>0;if(this.buildParseTrees||e){let s;s=this.errorHandler.inErrorRecoveryMode(this)?this.context.addErrorNode(this.createErrorNode(this.context,t)):this.context.addTokenNode(t),e&&this.parseListeners.forEach((t=>{s instanceof Q?t.visitErrorNode(s):t.visitTerminal(s)}))}return t}addContextToParseTree(){this.context?.parent&&this.context.parent.addChild(this.context)}enterRule(t,e,s){this.state=e,this.context=t,this.context.start=this.inputStream.LT(1),this.buildParseTrees&&this.addContextToParseTree(),this.triggerEnterRuleEvent()}exitRule(){this.matchedEOF?this.context.stop=this.inputStream.LT(1):this.context.stop=this.inputStream.LT(-1),this.triggerExitRuleEvent(),this.state=this.context.invokingState,this.context=this.context.parent}enterOuterAlt(t,e){t.setAltNumber(e),this.buildParseTrees&&this.context!==t&&this.context?.parent&&(this.context.parent.removeLastChild(),this.context.parent.addChild(t)),this.context=t}getPrecedence(){return 0===this.precedenceStack.length?-1:this.precedenceStack[this.precedenceStack.length-1]}enterRecursionRule(t,e,s,n){this.state=e,this.precedenceStack.push(n),this.context=t,this.context.start=this.inputStream.LT(1),this.triggerEnterRuleEvent()}pushNewRecursionContext(t,e,s){const n=this.context;n.parent=t,n.invokingState=e,n.stop=this.inputStream.LT(-1),this.context=t,this.context.start=n.start,this.buildParseTrees&&this.context.addChild(n),this.triggerEnterRuleEvent()}unrollRecursionContexts(t){this.precedenceStack.pop(),this.context.stop=this.inputStream.LT(-1);const e=this.context,s=this.getParseListeners();if(null!==s&&s.length>0)for(;this.context!==t;)this.triggerExitRuleEvent(),this.context=this.context.parent;else this.context=t;e.parent=t,this.buildParseTrees&&null!==t&&t.addChild(e)}getInvokingContext(t){let e=this.context;for(;null!==e;){if(e.ruleIndex===t)return e;e=e.parent}return null}precpred(t,e){return e>=this.precedenceStack[this.precedenceStack.length-1]}isExpectedToken(t){const e=this.interpreter.atn;let s=this.context;const n=e.states[this.state];let i=e.nextTokens(n);if(i.contains(t))return!0;if(!i.contains(S.EPSILON))return!1;for(;null!==s&&s.invokingState>=0&&i.contains(S.EPSILON);){const n=e.states[s.invokingState].transitions[0];if(i=e.nextTokens(n.followState),i.contains(t))return!0;s=s.parent}return!(!i.contains(S.EPSILON)||t!==S.EOF)}getExpectedTokens(){return this.interpreter.atn.getExpectedTokens(this.state,this.context)}getExpectedTokensWithinCurrentRule(){const t=this.interpreter.atn,e=t.states[this.state];return t.nextTokens(e)}getRuleIndex(t){return this.getRuleIndexMap().get(t)??-1}getRuleInvocationStack(t){null===(t=t??null)&&(t=this.context);const e=[];for(;null!==t;){const s=t.ruleIndex;s<0?e.push("n/a"):e.push(this.ruleNames[s]),t=t.parent}return e}getDFAStrings(){return this.interpreter.decisionToDFA.toString()}dumpDFA(){let t=!1;for(const e of this.interpreter.decisionToDFA)e.length>0&&(t&&console.log(),this.printer&&(this.printer.println("Decision "+e.decision+":"),this.printer.print(e.toString(this.vocabulary))),t=!0)}getSourceName(){return this.inputStream.getSourceName()}getParseInfo(){const t=this.interpreter;if(t instanceof we)return new Ce(t)}setProfile(t){const e=this.interpreter,s=e.predictionMode;if(t)e instanceof we||(this.interpreter=new we(this));else if(e instanceof we){const t=e.sharedContextCache;if(t){const s=new ve(this,this.atn,e.decisionToDFA,t);this.interpreter=s}}this.interpreter.predictionMode=s}setTrace(t){t?(null!==this.tracer&&this.removeParseListener(this.tracer),this.tracer=new ns(this),this.addParseListener(this.tracer)):(this.removeParseListener(this.tracer),this.tracer=null)}createTerminalNode(t,e){return new X(e)}createErrorNode(t,e){return new Q(e)}},rs=class extends is{static{C(this,"ParserInterpreter")}rootContext;overrideDecisionRoot=null;parentContextStack=[];overrideDecisionAlt=-1;overrideDecisionReached=!1;decisionToDFA;sharedContextCache=new Le;pushRecursionContextStates;#l=-1;#u=-1;#d;#p;#g;#f;constructor(t,e,s,n,i){super(i),this.#d=t,this.#p=n,this.#g=s.slice(0),this.#f=e,this.pushRecursionContextStates=new y;for(const t of n.states)t instanceof yt&&t.precedenceRuleDecision&&this.pushRecursionContextStates.set(t.stateNumber);this.decisionToDFA=n.decisionToState.map(((t,e)=>new xe(t,e))),this.interpreter=new ve(this,n,this.decisionToDFA,this.sharedContextCache)}reset(){super.reset(),this.overrideDecisionReached=!1,this.overrideDecisionRoot=null}get atn(){return this.#p}get vocabulary(){return this.#f}get ruleNames(){return this.#g}get grammarFileName(){return this.#d}get atnState(){return this.#p.states[this.state]}parse(t){const e=this.#p.ruleToStartState[t];for(this.rootContext=this.createInterpreterRuleContext(null,z.INVALID_STATE_NUMBER,t),e.isLeftRecursiveRule?this.enterRecursionRule(this.rootContext,e.stateNumber,t,0):this.enterRule(this.rootContext,e.stateNumber,t);;){const t=this.atnState;if(t.constructor.stateType===z.RULE_STOP){if(this.context?.isEmpty()){if(e.isLeftRecursiveRule){const t=this.context,e=this.parentContextStack.pop();return this.unrollRecursionContexts(e[0]),t}return this.exitRule(),this.rootContext}this.visitRuleStopState(t)}else try{this.visitState(t)}catch(e){if(!(e instanceof ue))throw e;this.state=this.#p.ruleToStopState[t.ruleIndex].stateNumber,this.errorHandler.reportError(this,e),this.recover(e)}}}addDecisionOverride(t,e,s){this.#l=t,this.#u=e,this.overrideDecisionAlt=s}get overrideDecision(){return this.#l}get overrideDecisionInputIndex(){return this.#u}enterRecursionRule(t,e,s,n){this.parentContextStack.push([this.context,t.invokingState]),super.enterRecursionRule(t,e,s,n)}get serializedATN(){throw new Error("The ParserInterpreter does not support the serializedATN property.")}visitState(t){let e=1;t instanceof ft&&(e=this.visitDecisionState(t));const s=t.transitions[e-1];switch(s.transitionType){case Y.EPSILON:if(this.pushRecursionContextStates.get(t.stateNumber)&&s.target.constructor.stateType!==z.LOOP_END){const e=this.parentContextStack[this.parentContextStack.length-1],s=this.createInterpreterRuleContext(e[0],e[1],this.context.ruleIndex);this.pushNewRecursionContext(s,this.#p.ruleToStartState[t.ruleIndex].stateNumber,this.context.ruleIndex)}break;case Y.ATOM:this.match(s.label.minElement);break;case Y.RANGE:case Y.SET:case Y.NOT_SET:s.matches(this.inputStream.LA(1),S.MIN_USER_TOKEN_TYPE,65535)||this.recoverInline(),this.matchWildcard();break;case Y.WILDCARD:this.matchWildcard();break;case Y.RULE:const e=s.target,n=e.ruleIndex,i=this.createInterpreterRuleContext(this.context,t.stateNumber,n);e.isLeftRecursiveRule?this.enterRecursionRule(i,e.stateNumber,n,s.precedence):this.enterRule(i,s.target.stateNumber,n);break;case Y.PREDICATE:const r=s;if(!this.sempred(this.context,r.ruleIndex,r.predIndex))throw new Qe(this);break;case Y.ACTION:const o=s;this.action(this.context,o.ruleIndex,o.actionIndex);break;case Y.PRECEDENCE:if(!this.precpred(this.context,s.precedence)){const t=s.precedence;throw new Qe(this,`precpred(_ctx, ${t})`)}break;default:throw new Error("UnsupportedOperationException: Unrecognized ATN transition type.")}this.state=s.target.stateNumber}visitDecisionState(t){let e=1;if(t.transitions.length>1){this.errorHandler.sync(this);const s=t.decision;s!==this.#l||this.inputStream.index!==this.#u||this.overrideDecisionReached?e=this.interpreter.adaptivePredict(this.inputStream,s,this.context):(e=this.overrideDecisionAlt,this.overrideDecisionReached=!0)}return e}createInterpreterRuleContext(t,e,s){return new ss(s,t,e)}visitRuleStopState(t){if(this.#p.ruleToStartState[t.ruleIndex].isLeftRecursiveRule){const[t,e]=this.parentContextStack.pop();this.unrollRecursionContexts(t),this.state=e}else this.exitRule();const e=this.#p.states[this.state].transitions[0];this.state=e.followState.stateNumber}recover(t){const e=this.inputStream.index;if(this.errorHandler.recover(this,t),this.inputStream.index===e){const e=t.offendingToken;if(!e)throw new Error("Expected exception to have an offending token");const s=e.tokenSource,n=[s,s?.inputStream??null];if(t instanceof Xe){const s=t.getExpectedTokens();if(!s)throw new Error("Expected the exception to provide expected tokens");let i=S.INVALID_TYPE;0!==s.length&&(i=s.minElement);const r=this.getTokenFactory().create(n,i,e.text,S.DEFAULT_CHANNEL,-1,-1,e.line,e.column);this.context.addErrorNode(this.createErrorNode(this.context,r))}else{const t=this.getTokenFactory().create(n,S.INVALID_TYPE,e.text,S.DEFAULT_CHANNEL,-1,-1,e.line,e.column);this.context.addErrorNode(this.createErrorNode(this.context,t))}}}recoverInline(){return this.errorHandler.recoverInline(this)}},os=class extends Map{static{C(this,"MultiMap")}map(t,e){let s=this.get(t);s||(s=new Array,this.set(t,s)),s.push(e)}getPairs(){const t=new Array;for(const e of this.keys()){const s=this.get(e)??[];for(const n of s)t.push([e,n])}return t}toString(){const t=[];return this.forEach(((e,s)=>{t.push(`${s}=[${e.join(", ")}]`)})),`{${t.join(", ")}}`}},as=class extends Error{static{C(this,"CannotInvokeStartRuleError")}constructor(t){super(),this.cause=t}},cs=class{static{C(this,"RuleTagToken")}label;ruleName;bypassTokenType;constructor(t,e,s){this.ruleName=t,this.bypassTokenType=e,this.label=s}get channel(){return S.DEFAULT_CHANNEL}get text(){return void 0!==this.label?"<"+this.label+":"+this.ruleName+">":"<"+this.ruleName+">"}get type(){return this.bypassTokenType}get line(){return 0}get column(){return-1}get tokenIndex(){return-1}get start(){return-1}get stop(){return-1}get tokenSource(){return null}get inputStream(){return null}toString(){return this.ruleName+":"+this.bypassTokenType}},hs=class extends Error{static{C(this,"StartRuleDoesNotConsumeFullPatternError")}},ls=class extends Ke{static{C(this,"TagChunk")}tag;label;constructor(...t){let e,s;if(1===t.length?s=t[0]:(e=t[0],s=t[1]),super(),!s)throw new Error("tag cannot be null or empty");this.label=e,this.tag=s}toString(){return void 0!==this.label?this.label+":"+this.tag:this.tag}},us=class extends Ke{static{C(this,"TextChunk")}text;constructor(t){super(),this.text=t}toString(){return"'"+this.text+"'"}},ds=class extends Z{static{C(this,"TokenTagToken")}tokenName;label;constructor(t,e,s){super({type:e,source:Z.EMPTY_SOURCE}),this.tokenName=t,this.label=s}get text(){return void 0!==this.label?"<"+this.label+":"+this.tokenName+">":"<"+this.tokenName+">"}toString(){return this.tokenName+":"+this.type}},ps=class{static{C(this,"ParseTreePatternMatcher")}start="<";stop=">";escape="\\";lexer;parser;constructor(t,e){this.lexer=t,this.parser=e}setDelimiters(t,e,s){if(null===t||0===t.length)throw new Error("start cannot be null or empty");if(null===e||0===e.length)throw new Error("stop cannot be null or empty");this.start=t,this.stop=e,this.escape=s}matches(...t){switch(t.length){case 2:{const[e,s]=t,n=new os;return null===this.matchImpl(e,s.getPatternTree(),n)}case 3:{const[e,s,n]=t,i=this.compile(s,n);return this.matches(e,i)}default:throw new Error("Invalid number of arguments")}}match(...t){switch(t.length){case 2:{const[e,s]=t,n=new os,i=this.matchImpl(e,s.getPatternTree(),n);return new Ge(e,s,n,i)}case 3:{const[e,s,n]=t,i=this.compile(s,n);return this.match(e,i)}default:throw new Error("Invalid number of arguments")}}compile(t,e){const s=this.tokenize(t),n=new es(s),i=new Fe(n),r=new rs(this.parser.grammarFileName,this.parser.vocabulary,this.parser.ruleNames,this.parser.getATNWithBypassAlts(),i);r.removeErrorListeners();let o=null;try{r.errorHandler=new ts,o=r.parse(e)}catch(t){throw t instanceof Re?t.cause:t instanceof ue?t:t instanceof Error?new as(t):t}if(i.LA(1)!==S.EOF)throw new hs;return new je(this,t,e,o)}getLexer(){return this.lexer}getParser(){return this.parser}tokenize(t){const e=this.split(t),s=new Array;for(const n of e)if(n instanceof ls){const e=n,i=e.tag[0];if(i===i.toUpperCase()){const n=this.parser.getTokenType(e.tag);if(n===S.INVALID_TYPE)throw new Error("Unknown token "+e.tag+" in pattern: "+t);const i=new ds(e.tag,n,e.label);s.push(i)}else{if(i!==i.toLowerCase())throw new Error("invalid tag: "+e.tag+" in pattern: "+t);{const n=this.parser.getRuleIndex(e.tag);if(-1===n)throw new Error("Unknown rule "+e.tag+" in pattern: "+t);const i=this.parser.getATNWithBypassAlts().ruleToTokenType[n];s.push(new cs(e.tag,i,e.label))}}}else{const t=n,e=be.fromString(t.text);this.lexer.inputStream=e;let i=this.lexer.nextToken();for(;i.type!==S.EOF;)s.push(i),i=this.lexer.nextToken()}return s}split(t){let e=0;const s=t.length,n=new Array,i=new Array,r=new Array;for(;e<s;)e===t.indexOf(this.escape+this.start,e)?e+=this.escape.length+this.start.length:e===t.indexOf(this.escape+this.stop,e)?e+=this.escape.length+this.stop.length:e===t.indexOf(this.start,e)?(i.push(e),e+=this.start.length):e===t.indexOf(this.stop,e)?(r.push(e),e+=this.stop.length):e++;if(i.length>r.length)throw new Error("unterminated tag in pattern: "+t);if(i.length<r.length)throw new Error("missing start tag in pattern: "+t);const o=i.length;for(let e=0;e<o;e++)if(i[e]>=r[e])throw new Error("tag delimiters out of order in pattern: "+t);if(0===o){const e=t.substring(0,s);n.push(new us(e))}if(o>0&&i[0]>0){const e=t.substring(0,i[0]);n.push(new us(e))}for(let e=0;e<o;e++){const s=t.substring(i[e]+this.start.length,r[e]);let a,c=s;const h=s.indexOf(":");if(h>=0&&(a=s.substring(0,h),c=s.substring(h+1,s.length)),n.push(new ls(a,c)),e+1<o){const s=t.substring(r[e]+this.stop.length,i[e+1]);n.push(new us(s))}}if(o>0){const e=r[o-1]+this.stop.length;if(e<s){const i=t.substring(e,s);n.push(new us(i))}}for(let t=0;t<n.length;t++){const e=n[t];if(e instanceof us){const s=e,i=s.text.replaceAll(this.escape,"");i.length<s.text.length&&(n[t]=new us(i))}}return n}matchImpl(t,e,s){if(t instanceof X&&e instanceof X){const n=t,i=e;let r;if(n.getSymbol().type===i.getSymbol().type)if(i.getSymbol()instanceof ds){const e=i.getSymbol();s.map(e.tokenName,t),void 0!==e.label&&s.map(e.label,t)}else n.getText()===i.getText()||r||(r=n);else r||(r=n);return r}if(t instanceof tt&&e instanceof tt){let n;const i=this.getRuleTagToken(e);if(i)return t.ruleIndex===e.ruleIndex?(s.map(i.ruleName,t),i.label&&s.map(i.label,t)):n||(n=t),n;if(t.getChildCount()!==e.getChildCount())return n||(n=t),n;const r=t.getChildCount();for(let n=0;n<r;n++){const i=this.matchImpl(t.getChild(n),e.getChild(n),s);if(i)return i}return n}return t}getRuleTagToken(t){if(t instanceof tt&&1===t.getChildCount()&&t.getChild(0)instanceof X){const e=t.getChild(0);if(e.getSymbol()instanceof cs)return e.getSymbol()}}};(class extends oe{static{C(this,"DiagnosticErrorListener")}exactOnly;constructor(t){super(),this.exactOnly=t??!0}reportAmbiguity=C(((t,e,s,n,i,r,o)=>{if(this.exactOnly&&!i)return;const a=this.getDecisionDescription(t,e),c=this.getConflictingAlts(r,o),h=t.tokenStream?.getTextFromInterval(w.of(s,n)),l=`reportAmbiguity d=${a}: ambigAlts=${c}, input='${h}'`;t.notifyErrorListeners(l,null,null)}),"reportAmbiguity");reportAttemptingFullContext=C(((t,e,s,n,i,r)=>{const o=this.getDecisionDescription(t,e),a=t.tokenStream?.getTextFromInterval(w.of(s,n)),c=`reportAttemptingFullContext d=${o}, input='${a}'`;t.notifyErrorListeners(c,null,null)}),"reportAttemptingFullContext");reportContextSensitivity=C(((t,e,s,n,i,r)=>{const o=this.getDecisionDescription(t,e),a=t.tokenStream?.getTextFromInterval(w.of(s,n)),c=`reportContextSensitivity d=${o}, input='${a}'`;t.notifyErrorListeners(c,null,null)}),"reportContextSensitivity");getDecisionDescription=C(((t,e)=>{const s=e.decision,n=e.atnStartState.ruleIndex,i=t.ruleNames;if(n<0||n>=i.length)return s.toString();const r=i[n];return 0===r.length?s.toString():`${s} (${r})`}),"getDecisionDescription");getConflictingAlts=C(((t,e)=>{if(t)return t;const s=new y;for(let t=0;t<e.configs.length;t++)s.set(e.configs[t].alt);return s}),"getConflictingAlts")}),class extends pe{static{C(this,"LexerInterpreter")}decisionToDFA;sharedContextCache=new Le;#d;#p;#g;#x;#m;#f;constructor(t,e,s,n,i,r,o){if(super(o),r.grammarType!==ut.LEXER)throw new Error("IllegalArgumentException: The ATN must be a lexer ATN.");this.#d=t,this.#p=r,this.#g=s.slice(0),this.#x=n.slice(0),this.#m=i.slice(0),this.#f=e,this.decisionToDFA=r.decisionToState.map(((t,e)=>new xe(t,e))),this.interpreter=new Ae(this,r,this.decisionToDFA,this.sharedContextCache)}get atn(){return this.#p}get grammarFileName(){return this.#d}get ruleNames(){return this.#g}get channelNames(){return this.#x}get modeNames(){return this.#m}get vocabulary(){return this.#f}get serializedATN(){throw new Error("The LexerInterpreter does not support the serializedATN property.")}},class t{static{C(this,"RuntimeMetaData")}static VERSION="4.13.1";static getRuntimeVersion(){return t.VERSION}static checkVersion(e,s){const n=t.VERSION;let i=!1,r=!1;i=n!==e&&t.getMajorMinorVersion(n)!==t.getMajorMinorVersion(e),r=n!==s&&t.getMajorMinorVersion(n)!==t.getMajorMinorVersion(s),i&&console.error(`ANTLR Tool version ${e} used for code generation does not match the current runtime version ${n}`),r&&console.error(`ANTLR Runtime version ${s} used for parser compilation does not match the current runtime version ${n}`)}static getMajorMinorVersion(t){const e=t.indexOf("."),s=e>=0?t.indexOf(".",e+1):-1,n=t.indexOf("-");let i=t.length;return s>=0&&(i=Math.min(i,s)),n>=0&&(i=Math.min(i,n)),t.substring(0,i)}},class t{static{C(this,"TokenStreamRewriter")}static DEFAULT_PROGRAM_NAME="default";static PROGRAM_INIT_SIZE=100;static MIN_TOKEN_INDEX=0;tokens;programs=new Map;lastRewriteTokenIndexes;constructor(t){this.tokens=t}getTokenStream(){return this.tokens}insertAfter(e,s,n=t.DEFAULT_PROGRAM_NAME){let i;i="number"==typeof e?e:e.tokenIndex;const r=this.getProgram(n),o=new xs(this.tokens,i,r.length,s);r.push(o)}insertBefore(e,s,n=t.DEFAULT_PROGRAM_NAME){let i;i="number"==typeof e?e:e.tokenIndex;const r=this.getProgram(n),o=new fs(this.tokens,i,r.length,s);r.push(o)}replaceSingle(e,s,n=t.DEFAULT_PROGRAM_NAME){this.replace(e,e,s,n)}replace(e,s,n,i=t.DEFAULT_PROGRAM_NAME){if("number"!=typeof e&&(e=e.tokenIndex),"number"!=typeof s&&(s=s.tokenIndex),e>s||e<0||s<0||s>=this.tokens.size)throw new RangeError(`replace: range invalid: ${e}..${s}(size=${this.tokens.size})`);const r=this.getProgram(i),o=new ms(this.tokens,e,s,r.length,n);r.push(o)}delete(e,s,n=t.DEFAULT_PROGRAM_NAME){null==s&&(s=e),this.replace(e,s,null,n)}getProgram(t){let e=this.programs.get(t);return null==e&&(e=this.initializeProgram(t)),e}initializeProgram(t){const e=[];return this.programs.set(t,e),e}getText(e,s=t.DEFAULT_PROGRAM_NAME){let n;n=e instanceof w?e:new w(0,this.tokens.size-1),"string"==typeof e&&(s=e);const i=this.programs.get(s);let r=n.start,o=n.stop;if(o>this.tokens.size-1&&(o=this.tokens.size-1),r<0&&(r=0),null==i||0===i.length)return this.tokens.getTextFromInterval(new w(r,o));const a=[],c=this.reduceToSingleOperationPerIndex(i);let h=r;for(;h<=o&&h<this.tokens.size;){const t=c.get(h);c.delete(h);const e=this.tokens.get(h);null==t?(e.type!==S.EOF&&a.push(String(e.text)),h++):h=t.execute(a)}if(o===this.tokens.size-1)for(const t of c.values())t&&t.index>=this.tokens.size-1&&a.push(String(t.text));return a.join("")}reduceToSingleOperationPerIndex(t){for(let e=0;e<t.length;e++){const s=t[e];if(null==s)continue;if(!(s instanceof ms))continue;const n=s,i=this.getKindOfOps(t,fs,e);for(const e of i)e.index===n.index?(t[e.instructionIndex]=null,n.text=String(e.text)+(null!=n.text?n.text.toString():"")):e.index>n.index&&e.index<=n.lastIndex&&(t[e.instructionIndex]=null);const r=this.getKindOfOps(t,ms,e);for(const e of r){if(e.index>=n.index&&e.lastIndex<=n.lastIndex){t[e.instructionIndex]=null;continue}const s=e.lastIndex<n.index||e.index>n.lastIndex;if(null!=e.text||null!=n.text||s){if(!s)throw new Error(`replace op boundaries of ${n} overlap with previous ${e}`)}else t[e.instructionIndex]=null,n.index=Math.min(e.index,n.index),n.lastIndex=Math.max(e.lastIndex,n.lastIndex)}}for(let e=0;e<t.length;e++){const s=t[e];if(null==s)continue;if(!(s instanceof fs))continue;const n=s,i=this.getKindOfOps(t,fs,e);for(const e of i)e.index===n.index&&(e instanceof xs?(n.text=this.catOpText(e.text,n.text),t[e.instructionIndex]=null):e instanceof fs&&(n.text=this.catOpText(n.text,e.text),t[e.instructionIndex]=null));const r=this.getKindOfOps(t,ms,e);for(const s of r)if(n.index!==s.index){if(n.index>=s.index&&n.index<=s.lastIndex)throw new Error(`insert op ${n} within boundaries of previous ${s}`)}else s.text=this.catOpText(n.text,s.text),t[e]=null}const e=new Map;for(const s of t)if(null!=s){if(null!=e.get(s.index))throw new Error("should only be one op per index");e.set(s.index,s)}return e}catOpText(t,e){let s="",n="";return null!=t&&(s=t.toString()),null!=e&&(n=e.toString()),s+n}getKindOfOps(t,e,s){return t.slice(0,s).filter((t=>t&&t instanceof e))}};var gs=class{static{C(this,"RewriteOperation")}instructionIndex;index;text;tokens;constructor(t,e,s,n){this.tokens=t,this.instructionIndex=s,this.index=e,this.text=void 0===n?"":n}execute(t){return this.index}toString(){return"<RewriteOperation@"+this.tokens.get(this.index)+':"'+this.text+'">'}},fs=class extends gs{static{C(this,"InsertBeforeOp")}constructor(t,e,s,n){super(t,e,s,n)}execute(t){return this.text&&t.push(this.text.toString()),this.tokens.get(this.index).type!==S.EOF&&t.push(String(this.tokens.get(this.index).text)),this.index+1}toString(){return"<InsertBeforeOp@"+this.tokens.get(this.index)+':"'+this.text+'">'}},xs=class extends fs{static{C(this,"InsertAfterOp")}constructor(t,e,s,n){super(t,e+1,s,n)}toString(){return"<InsertAfterOp@"+this.tokens.get(this.index)+':"'+this.text+'">'}},ms=class extends gs{static{C(this,"ReplaceOp")}lastIndex;constructor(t,e,s,n,i){super(t,e,n,i),this.lastIndex=s}execute(t){return this.text&&t.push(this.text.toString()),this.lastIndex+1}toString(){return null==this.text?"<DeleteOp@"+this.tokens.get(this.index)+".."+this.tokens.get(this.lastIndex)+">":"<ReplaceOp@"+this.tokens.get(this.index)+".."+this.tokens.get(this.lastIndex)+':"'+this.text+'">'}};(class{static{C(this,"UnbufferedTokenStream")}tokenSource;tokens;n;p=0;numMarkers=0;lastToken;lastTokenBufferStart;currentTokenIndex=0;constructor(t,e){this.tokenSource=t,e=e??256,this.tokens=new Array(e),this.n=0,this.fill(1)}get(t){const e=this.getBufferStartIndex();if(t<e||t>=e+this.n)throw new Error("get("+t+") outside buffer: "+e+".."+(e+this.n));return this.tokens[t-e]}LT(t){if(-1===t)return this.lastToken;this.sync(t);const e=this.p+t-1;if(e<0)throw new Error("LT("+t+") gives negative index");return e>=this.n?this.tokens[this.n-1]:this.tokens[e]}LA(t){return this.LT(t).type}getText(){return""}getTextFromContext(t){return this.getTextFromInterval(t.getSourceInterval())}getTextFromInterval(t){const e=this.getBufferStartIndex(),s=e+this.tokens.length-1,n=t.start,i=t.stop;if(n<e||i>s)throw new Error("interval "+t+" not in token buffer window: "+e+".."+s);const r=i-e;let o="";for(let t=n-e;t<=r;t++){o+=this.tokens[t].text}return o}getTextFromRange(t,e){return this.getTextFromInterval(w.of(t.tokenIndex,e.tokenIndex))}consume(){if(this.LA(1)===S.EOF)throw new Error("cannot consume EOF");this.lastToken=this.tokens[this.p],this.p===this.n-1&&0===this.numMarkers&&(this.n=0,this.p=-1,this.lastTokenBufferStart=this.lastToken),this.p++,this.currentTokenIndex++,this.sync(1)}mark(){0===this.numMarkers&&(this.lastTokenBufferStart=this.lastToken);const t=-this.numMarkers-1;return this.numMarkers++,t}release(t){if(t!==-this.numMarkers)throw new Error("release() called with an invalid marker.");this.numMarkers--,0===this.numMarkers&&(this.p>0&&(this.tokens.copyWithin(0,this.p,this.n),this.n=this.n-this.p,this.p=0),this.lastTokenBufferStart=this.lastToken)}get index(){return this.currentTokenIndex}seek(t){if(t===this.currentTokenIndex)return;t>this.currentTokenIndex&&(this.sync(t-this.currentTokenIndex),t=Math.min(t,this.getBufferStartIndex()+this.n-1));const e=this.getBufferStartIndex(),s=t-e;if(s<0)throw new Error("cannot seek to negative index "+t);if(s>=this.n)throw new Error("seek to index outside buffer: "+t+" not in "+e+".."+(e+this.n));this.p=s,this.currentTokenIndex=t,0===this.p?this.lastToken=this.lastTokenBufferStart:this.lastToken=this.tokens[this.p-1]}get size(){throw new Error("Unbuffered stream cannot know its size")}getSourceName(){return this.tokenSource.sourceName}setLine(t){this.tokenSource.line=t}setColumn(t){this.tokenSource.column=t}sync(t){const e=this.p+t-1-this.n+1;e>0&&this.fill(e)}fill(t){for(let e=0;e<t;e++){if(this.n>0&&this.tokens[this.n-1].type===S.EOF)return e;const t=this.tokenSource.nextToken();this.add(t)}return t}add(t){this.n>=this.tokens.length&&(this.tokens.length=2*this.tokens.length),_e(t)&&t.setTokenIndex(this.getBufferStartIndex()+this.n),this.tokens[this.n++]=t}getBufferStartIndex(){return this.currentTokenIndex-this.p}});class Ts extends pe{static T__0=1;static T__1=2;static T__2=3;static T__3=4;static T__4=5;static T__5=6;static INT=7;static WS=8;static channelNames=["DEFAULT_TOKEN_CHANNEL","HIDDEN"];static literalNames=[null,"'*'","'/'","'+'","'-'","'('","')'"];static symbolicNames=[null,null,null,null,null,null,null,"INT","WS"];static modeNames=["DEFAULT_MODE"];static ruleNames=["T__0","T__1","T__2","T__3","T__4","T__5","INT","WS"];constructor(t){super(t),this.interpreter=new Ae(this,Ts._ATN,Ts.decisionsToDFA,new Le)}get grammarFileName(){return"SimpleLang.g4"}get literalNames(){return Ts.literalNames}get symbolicNames(){return Ts.symbolicNames}get ruleNames(){return Ts.ruleNames}get serializedATN(){return Ts._serializedATN}get channelNames(){return Ts.channelNames}get modeNames(){return Ts.modeNames}static _serializedATN=[4,0,8,41,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,4,6,31,8,6,11,6,12,6,32,1,7,4,7,36,8,7,11,7,12,7,37,1,7,1,7,0,0,8,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,1,0,2,1,0,48,57,3,0,9,10,13,13,32,32,42,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,1,17,1,0,0,0,3,19,1,0,0,0,5,21,1,0,0,0,7,23,1,0,0,0,9,25,1,0,0,0,11,27,1,0,0,0,13,30,1,0,0,0,15,35,1,0,0,0,17,18,5,42,0,0,18,2,1,0,0,0,19,20,5,47,0,0,20,4,1,0,0,0,21,22,5,43,0,0,22,6,1,0,0,0,23,24,5,45,0,0,24,8,1,0,0,0,25,26,5,40,0,0,26,10,1,0,0,0,27,28,5,41,0,0,28,12,1,0,0,0,29,31,7,0,0,0,30,29,1,0,0,0,31,32,1,0,0,0,32,30,1,0,0,0,32,33,1,0,0,0,33,14,1,0,0,0,34,36,7,1,0,0,35,34,1,0,0,0,36,37,1,0,0,0,37,35,1,0,0,0,37,38,1,0,0,0,38,39,1,0,0,0,39,40,6,7,0,0,40,16,1,0,0,0,3,0,32,37,1,6,0,0];static __ATN;static get _ATN(){return Ts.__ATN||(Ts.__ATN=(new Jt).deserialize(Ts._serializedATN)),Ts.__ATN}static vocabulary=new R(Ts.literalNames,Ts.symbolicNames,[]);get vocabulary(){return Ts.vocabulary}static decisionsToDFA=Ts._ATN.decisionToState.map(((t,e)=>new xe(t,e)))}class Ss extends is{static T__0=1;static T__1=2;static T__2=3;static T__3=4;static T__4=5;static T__5=6;static INT=7;static WS=8;static RULE_prog=0;static RULE_expression=1;static literalNames=[null,"'*'","'/'","'+'","'-'","'('","')'"];static symbolicNames=[null,null,null,null,null,null,null,"INT","WS"];static ruleNames=["prog","expression"];get grammarFileName(){return"SimpleLang.g4"}get literalNames(){return Ss.literalNames}get symbolicNames(){return Ss.symbolicNames}get ruleNames(){return Ss.ruleNames}get serializedATN(){return Ss._serializedATN}createFailedPredicateException(t,e){return new Qe(this,t,e)}constructor(t){super(t),this.interpreter=new ve(this,Ss._ATN,Ss.decisionsToDFA,new Le)}prog(){let t=new Es(this.context,this.state);this.enterRule(t,0,Ss.RULE_prog);try{this.enterOuterAlt(t,1),this.state=4,this.expression(0),this.state=5,this.match(Ss.EOF)}catch(t){if(!(t instanceof ue))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}expression(t){void 0===t&&(t=0);let e,s=this.context,n=this.state,i=new As(this.context,n),r=i;this.enterRecursionRule(i,2,Ss.RULE_expression,t);try{let t;switch(this.enterOuterAlt(i,1),this.state=13,this.errorHandler.sync(this),this.tokenStream.LA(1)){case Ss.INT:this.state=8,this.match(Ss.INT);break;case Ss.T__4:this.state=9,this.match(Ss.T__4),this.state=10,this.expression(0),this.state=11,this.match(Ss.T__5);break;default:throw new ke(this)}for(this.context.stop=this.tokenStream.LT(-1),this.state=23,this.errorHandler.sync(this),t=this.interpreter.adaptivePredict(this.tokenStream,2,this.context);2!==t&&t!==ut.INVALID_ALT_NUMBER;){if(1===t)switch(null!=this.parseListeners&&this.triggerExitRuleEvent(),r=i,this.state=21,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,1,this.context)){case 1:if(i=new As(s,n),this.pushNewRecursionContext(i,2,Ss.RULE_expression),this.state=15,!this.precpred(this.context,4))throw this.createFailedPredicateException("this.precpred(this.context, 4)");this.state=16,i._op=this.tokenStream.LT(1),e=this.tokenStream.LA(1),1!==e&&2!==e?i._op=this.errorHandler.recoverInline(this):(this.errorHandler.reportMatch(this),this.consume()),this.state=17,this.expression(5);break;case 2:if(i=new As(s,n),this.pushNewRecursionContext(i,2,Ss.RULE_expression),this.state=18,!this.precpred(this.context,3))throw this.createFailedPredicateException("this.precpred(this.context, 3)");this.state=19,i._op=this.tokenStream.LT(1),e=this.tokenStream.LA(1),3!==e&&4!==e?i._op=this.errorHandler.recoverInline(this):(this.errorHandler.reportMatch(this),this.consume()),this.state=20,this.expression(4)}this.state=25,this.errorHandler.sync(this),t=this.interpreter.adaptivePredict(this.tokenStream,2,this.context)}}catch(t){if(!(t instanceof ue))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.unrollRecursionContexts(s)}return i}sempred(t,e,s){return 1!==e||this.expression_sempred(t,s)}expression_sempred(t,e){switch(e){case 0:return this.precpred(this.context,4);case 1:return this.precpred(this.context,3)}return!0}static _serializedATN=[4,1,8,27,2,0,7,0,2,1,7,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,3,1,14,8,1,1,1,1,1,1,1,1,1,1,1,1,1,5,1,22,8,1,10,1,12,1,25,9,1,1,1,0,1,2,2,0,2,0,2,1,0,1,2,1,0,3,4,27,0,4,1,0,0,0,2,13,1,0,0,0,4,5,3,2,1,0,5,6,5,0,0,1,6,1,1,0,0,0,7,8,6,1,-1,0,8,14,5,7,0,0,9,10,5,5,0,0,10,11,3,2,1,0,11,12,5,6,0,0,12,14,1,0,0,0,13,7,1,0,0,0,13,9,1,0,0,0,14,23,1,0,0,0,15,16,10,4,0,0,16,17,7,0,0,0,17,22,3,2,1,5,18,19,10,3,0,0,19,20,7,1,0,0,20,22,3,2,1,4,21,15,1,0,0,0,21,18,1,0,0,0,22,25,1,0,0,0,23,21,1,0,0,0,23,24,1,0,0,0,24,3,1,0,0,0,25,23,1,0,0,0,3,13,21,23];static __ATN;static get _ATN(){return Ss.__ATN||(Ss.__ATN=(new Jt).deserialize(Ss._serializedATN)),Ss.__ATN}static vocabulary=new R(Ss.literalNames,Ss.symbolicNames,[]);get vocabulary(){return Ss.vocabulary}static decisionsToDFA=Ss._ATN.decisionToState.map(((t,e)=>new xe(t,e)))}class Es extends tt{constructor(t,e){super(t,e)}expression(){return this.getRuleContext(0,As)}EOF(){return this.getToken(Ss.EOF,0)}get ruleIndex(){return Ss.RULE_prog}enterRule(t){t.enterProg&&t.enterProg(this)}exitRule(t){t.exitProg&&t.exitProg(this)}accept(t){return t.visitProg?t.visitProg(this):t.visitChildren(this)}}class As extends tt{_op;constructor(t,e){super(t,e)}INT(){return this.getToken(Ss.INT,0)}expression(t){return void 0===t?this.getRuleContexts(As):this.getRuleContext(t,As)}get ruleIndex(){return Ss.RULE_expression}enterRule(t){t.enterExpression&&t.enterExpression(this)}exitRule(t){t.exitExpression&&t.exitExpression(this)}accept(t){return t.visitExpression?t.visitExpression(this):t.visitChildren(this)}}class Cs extends Oe{visitProg(t){return this.visit(t.expression())}visitExpression(t){if(1===t.getChildCount())return parseInt(t.getText());if(3===t.getChildCount()){if("("===t.getChild(0).getText()&&")"===t.getChild(2).getText())return this.visit(t.getChild(1));{const e=this.visit(t.getChild(0)),s=t.getChild(1).getText(),n=this.visit(t.getChild(2));switch(s){case"+":return e+n;case"-":return e-n;case"*":return e*n;case"/":if(0===n)throw new Error("Division by zero");return e/n;default:throw new Error(`Unknown operator: ${s}`)}}}throw new Error(`Invalid expression: ${t.getText()}`)}defaultResult(){return 0}aggregateResult(t,e){return e}}!function(t,e=self){const s=new f(e,!1);s.registerPlugin(p,t)}(class extends x{executionCount;visitor;constructor(t){super(t),this.executionCount=0,this.visitor=new Cs}async evaluateChunk(t){this.executionCount++;try{const e=be.fromString(t),s=new Ts(e),n=new Fe(s),i=new Ss(n).prog(),r=this.visitor.visit(i);this.conductor.sendOutput(`Result of expression: ${r}`)}catch(t){t instanceof Error?this.conductor.sendOutput(`Error: ${t.message}`):this.conductor.sendOutput(`Error: ${String(t)}`)}}})}();
//# sourceMappingURL=index.js.map
